

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Jan 16 12:02:14 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F87K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    31   000000                     
    32                           ; Generated 06/04/2022 GMT
    33                           ; 
    34                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F87K22 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66   000000                     _ANCON2	set	3875
    67   000000                     _ANCON1	set	3876
    68   000000                     _ANCON0	set	3877
    69   000000                     _MEMCON	set	3878
    70   000000                     _BAUDCON1	set	3941
    71   000000                     _RCSTA1	set	4011
    72   000000                     _TXSTA1	set	4012
    73   000000                     _RCSTA2	set	3874
    74   000000                     _PIR1bits	set	3998
    75   000000                     _SSP1CON2bits	set	4037
    76   000000                     _SSP1CON1bits	set	4038
    77   000000                     _SSP2CON1bits	set	3943
    78   000000                     _LATJ	set	3985
    79   000000                     _TXREG2	set	3868
    80   000000                     _SPBRG2	set	3870
    81   000000                     _SPBRGH2	set	3871
    82   000000                     _BAUDCON2	set	3872
    83   000000                     _TXSTA2	set	3873
    84   000000                     _TXREG1	set	4013
    85   000000                     _SPBRG1	set	4015
    86   000000                     _SPBRGH1	set	4052
    87   000000                     _SSP2CON1	set	3943
    88   000000                     _SSP2STAT	set	3944
    89   000000                     _PORTH	set	3975
    90   000000                     _LATH	set	3984
    91   000000                     _TX1IF	set	31988
    92   000000                     _INTCON2bits	set	4081
    93   000000                     _SSP1CON2	set	4037
    94   000000                     _SSP1CON1	set	4038
    95   000000                     _SSP1STAT	set	4039
    96   000000                     _PIR2bits	set	4001
    97   000000                     _TRISCbits	set	3988
    98   000000                     _TRISAbits	set	3986
    99   000000                     _LATJbits	set	3985
   100   000000                     _TRISH	set	3993
   101   000000                     _TRISJ	set	3994
   102   000000                     _LATCbits	set	3979
   103   000000                     _LATFbits	set	3982
   104   000000                     _LATGbits	set	3983
   105   000000                     _PADCFG1bits	set	3923
   106   000000                     _TRISFbits	set	3991
   107   000000                     _TRISDbits	set	3989
   108   000000                     _TRISGbits	set	3992
   109   000000                     _SSP2BUF	set	3946
   110   000000                     _SSP1BUF	set	4041
   111   000000                     _SSP1ADD	set	4040
   112                           
   113                           	psect	smallconst
   114   001000                     __psmallconst:
   115                           	callstack 0
   116   001000  00                 	db	0
   117   001001                     STR_1:
   118   001001  48                 	db	72	;'H'
   119   001002  65                 	db	101	;'e'
   120   001003  6C                 	db	108	;'l'
   121   001004  6C                 	db	108	;'l'
   122   001005  6F                 	db	111	;'o'
   123   001006  20                 	db	32
   124   001007  57                 	db	87	;'W'
   125   001008  6F                 	db	111	;'o'
   126   001009  72                 	db	114	;'r'
   127   00100A  6C                 	db	108	;'l'
   128   00100B  64                 	db	100	;'d'
   129   00100C  00                 	db	0
   130   00100D  00                 	db	0	; dummy byte at the end
   131   000000                     
   132                           ; #config settings
   133                           
   134                           	psect	cinit
   135   0015D6                     __pcinit:
   136                           	callstack 0
   137   0015D6                     start_initialization:
   138                           	callstack 0
   139   0015D6                     __initialization:
   140                           	callstack 0
   141                           
   142                           ; Clear objects allocated to COMRAM (3 bytes)
   143   0015D6  6A11               	clrf	(__pbssCOMRAM+2)& (0+255),c
   144   0015D8  6A10               	clrf	(__pbssCOMRAM+1)& (0+255),c
   145   0015DA  6A0F               	clrf	__pbssCOMRAM& (0+255),c
   146   0015DC                     end_of_initialization:
   147                           	callstack 0
   148   0015DC                     __end_of__initialization:
   149                           	callstack 0
   150   0015DC  0100               	movlb	0
   151   0015DE  EFBD  F008         	goto	_main	;jump to C main() function
   152                           
   153                           	psect	bssCOMRAM
   154   00000F                     __pbssCOMRAM:
   155                           	callstack 0
   156   00000F                     	ds	3
   157                           
   158                           	psect	cstackCOMRAM
   159   000001                     __pcstackCOMRAM:
   160                           	callstack 0
   161   000001                     ?_I2C_Read:
   162                           	callstack 0
   163   000001                     write_d_aff@data:
   164                           	callstack 0
   165   000001                     write_c_aff@command:
   166                           	callstack 0
   167   000001                     check_status_ok@res:
   168                           	callstack 0
   169   000001                     delai_us_char@ucdelai:
   170                           	callstack 0
   171   000001                     I2C_Write_Register@Address:
   172                           	callstack 0
   173   000001                     I2C_Read@Address:
   174                           	callstack 0
   175                           
   176                           ; 2 bytes @ 0x0
   177   000001                     	ds	1
   178   000002                     wait_status_ok@err:
   179                           	callstack 0
   180                           
   181                           ; 1 bytes @ 0x1
   182   000002                     	ds	1
   183   000003                     wait_status_ok@status:
   184                           	callstack 0
   185   000003                     I2C_Write_Register@Register:
   186                           	callstack 0
   187                           
   188                           ; 2 bytes @ 0x2
   189   000003                     	ds	1
   190   000004                     wait_status_ok@res:
   191                           	callstack 0
   192                           
   193                           ; 1 bytes @ 0x3
   194   000004                     	ds	1
   195   000005                     command@cmd:
   196                           	callstack 0
   197   000005                     d1command@cmd:
   198                           	callstack 0
   199   000005                     d2command@d2:
   200                           	callstack 0
   201   000005                     I2C_Write_Register@data:
   202                           	callstack 0
   203                           
   204                           ; 2 bytes @ 0x4
   205   000005                     	ds	1
   206   000006                     d1command@d1:
   207                           	callstack 0
   208   000006                     d2command@cmd:
   209                           	callstack 0
   210                           
   211                           ; 1 bytes @ 0x5
   212   000006                     	ds	1
   213   000007                     d1command@res:
   214                           	callstack 0
   215   000007                     d2command@d1:
   216                           	callstack 0
   217                           
   218                           ; 1 bytes @ 0x6
   219   000007                     	ds	1
   220   000008                     d2command@res:
   221                           	callstack 0
   222   000008                     draw_string@tableau:
   223                           	callstack 0
   224                           
   225                           ; 2 bytes @ 0x7
   226   000008                     	ds	1
   227   000009                     initialisation_afficheur@error_count:
   228                           	callstack 0
   229   000009                     goto_lico@colonne:
   230                           	callstack 0
   231   000009                     clear_text@add:
   232                           	callstack 0
   233   000009                     clear_graphics@add:
   234                           	callstack 0
   235                           
   236                           ; 2 bytes @ 0x8
   237   000009                     	ds	1
   238   00000A                     ??_goto_lico:
   239                           
   240                           ; 1 bytes @ 0x9
   241   00000A                     	ds	2
   242   00000C                     goto_lico@ligne:
   243                           	callstack 0
   244                           
   245                           ; 1 bytes @ 0xB
   246   00000C                     	ds	1
   247   00000D                     goto_lico@adr:
   248                           	callstack 0
   249                           
   250                           ; 2 bytes @ 0xC
   251   00000D                     	ds	2
   252   00000F                     
   253                           ; 1 bytes @ 0xE
   254 ;;
   255 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   256 ;;
   257 ;; *************** function _main *****************
   258 ;; Defined at:
   259 ;;		line 49 in file "main.c"
   260 ;; Parameters:    Size  Location     Type
   261 ;;		None
   262 ;; Auto vars:     Size  Location     Type
   263 ;;		None
   264 ;; Return value:  Size  Location     Type
   265 ;;                  1    wreg      void 
   266 ;; Registers used:
   267 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   268 ;; Tracked objects:
   269 ;;		On entry : 0/0
   270 ;;		On exit  : 0/0
   271 ;;		Unchanged: 0/0
   272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   277 ;;Total ram usage:        0 bytes
   278 ;; Hardware stack levels required when called: 4
   279 ;; This function calls:
   280 ;;		_I2C_Init
   281 ;;		_I2C_Read
   282 ;;		_I2C_Write_Register
   283 ;;		_clear_graphics
   284 ;;		_clear_text
   285 ;;		_draw_string
   286 ;;		_goto_lico
   287 ;;		_initialisation_afficheur
   288 ;;		_initialisation_des_ports
   289 ;; This function is called by:
   290 ;;		Startup code after reset
   291 ;; This function uses a non-reentrant model
   292 ;;
   293                           
   294                           	psect	text0
   295   00117A                     __ptext0:
   296                           	callstack 0
   297   00117A                     _main:
   298                           	callstack 27
   299   00117A                     
   300                           ;main.c: 51:     initialisation_des_ports();
   301   00117A  EC9B  F00A         	call	_initialisation_des_ports	;wreg free
   302   00117E                     
   303                           ;main.c: 52:     initialisation_afficheur();
   304   00117E  EC07  F008         	call	_initialisation_afficheur	;wreg free
   305   001182                     
   306                           ;main.c: 53:     clear_text();
   307   001182  EC2D  F00A         	call	_clear_text	;wreg free
   308   001186                     
   309                           ;main.c: 54:     clear_graphics();
   310   001186  EC4A  F00A         	call	_clear_graphics	;wreg free
   311   00118A                     
   312                           ;main.c: 56:     goto_lico(0,0);
   313   00118A  0E00               	movlw	0
   314   00118C  6E09               	movwf	goto_lico@colonne^0,c
   315   00118E  0E00               	movlw	0
   316   001190  EC3B  F009         	call	_goto_lico
   317   001194                     
   318                           ;main.c: 57:     draw_string("Hello World");
   319   001194  0E01               	movlw	low STR_1
   320   001196  6E08               	movwf	draw_string@tableau^0,c
   321   001198  0E10               	movlw	high STR_1
   322   00119A  6E09               	movwf	(draw_string@tableau+1)^0,c
   323   00119C  ECFE  F008         	call	_draw_string	;wreg free
   324   0011A0                     
   325                           ;main.c: 58:     I2C_Init();
   326   0011A0  ECC3  F00A         	call	_I2C_Init	;wreg free
   327   0011A4                     
   328                           ;main.c: 59:     I2C_Write_Register(0xA0, 0x08, 0x00);
   329   0011A4  0E00               	movlw	0
   330   0011A6  6E02               	movwf	(I2C_Write_Register@Address+1)^0,c
   331   0011A8  0EA0               	movlw	160
   332   0011AA  6E01               	movwf	I2C_Write_Register@Address^0,c
   333   0011AC  0E00               	movlw	0
   334   0011AE  6E04               	movwf	(I2C_Write_Register@Register+1)^0,c
   335   0011B0  0E08               	movlw	8
   336   0011B2  6E03               	movwf	I2C_Write_Register@Register^0,c
   337   0011B4  0E00               	movlw	0
   338   0011B6  6E06               	movwf	(I2C_Write_Register@data+1)^0,c
   339   0011B8  0E00               	movlw	0
   340   0011BA  6E05               	movwf	I2C_Write_Register@data^0,c
   341   0011BC  EC78  F008         	call	_I2C_Write_Register	;wreg free
   342   0011C0                     
   343                           ;main.c: 60:     I2C_Write_Register(0xA0,0x00,0x20);
   344   0011C0  0E00               	movlw	0
   345   0011C2  6E02               	movwf	(I2C_Write_Register@Address+1)^0,c
   346   0011C4  0EA0               	movlw	160
   347   0011C6  6E01               	movwf	I2C_Write_Register@Address^0,c
   348   0011C8  0E00               	movlw	0
   349   0011CA  6E04               	movwf	(I2C_Write_Register@Register+1)^0,c
   350   0011CC  0E00               	movlw	0
   351   0011CE  6E03               	movwf	I2C_Write_Register@Register^0,c
   352   0011D0  0E00               	movlw	0
   353   0011D2  6E06               	movwf	(I2C_Write_Register@data+1)^0,c
   354   0011D4  0E20               	movlw	32
   355   0011D6  6E05               	movwf	I2C_Write_Register@data^0,c
   356   0011D8  EC78  F008         	call	_I2C_Write_Register	;wreg free
   357   0011DC                     l1802:
   358                           
   359                           ;main.c: 63:     {;main.c: 64:         draw_string(I2C_Read(0xA1));
   360   0011DC  0E00               	movlw	0
   361   0011DE  6E02               	movwf	(I2C_Read@Address+1)^0,c
   362   0011E0  0EA1               	movlw	161
   363   0011E2  6E01               	movwf	I2C_Read@Address^0,c
   364   0011E4  EC67  F00A         	call	_I2C_Read	;wreg free
   365   0011E8  C001  F008         	movff	?_I2C_Read,draw_string@tableau
   366   0011EC  C002  F009         	movff	?_I2C_Read+1,draw_string@tableau+1
   367   0011F0  ECFE  F008         	call	_draw_string	;wreg free
   368   0011F4  EFEE  F008         	goto	l1802
   369   0011F8  EF00  F000         	goto	start
   370   0011FC                     __end_of_main:
   371                           	callstack 0
   372                           
   373 ;; *************** function _initialisation_des_ports *****************
   374 ;; Defined at:
   375 ;;		line 18 in file "main.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;		None
   378 ;; Auto vars:     Size  Location     Type
   379 ;;		None
   380 ;; Return value:  Size  Location     Type
   381 ;;                  1    wreg      void 
   382 ;; Registers used:
   383 ;;		wreg, status,2
   384 ;; Tracked objects:
   385 ;;		On entry : 0/0
   386 ;;		On exit  : 0/0
   387 ;;		Unchanged: 0/0
   388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   393 ;;Total ram usage:        0 bytes
   394 ;; Hardware stack levels used: 1
   395 ;; This function calls:
   396 ;;		Nothing
   397 ;; This function is called by:
   398 ;;		_main
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           
   402                           	psect	text1
   403   001536                     __ptext1:
   404                           	callstack 0
   405   001536                     _initialisation_des_ports:
   406                           	callstack 30
   407   001536                     
   408                           ;main.c: 21:     MEMCON=0xA0;
   409   001536  0EA0               	movlw	160
   410   001538  010F               	movlb	15	; () banked
   411   00153A  6F26               	movwf	38,b	;volatile
   412                           
   413                           ;main.c: 24:     ANCON0=0x03;
   414   00153C  0E03               	movlw	3
   415   00153E  6F25               	movwf	37,b	;volatile
   416                           
   417                           ;main.c: 25:     ANCON1=0x08;
   418   001540  0E08               	movlw	8
   419   001542  6F24               	movwf	36,b	;volatile
   420                           
   421                           ;main.c: 26:     ANCON2=0x00;
   422   001544  0E00               	movlw	0
   423   001546  6F23               	movwf	35,b	;volatile
   424   001548                     
   425                           ; BSR set to: 15
   426                           ;main.c: 30:     LATCbits.LATC2=0;
   427   001548  948B               	bcf	139,2,c	;volatile
   428   00154A                     
   429                           ; BSR set to: 15
   430                           ;main.c: 31:     LATCbits.LATC1=0;
   431   00154A  928B               	bcf	139,1,c	;volatile
   432   00154C                     
   433                           ; BSR set to: 15
   434                           ;main.c: 32:     LATGbits.LATG0=0;
   435   00154C  908F               	bcf	143,0,c	;volatile
   436   00154E                     
   437                           ; BSR set to: 15
   438                           ;main.c: 35:     TRISAbits.TRISA2=0;
   439   00154E  9492               	bcf	146,2,c	;volatile
   440   001550                     
   441                           ; BSR set to: 15
   442                           ;main.c: 36:     TRISAbits.TRISA3=0;
   443   001550  9692               	bcf	146,3,c	;volatile
   444   001552                     
   445                           ; BSR set to: 15
   446                           ;main.c: 37:     TRISAbits.TRISA4=0;
   447   001552  9892               	bcf	146,4,c	;volatile
   448   001554                     
   449                           ; BSR set to: 15
   450                           ;main.c: 38:     TRISAbits.TRISA5=0;
   451   001554  9A92               	bcf	146,5,c	;volatile
   452   001556                     
   453                           ; BSR set to: 15
   454                           ;main.c: 39:     TRISCbits.TRISC2=0;
   455   001556  9494               	bcf	148,2,c	;volatile
   456   001558                     
   457                           ; BSR set to: 15
   458                           ;main.c: 40:     TRISCbits.TRISC1=0;
   459   001558  9294               	bcf	148,1,c	;volatile
   460   00155A                     
   461                           ; BSR set to: 15
   462                           ;main.c: 41:     TRISGbits.TRISG0=0;
   463   00155A  9098               	bcf	152,0,c	;volatile
   464   00155C                     
   465                           ; BSR set to: 15
   466                           ;main.c: 44:     INTCON2bits.RBPU=0;
   467   00155C  9EF1               	bcf	241,7,c	;volatile
   468   00155E                     
   469                           ; BSR set to: 15
   470                           ;main.c: 45:     PADCFG1bits.REPU=1;
   471   00155E  8D53               	bsf	83,6,b	;volatile
   472   001560                     
   473                           ; BSR set to: 15
   474   001560  0012               	return		;funcret
   475   001562                     __end_of_initialisation_des_ports:
   476                           	callstack 0
   477                           
   478 ;; *************** function _initialisation_afficheur *****************
   479 ;; Defined at:
   480 ;;		line 165 in file "afficheur.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;  error_count     1    8[COMRAM] unsigned char 
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      void 
   487 ;; Registers used:
   488 ;;		wreg, status,2, status,0, cstack
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   495 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   497 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   498 ;;Total ram usage:        1 bytes
   499 ;; Hardware stack levels used: 1
   500 ;; Hardware stack levels required when called: 3
   501 ;; This function calls:
   502 ;;		_check_status_ok
   503 ;;		_command
   504 ;;		_d1command
   505 ;;		_d2command
   506 ;;		_delai_us_char
   507 ;; This function is called by:
   508 ;;		_main
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512                           	psect	text2
   513   00100E                     __ptext2:
   514                           	callstack 0
   515   00100E                     _initialisation_afficheur:
   516                           	callstack 27
   517   00100E                     
   518                           ;afficheur.c: 168:     unsigned char error_count;;afficheur.c: 170:     error_count=0;
   519   00100E  0E00               	movlw	0
   520   001010  6E09               	movwf	initialisation_afficheur@error_count^0,c
   521                           
   522                           ;afficheur.c: 173:     LATH=0;
   523   001012  0E00               	movlw	0
   524   001014  6E90               	movwf	144,c	;volatile
   525                           
   526                           ;afficheur.c: 174:     LATJ=0x1F;
   527   001016  0E1F               	movlw	31
   528   001018  6E91               	movwf	145,c	;volatile
   529                           
   530                           ;afficheur.c: 177:     TRISH=0;
   531   00101A  0E00               	movlw	0
   532   00101C  6E99               	movwf	153,c	;volatile
   533                           
   534                           ;afficheur.c: 178:     TRISJ=0;
   535   00101E  0E00               	movlw	0
   536   001020  6E9A               	movwf	154,c	;volatile
   537   001022                     
   538                           ;afficheur.c: 181:     LATJbits.LATJ5=0;
   539   001022  9A91               	bcf	145,5,c	;volatile
   540   001024                     
   541                           ;afficheur.c: 182:     LATJbits.LATJ6=1;
   542   001024  8C91               	bsf	145,6,c	;volatile
   543   001026                     
   544                           ;afficheur.c: 185:     LATJbits.LATJ4=0;
   545   001026  9891               	bcf	145,4,c	;volatile
   546   001028                     
   547                           ;afficheur.c: 186:     delai_us_char(4);
   548   001028  0E04               	movlw	4
   549   00102A  EC84  F00A         	call	_delai_us_char
   550   00102E                     
   551                           ;afficheur.c: 187:     LATJbits.LATJ4=1;
   552   00102E  8891               	bsf	145,4,c	;volatile
   553   001030                     
   554                           ;afficheur.c: 191:     delai_us_char(12);
   555   001030  0E0C               	movlw	12
   556   001032  EC84  F00A         	call	_delai_us_char
   557                           
   558                           ;afficheur.c: 192:     while(check_status_ok()==00)
   559   001036  EF2E  F008         	goto	l1628
   560   00103A                     l1618:
   561                           
   562                           ;afficheur.c: 193:     {;afficheur.c: 194:         error_count++;
   563   00103A  2A09               	incf	initialisation_afficheur@error_count^0,f,c
   564   00103C                     
   565                           ;afficheur.c: 195:         delai_us_char(12);
   566   00103C  0E0C               	movlw	12
   567   00103E  EC84  F00A         	call	_delai_us_char
   568   001042                     
   569                           ;afficheur.c: 196:         if (error_count>200)
   570   001042  0EC8               	movlw	200
   571   001044  6409               	cpfsgt	initialisation_afficheur@error_count^0,c
   572   001046  EF27  F008         	goto	u611
   573   00104A  EF29  F008         	goto	u610
   574   00104E                     u611:
   575   00104E  EF2E  F008         	goto	l1628
   576   001052                     u610:
   577   001052                     
   578                           ;afficheur.c: 197:         {;afficheur.c: 198:             LATCbits.LATC1=1;LATGbits.LAT
      +                          G0=1;LATCbits.LATC2=0;
   579   001052  828B               	bsf	139,1,c	;volatile
   580   001054  808F               	bsf	143,0,c	;volatile
   581   001056  948B               	bcf	139,2,c	;volatile
   582   001058                     
   583                           ;afficheur.c: 201:             error_count=0;
   584   001058  0E00               	movlw	0
   585   00105A  6E09               	movwf	initialisation_afficheur@error_count^0,c
   586   00105C                     l1628:
   587                           
   588                           ;afficheur.c: 192:     while(check_status_ok()==00)
   589   00105C  EC10  F00A         	call	_check_status_ok	;wreg free
   590   001060  0900               	iorlw	0
   591   001062  B4D8               	btfsc	status,2,c
   592   001064  EF36  F008         	goto	u621
   593   001068  EF38  F008         	goto	u620
   594   00106C                     u621:
   595   00106C  EF1D  F008         	goto	l1618
   596   001070                     u620:
   597   001070                     
   598                           ;afficheur.c: 206:     d2command(39,15,0x21);
   599   001070  0E0F               	movlw	15
   600   001072  6E05               	movwf	d2command@d2^0,c
   601   001074  0E21               	movlw	33
   602   001076  6E06               	movwf	d2command@cmd^0,c
   603   001078  0E27               	movlw	39
   604   00107A  ECB2  F009         	call	_d2command
   605                           
   606                           ;afficheur.c: 207:     d2command(0,0,0x22);
   607   00107E  0E00               	movlw	0
   608   001080  6E05               	movwf	d2command@d2^0,c
   609   001082  0E22               	movlw	34
   610   001084  6E06               	movwf	d2command@cmd^0,c
   611   001086  0E00               	movlw	0
   612   001088  ECB2  F009         	call	_d2command
   613                           
   614                           ;afficheur.c: 208:     d2command(0,0,0x24);
   615   00108C  0E00               	movlw	0
   616   00108E  6E05               	movwf	d2command@d2^0,c
   617   001090  0E24               	movlw	36
   618   001092  6E06               	movwf	d2command@cmd^0,c
   619   001094  0E00               	movlw	0
   620   001096  ECB2  F009         	call	_d2command
   621                           
   622                           ;afficheur.c: 211:     d2command(0,0x7B,0x40);
   623   00109A  0E7B               	movlw	123
   624   00109C  6E05               	movwf	d2command@d2^0,c
   625   00109E  0E40               	movlw	64
   626   0010A0  6E06               	movwf	d2command@cmd^0,c
   627   0010A2  0E00               	movlw	0
   628   0010A4  ECB2  F009         	call	_d2command
   629                           
   630                           ;afficheur.c: 212:     d2command(40,0,0x41);
   631   0010A8  0E00               	movlw	0
   632   0010AA  6E05               	movwf	d2command@d2^0,c
   633   0010AC  0E41               	movlw	65
   634   0010AE  6E06               	movwf	d2command@cmd^0,c
   635   0010B0  0E28               	movlw	40
   636   0010B2  ECB2  F009         	call	_d2command
   637                           
   638                           ;afficheur.c: 213:     d2command(0x00,0x80,0x42);
   639   0010B6  0E80               	movlw	128
   640   0010B8  6E05               	movwf	d2command@d2^0,c
   641   0010BA  0E42               	movlw	66
   642   0010BC  6E06               	movwf	d2command@cmd^0,c
   643   0010BE  0E00               	movlw	0
   644   0010C0  ECB2  F009         	call	_d2command
   645                           
   646                           ;afficheur.c: 214:     d2command(40,0,0x43);
   647   0010C4  0E00               	movlw	0
   648   0010C6  6E05               	movwf	d2command@d2^0,c
   649   0010C8  0E43               	movlw	67
   650   0010CA  6E06               	movwf	d2command@cmd^0,c
   651   0010CC  0E28               	movlw	40
   652   0010CE  ECB2  F009         	call	_d2command
   653                           
   654                           ;afficheur.c: 217:     command(0x80);
   655   0010D2  0E80               	movlw	128
   656   0010D4  ECB1  F00A         	call	_command
   657                           
   658                           ;afficheur.c: 220:     command(0x9C);
   659   0010D8  0E9C               	movlw	156
   660   0010DA  ECB1  F00A         	call	_command
   661                           
   662                           ;afficheur.c: 223:     command(0xA0);
   663   0010DE  0EA0               	movlw	160
   664   0010E0  ECB1  F00A         	call	_command
   665                           
   666                           ;afficheur.c: 226:     d1command(0x02,0x70);
   667   0010E4  0E70               	movlw	112
   668   0010E6  6E05               	movwf	d1command@cmd^0,c
   669   0010E8  0E02               	movlw	2
   670   0010EA  ECE9  F009         	call	_d1command
   671   0010EE  0012               	return		;funcret
   672   0010F0                     __end_of_initialisation_afficheur:
   673                           	callstack 0
   674                           
   675 ;; *************** function _command *****************
   676 ;; Defined at:
   677 ;;		line 91 in file "afficheur.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;  cmd             1    wreg     unsigned char 
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  cmd             1    4[COMRAM] unsigned char 
   682 ;;  res             1    0        unsigned char 
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      unsigned char 
   685 ;; Registers used:
   686 ;;		wreg, status,2, status,0, cstack
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   693 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   696 ;;Total ram usage:        1 bytes
   697 ;; Hardware stack levels used: 1
   698 ;; Hardware stack levels required when called: 2
   699 ;; This function calls:
   700 ;;		_delai_us_char
   701 ;;		_wait_status_ok
   702 ;;		_write_c_aff
   703 ;; This function is called by:
   704 ;;		_initialisation_afficheur
   705 ;;		_plot1
   706 ;;		_plot0
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           	psect	text3
   711   001562                     __ptext3:
   712                           	callstack 0
   713   001562                     _command:
   714                           	callstack 27
   715                           
   716                           ;incstack = 0
   717                           ;command@cmd stored from wreg
   718   001562  6E05               	movwf	command@cmd^0,c
   719   001564                     
   720                           ;afficheur.c: 97:     if(wait_status_ok()==1)
   721   001564  EC77  F009         	call	_wait_status_ok	;wreg free
   722   001568  06E8               	decf	wreg,f,c
   723   00156A  A4D8               	btfss	status,2,c
   724   00156C  EFBA  F00A         	goto	u61
   725   001570  EFBC  F00A         	goto	u60
   726   001574                     u61:
   727   001574  EFC2  F00A         	goto	l93
   728   001578                     u60:
   729   001578                     
   730                           ;afficheur.c: 98:     {;afficheur.c: 99:         delai_us_char(12);
   731   001578  0E0C               	movlw	12
   732   00157A  EC84  F00A         	call	_delai_us_char
   733   00157E                     
   734                           ;afficheur.c: 100:         write_c_aff(cmd);
   735   00157E  5005               	movf	command@cmd^0,w,c
   736   001580  ECDE  F00A         	call	_write_c_aff
   737   001584                     l93:
   738   001584  0012               	return		;funcret
   739   001586                     __end_of_command:
   740                           	callstack 0
   741                           
   742 ;; *************** function _check_status_ok *****************
   743 ;; Defined at:
   744 ;;		line 31 in file "afficheur.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;		None
   747 ;; Auto vars:     Size  Location     Type
   748 ;;  res             1    0[COMRAM] unsigned char 
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      unsigned char 
   751 ;; Registers used:
   752 ;;		wreg, status,2, status,0
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   759 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   761 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   762 ;;Total ram usage:        1 bytes
   763 ;; Hardware stack levels used: 1
   764 ;; This function calls:
   765 ;;		Nothing
   766 ;; This function is called by:
   767 ;;		_initialisation_afficheur
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771                           	psect	text4
   772   001420                     __ptext4:
   773                           	callstack 0
   774   001420                     _check_status_ok:
   775                           	callstack 29
   776   001420                     
   777                           ;afficheur.c: 33:     unsigned char res;;afficheur.c: 36:     TRISH=0xFF;
   778   001420  6899               	setf	153,c	;volatile
   779                           
   780                           ;afficheur.c: 37:     LATJbits.LATJ0=1;
   781   001422  8091               	bsf	145,0,c	;volatile
   782                           
   783                           ;afficheur.c: 38:     LATJbits.LATJ3=0;
   784   001424  9691               	bcf	145,3,c	;volatile
   785                           
   786                           ;afficheur.c: 39:     LATJbits.LATJ1=0;
   787   001426  9291               	bcf	145,1,c	;volatile
   788                           
   789                           ;afficheur.c: 40:     __nop();
   790   001428  F000               	nop	
   791                           
   792                           ;afficheur.c: 41:     __nop();
   793   00142A  F000               	nop	
   794                           
   795                           ;afficheur.c: 42:     __nop();
   796   00142C  F000               	nop	
   797                           
   798                           ;afficheur.c: 43:     res=PORTH;
   799   00142E  CF87 F001          	movff	3975,check_status_ok@res	;volatile
   800                           
   801                           ;afficheur.c: 44:     LATJbits.LATJ1=1;
   802   001432  8291               	bsf	145,1,c	;volatile
   803                           
   804                           ;afficheur.c: 45:     LATJbits.LATJ3=1;
   805   001434  8691               	bsf	145,3,c	;volatile
   806   001436                     
   807                           ;afficheur.c: 47:     if ((res&0x03)==0x03)
   808   001436  5001               	movf	check_status_ok@res^0,w,c
   809   001438  0B03               	andlw	3
   810   00143A  0A03               	xorlw	3
   811   00143C  A4D8               	btfss	status,2,c
   812   00143E  EF23  F00A         	goto	u51
   813   001442  EF25  F00A         	goto	u50
   814   001446                     u51:
   815   001446  EF29  F00A         	goto	l1142
   816   00144A                     u50:
   817   00144A                     
   818                           ;afficheur.c: 48:         res=1;
   819   00144A  0E01               	movlw	1
   820   00144C  6E01               	movwf	check_status_ok@res^0,c
   821   00144E  EF2B  F00A         	goto	l79
   822   001452                     l1142:
   823                           
   824                           ;afficheur.c: 50:         res=0;
   825   001452  0E00               	movlw	0
   826   001454  6E01               	movwf	check_status_ok@res^0,c
   827   001456                     l79:
   828                           
   829                           ;afficheur.c: 51:     return res;
   830   001456  5001               	movf	check_status_ok@res^0,w,c
   831   001458  0012               	return		;funcret
   832   00145A                     __end_of_check_status_ok:
   833                           	callstack 0
   834                           
   835 ;; *************** function _goto_lico *****************
   836 ;; Defined at:
   837 ;;		line 276 in file "afficheur.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;  ligne           1    wreg     unsigned char 
   840 ;;  colonne         1    8[COMRAM] unsigned char 
   841 ;; Auto vars:     Size  Location     Type
   842 ;;  ligne           1   11[COMRAM] unsigned char 
   843 ;;  adr             2   12[COMRAM] unsigned int 
   844 ;; Return value:  Size  Location     Type
   845 ;;                  1    wreg      void 
   846 ;; Registers used:
   847 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   848 ;; Tracked objects:
   849 ;;		On entry : 0/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   853 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   854 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   855 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   856 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   857 ;;Total ram usage:        6 bytes
   858 ;; Hardware stack levels used: 1
   859 ;; Hardware stack levels required when called: 3
   860 ;; This function calls:
   861 ;;		_d2command
   862 ;; This function is called by:
   863 ;;		_main
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           	psect	text5
   868   001276                     __ptext5:
   869                           	callstack 0
   870   001276                     _goto_lico:
   871                           	callstack 27
   872                           
   873                           ;incstack = 0
   874                           ;goto_lico@ligne stored from wreg
   875   001276  6E0C               	movwf	goto_lico@ligne^0,c
   876   001278                     
   877                           ;afficheur.c: 276: void goto_lico(unsigned char ligne, unsigned char colonne);afficheur.
      +                          c: 277: {;afficheur.c: 278:     unsigned int adr;;afficheur.c: 280:     adr=0x7B00;
   878   001278  0E7B               	movlw	123
   879   00127A  6E0E               	movwf	(goto_lico@adr+1)^0,c
   880   00127C  0E00               	movlw	0
   881   00127E  6E0D               	movwf	goto_lico@adr^0,c
   882   001280                     
   883                           ;afficheur.c: 281:     if (ligne>15) ligne=0;
   884   001280  0E0F               	movlw	15
   885   001282  640C               	cpfsgt	goto_lico@ligne^0,c
   886   001284  EF46  F009         	goto	u671
   887   001288  EF48  F009         	goto	u670
   888   00128C                     u671:
   889   00128C  EF4A  F009         	goto	l1646
   890   001290                     u670:
   891   001290  0E00               	movlw	0
   892   001292  6E0C               	movwf	goto_lico@ligne^0,c
   893   001294                     l1646:
   894                           
   895                           ;afficheur.c: 282:     if (colonne>39) colonne=0;
   896   001294  0E27               	movlw	39
   897   001296  6409               	cpfsgt	goto_lico@colonne^0,c
   898   001298  EF50  F009         	goto	u681
   899   00129C  EF52  F009         	goto	u680
   900   0012A0                     u681:
   901   0012A0  EF54  F009         	goto	l1650
   902   0012A4                     u680:
   903   0012A4  0E00               	movlw	0
   904   0012A6  6E09               	movwf	goto_lico@colonne^0,c
   905   0012A8                     l1650:
   906                           
   907                           ;afficheur.c: 283:     adr=adr+40*ligne+colonne;
   908   0012A8  500C               	movf	goto_lico@ligne^0,w,c
   909   0012AA  0D28               	mullw	40
   910   0012AC  CFF3 F00A          	movff	prodl,??_goto_lico
   911   0012B0  CFF4 F00B          	movff	prodh,??_goto_lico+1
   912   0012B4  5009               	movf	goto_lico@colonne^0,w,c
   913   0012B6  260A               	addwf	??_goto_lico^0,f,c
   914   0012B8  0E00               	movlw	0
   915   0012BA  220B               	addwfc	(??_goto_lico+1)^0,f,c
   916   0012BC  500D               	movf	goto_lico@adr^0,w,c
   917   0012BE  240A               	addwf	??_goto_lico^0,w,c
   918   0012C0  6E0D               	movwf	goto_lico@adr^0,c
   919   0012C2  500E               	movf	(goto_lico@adr+1)^0,w,c
   920   0012C4  200B               	addwfc	(??_goto_lico+1)^0,w,c
   921   0012C6  6E0E               	movwf	(goto_lico@adr+1)^0,c
   922                           
   923                           ;afficheur.c: 284:     while(d2command((unsigned char)(adr&0x00FF),(unsigned char)(adr>>
      +                          8),0x24)==0)
   924   0012C8  EF67  F009         	goto	l1652
   925   0012CC                     l153:
   926                           
   927                           ;afficheur.c: 285:         __nop();
   928   0012CC  F000               	nop	
   929   0012CE                     l1652:
   930                           
   931                           ;afficheur.c: 284:     while(d2command((unsigned char)(adr&0x00FF),(unsigned char)(adr>>
      +                          8),0x24)==0)
   932   0012CE  500E               	movf	(goto_lico@adr+1)^0,w,c
   933   0012D0  6E05               	movwf	d2command@d2^0,c
   934   0012D2  0E24               	movlw	36
   935   0012D4  6E06               	movwf	d2command@cmd^0,c
   936   0012D6  500D               	movf	goto_lico@adr^0,w,c
   937   0012D8  ECB2  F009         	call	_d2command
   938   0012DC  0900               	iorlw	0
   939   0012DE  B4D8               	btfsc	status,2,c
   940   0012E0  EF74  F009         	goto	u691
   941   0012E4  EF76  F009         	goto	u690
   942   0012E8                     u691:
   943   0012E8  EF66  F009         	goto	l153
   944   0012EC                     u690:
   945   0012EC  0012               	return		;funcret
   946   0012EE                     __end_of_goto_lico:
   947                           	callstack 0
   948                           
   949 ;; *************** function _draw_string *****************
   950 ;; Defined at:
   951 ;;		line 244 in file "afficheur.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;  tableau         2    7[COMRAM] PTR unsigned char 
   954 ;;		 -> RAM(3861), STR_1(12), 
   955 ;; Auto vars:     Size  Location     Type
   956 ;;		None
   957 ;; Return value:  Size  Location     Type
   958 ;;                  1    wreg      void 
   959 ;; Registers used:
   960 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   966 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   969 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   970 ;;Total ram usage:        2 bytes
   971 ;; Hardware stack levels used: 1
   972 ;; Hardware stack levels required when called: 3
   973 ;; This function calls:
   974 ;;		_d1command
   975 ;; This function is called by:
   976 ;;		_main
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980                           	psect	text6
   981   0011FC                     __ptext6:
   982                           	callstack 0
   983   0011FC                     _draw_string:
   984                           	callstack 27
   985   0011FC                     
   986                           ;afficheur.c: 244: void draw_string(unsigned char * tableau);afficheur.c: 245: {;affiche
      +                          ur.c: 246:     while(tableau[0]!=0)
   987   0011FC  EF21  F009         	goto	l1638
   988   001200                     l131:
   989                           
   990                           ;afficheur.c: 249:             __nop();
   991   001200  F000               	nop	
   992   001202                     l1634:
   993                           
   994                           ;afficheur.c: 248:         while(d1command(tableau[0]-32,0xC0)==0)
   995   001202  0EC0               	movlw	192
   996   001204  6E05               	movwf	d1command@cmd^0,c
   997   001206  C008  FFF6         	movff	draw_string@tableau,tblptrl
   998   00120A  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
   999   00120E  0E00               	movlw	low (__smallconst shr (0+16))
  1000   001210  6EF8               	movwf	tblptru,c
  1001   001212  0E0F               	movlw	(high __ramtop+-1)
  1002   001214  64F7               	cpfsgt	tblptrh,c
  1003   001216  D003               	bra	u637
  1004   001218  0008               	tblrd		*
  1005   00121A  50F5               	movf	tablat,w,c
  1006   00121C  D005               	bra	u630
  1007   00121E                     u637:
  1008   00121E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1009   001222  CFF7 FFEA          	movff	tblptrh,fsr0h
  1010   001226  50EF               	movf	indf0,w,c
  1011   001228                     u630:
  1012   001228  0FE0               	addlw	224
  1013   00122A  ECE9  F009         	call	_d1command
  1014   00122E  0900               	iorlw	0
  1015   001230  B4D8               	btfsc	status,2,c
  1016   001232  EF1D  F009         	goto	u641
  1017   001236  EF1F  F009         	goto	u640
  1018   00123A                     u641:
  1019   00123A  EF00  F009         	goto	l131
  1020   00123E                     u640:
  1021   00123E                     
  1022                           ;afficheur.c: 250:         tableau++;
  1023   00123E  4A08               	infsnz	draw_string@tableau^0,f,c
  1024   001240  2A09               	incf	(draw_string@tableau+1)^0,f,c
  1025   001242                     l1638:
  1026                           
  1027                           ;afficheur.c: 246:     while(tableau[0]!=0)
  1028   001242  C008  FFF6         	movff	draw_string@tableau,tblptrl
  1029   001246  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  1030   00124A  0E00               	movlw	low (__smallconst shr (0+16))
  1031   00124C  6EF8               	movwf	tblptru,c
  1032   00124E  0E0F               	movlw	(high __ramtop+-1)
  1033   001250  64F7               	cpfsgt	tblptrh,c
  1034   001252  D003               	bra	u657
  1035   001254  0008               	tblrd		*
  1036   001256  50F5               	movf	tablat,w,c
  1037   001258  D005               	bra	u650
  1038   00125A                     u657:
  1039   00125A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1040   00125E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1041   001262  50EF               	movf	indf0,w,c
  1042   001264                     u650:
  1043   001264  0900               	iorlw	0
  1044   001266  A4D8               	btfss	status,2,c
  1045   001268  EF38  F009         	goto	u661
  1046   00126C  EF3A  F009         	goto	u660
  1047   001270                     u661:
  1048   001270  EF01  F009         	goto	l1634
  1049   001274                     u660:
  1050   001274  0012               	return		;funcret
  1051   001276                     __end_of_draw_string:
  1052                           	callstack 0
  1053                           
  1054 ;; *************** function _clear_text *****************
  1055 ;; Defined at:
  1056 ;;		line 288 in file "afficheur.c"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;		None
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;  add             2    8[COMRAM] unsigned int 
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  1    wreg      void 
  1063 ;; Registers used:
  1064 ;;		wreg, status,2, status,0, cstack
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1073 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1074 ;;Total ram usage:        2 bytes
  1075 ;; Hardware stack levels used: 1
  1076 ;; Hardware stack levels required when called: 3
  1077 ;; This function calls:
  1078 ;;		_d1command
  1079 ;;		_d2command
  1080 ;; This function is called by:
  1081 ;;		_main
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           	psect	text7
  1086   00145A                     __ptext7:
  1087                           	callstack 0
  1088   00145A                     _clear_text:
  1089                           	callstack 27
  1090   00145A                     
  1091                           ;afficheur.c: 290:     unsigned int add;;afficheur.c: 292:     d2command(0,0,0x24);
  1092   00145A  0E00               	movlw	0
  1093   00145C  6E05               	movwf	d2command@d2^0,c
  1094   00145E  0E24               	movlw	36
  1095   001460  6E06               	movwf	d2command@cmd^0,c
  1096   001462  0E00               	movlw	0
  1097   001464  ECB2  F009         	call	_d2command
  1098   001468                     
  1099                           ;afficheur.c: 293:     for (add=0;add!=0x8000;add++)
  1100   001468  0E00               	movlw	0
  1101   00146A  6E0A               	movwf	(clear_text@add+1)^0,c
  1102   00146C  0E00               	movlw	0
  1103   00146E  6E09               	movwf	clear_text@add^0,c
  1104   001470                     l1662:
  1105                           
  1106                           ;afficheur.c: 294:     {;afficheur.c: 295:             d1command(0x00,0xC0);
  1107   001470  0EC0               	movlw	192
  1108   001472  6E05               	movwf	d1command@cmd^0,c
  1109   001474  0E00               	movlw	0
  1110   001476  ECE9  F009         	call	_d1command
  1111   00147A                     
  1112                           ;afficheur.c: 296:     }
  1113   00147A  4A09               	infsnz	clear_text@add^0,f,c
  1114   00147C  2A0A               	incf	(clear_text@add+1)^0,f,c
  1115   00147E  0E80               	movlw	128
  1116   001480  180A               	xorwf	(clear_text@add+1)^0,w,c
  1117   001482  1009               	iorwf	clear_text@add^0,w,c
  1118   001484  A4D8               	btfss	status,2,c
  1119   001486  EF47  F00A         	goto	u701
  1120   00148A  EF49  F00A         	goto	u700
  1121   00148E                     u701:
  1122   00148E  EF38  F00A         	goto	l1662
  1123   001492                     u700:
  1124   001492  0012               	return		;funcret
  1125   001494                     __end_of_clear_text:
  1126                           	callstack 0
  1127                           
  1128 ;; *************** function _clear_graphics *****************
  1129 ;; Defined at:
  1130 ;;		line 299 in file "afficheur.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;		None
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;  add             2    8[COMRAM] unsigned int 
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, status,2, status,0, cstack
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1145 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1147 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1148 ;;Total ram usage:        2 bytes
  1149 ;; Hardware stack levels used: 1
  1150 ;; Hardware stack levels required when called: 3
  1151 ;; This function calls:
  1152 ;;		_d1command
  1153 ;;		_d2command
  1154 ;; This function is called by:
  1155 ;;		_main
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           	psect	text8
  1160   001494                     __ptext8:
  1161                           	callstack 0
  1162   001494                     _clear_graphics:
  1163                           	callstack 27
  1164   001494                     
  1165                           ;afficheur.c: 301:     unsigned int add;;afficheur.c: 303:     d2command(0,0x80,0x24);
  1166   001494  0E80               	movlw	128
  1167   001496  6E05               	movwf	d2command@d2^0,c
  1168   001498  0E24               	movlw	36
  1169   00149A  6E06               	movwf	d2command@cmd^0,c
  1170   00149C  0E00               	movlw	0
  1171   00149E  ECB2  F009         	call	_d2command
  1172   0014A2                     
  1173                           ;afficheur.c: 304:     for (add=0x8000;add!=0xF800;add++)
  1174   0014A2  0E80               	movlw	128
  1175   0014A4  6E0A               	movwf	(clear_graphics@add+1)^0,c
  1176   0014A6  0E00               	movlw	0
  1177   0014A8  6E09               	movwf	clear_graphics@add^0,c
  1178   0014AA                     l1676:
  1179                           
  1180                           ;afficheur.c: 305:     {;afficheur.c: 306:             d1command(0x00,0xC0);
  1181   0014AA  0EC0               	movlw	192
  1182   0014AC  6E05               	movwf	d1command@cmd^0,c
  1183   0014AE  0E00               	movlw	0
  1184   0014B0  ECE9  F009         	call	_d1command
  1185   0014B4                     
  1186                           ;afficheur.c: 307:     }
  1187   0014B4  4A09               	infsnz	clear_graphics@add^0,f,c
  1188   0014B6  2A0A               	incf	(clear_graphics@add+1)^0,f,c
  1189   0014B8  0EF8               	movlw	248
  1190   0014BA  180A               	xorwf	(clear_graphics@add+1)^0,w,c
  1191   0014BC  1009               	iorwf	clear_graphics@add^0,w,c
  1192   0014BE  A4D8               	btfss	status,2,c
  1193   0014C0  EF64  F00A         	goto	u711
  1194   0014C4  EF66  F00A         	goto	u710
  1195   0014C8                     u711:
  1196   0014C8  EF55  F00A         	goto	l1676
  1197   0014CC                     u710:
  1198   0014CC  0012               	return		;funcret
  1199   0014CE                     __end_of_clear_graphics:
  1200                           	callstack 0
  1201                           
  1202 ;; *************** function _d2command *****************
  1203 ;; Defined at:
  1204 ;;		line 129 in file "afficheur.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;  d1              1    wreg     unsigned char 
  1207 ;;  d2              1    4[COMRAM] unsigned char 
  1208 ;;  cmd             1    5[COMRAM] unsigned char 
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;  d1              1    6[COMRAM] unsigned char 
  1211 ;;  res             1    7[COMRAM] unsigned char 
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      unsigned char 
  1214 ;; Registers used:
  1215 ;;		wreg, status,2, status,0, cstack
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1221 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1222 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1224 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1225 ;;Total ram usage:        4 bytes
  1226 ;; Hardware stack levels used: 1
  1227 ;; Hardware stack levels required when called: 2
  1228 ;; This function calls:
  1229 ;;		_delai_us_char
  1230 ;;		_wait_status_ok
  1231 ;;		_write_c_aff
  1232 ;;		_write_d_aff
  1233 ;; This function is called by:
  1234 ;;		_initialisation_afficheur
  1235 ;;		_goto_lico
  1236 ;;		_clear_text
  1237 ;;		_clear_graphics
  1238 ;;		_clear_cgram
  1239 ;;		_plot1
  1240 ;;		_plot0
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           	psect	text9
  1245   001364                     __ptext9:
  1246                           	callstack 0
  1247   001364                     _d2command:
  1248                           	callstack 27
  1249                           
  1250                           ;incstack = 0
  1251                           ;d2command@d1 stored from wreg
  1252   001364  6E07               	movwf	d2command@d1^0,c
  1253   001366                     
  1254                           ;afficheur.c: 129: unsigned char d2command(unsigned char d1, unsigned char d2, unsigned 
      +                          char cmd);afficheur.c: 130: {;afficheur.c: 131:     unsigned char res;;afficheur.c: 133:
      +                               res=0;
  1255   001366  0E00               	movlw	0
  1256   001368  6E08               	movwf	d2command@res^0,c
  1257   00136A                     
  1258                           ;afficheur.c: 135:     if (wait_status_ok()==1)
  1259   00136A  EC77  F009         	call	_wait_status_ok	;wreg free
  1260   00136E  06E8               	decf	wreg,f,c
  1261   001370  A4D8               	btfss	status,2,c
  1262   001372  EFBD  F009         	goto	u581
  1263   001376  EFBF  F009         	goto	u580
  1264   00137A                     u581:
  1265   00137A  EFE7  F009         	goto	l1600
  1266   00137E                     u580:
  1267   00137E                     
  1268                           ;afficheur.c: 136:     {;afficheur.c: 137:         delai_us_char(12);
  1269   00137E  0E0C               	movlw	12
  1270   001380  EC84  F00A         	call	_delai_us_char
  1271   001384                     
  1272                           ;afficheur.c: 138:         write_d_aff(d1);
  1273   001384  5007               	movf	d2command@d1^0,w,c
  1274   001386  ECD1  F00A         	call	_write_d_aff
  1275   00138A                     
  1276                           ;afficheur.c: 139:         if (wait_status_ok()==1)
  1277   00138A  EC77  F009         	call	_wait_status_ok	;wreg free
  1278   00138E  06E8               	decf	wreg,f,c
  1279   001390  A4D8               	btfss	status,2,c
  1280   001392  EFCD  F009         	goto	u591
  1281   001396  EFCF  F009         	goto	u590
  1282   00139A                     u591:
  1283   00139A  EFE7  F009         	goto	l1600
  1284   00139E                     u590:
  1285   00139E                     
  1286                           ;afficheur.c: 140:         {;afficheur.c: 141:             delai_us_char(12);
  1287   00139E  0E0C               	movlw	12
  1288   0013A0  EC84  F00A         	call	_delai_us_char
  1289   0013A4                     
  1290                           ;afficheur.c: 142:             write_d_aff(d2);
  1291   0013A4  5005               	movf	d2command@d2^0,w,c
  1292   0013A6  ECD1  F00A         	call	_write_d_aff
  1293   0013AA                     
  1294                           ;afficheur.c: 143:             if (wait_status_ok()==1)
  1295   0013AA  EC77  F009         	call	_wait_status_ok	;wreg free
  1296   0013AE  06E8               	decf	wreg,f,c
  1297   0013B0  A4D8               	btfss	status,2,c
  1298   0013B2  EFDD  F009         	goto	u601
  1299   0013B6  EFDF  F009         	goto	u600
  1300   0013BA                     u601:
  1301   0013BA  EFE7  F009         	goto	l1600
  1302   0013BE                     u600:
  1303   0013BE                     
  1304                           ;afficheur.c: 144:             {;afficheur.c: 145:                 delai_us_char(12);
  1305   0013BE  0E0C               	movlw	12
  1306   0013C0  EC84  F00A         	call	_delai_us_char
  1307   0013C4                     
  1308                           ;afficheur.c: 146:                 write_c_aff(cmd);
  1309   0013C4  5006               	movf	d2command@cmd^0,w,c
  1310   0013C6  ECDE  F00A         	call	_write_c_aff
  1311   0013CA                     
  1312                           ;afficheur.c: 148:                     res=1;
  1313   0013CA  0E01               	movlw	1
  1314   0013CC  6E08               	movwf	d2command@res^0,c
  1315   0013CE                     l1600:
  1316                           
  1317                           ;afficheur.c: 152:     return res;
  1318   0013CE  5008               	movf	d2command@res^0,w,c
  1319   0013D0  0012               	return		;funcret
  1320   0013D2                     __end_of_d2command:
  1321                           	callstack 0
  1322                           
  1323 ;; *************** function _d1command *****************
  1324 ;; Defined at:
  1325 ;;		line 107 in file "afficheur.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;  d1              1    wreg     unsigned char 
  1328 ;;  cmd             1    4[COMRAM] unsigned char 
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;  d1              1    5[COMRAM] unsigned char 
  1331 ;;  res             1    6[COMRAM] unsigned char 
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  1    wreg      unsigned char 
  1334 ;; Registers used:
  1335 ;;		wreg, status,2, status,0, cstack
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1341 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1342 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1344 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1345 ;;Total ram usage:        3 bytes
  1346 ;; Hardware stack levels used: 1
  1347 ;; Hardware stack levels required when called: 2
  1348 ;; This function calls:
  1349 ;;		_delai_us_char
  1350 ;;		_wait_status_ok
  1351 ;;		_write_c_aff
  1352 ;;		_write_d_aff
  1353 ;; This function is called by:
  1354 ;;		_initialisation_afficheur
  1355 ;;		_draw_string
  1356 ;;		_clear_text
  1357 ;;		_clear_graphics
  1358 ;;		_draw_char
  1359 ;;		_draw_hex8
  1360 ;;		_clear_cgram
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           	psect	text10
  1365   0013D2                     __ptext10:
  1366                           	callstack 0
  1367   0013D2                     _d1command:
  1368                           	callstack 27
  1369                           
  1370                           ;incstack = 0
  1371                           ;d1command@d1 stored from wreg
  1372   0013D2  6E06               	movwf	d1command@d1^0,c
  1373   0013D4                     
  1374                           ;afficheur.c: 107: unsigned char d1command(unsigned char d1, unsigned char cmd);afficheu
      +                          r.c: 108: {;afficheur.c: 109:     unsigned char res;;afficheur.c: 111:     res=0;
  1375   0013D4  0E00               	movlw	0
  1376   0013D6  6E07               	movwf	d1command@res^0,c
  1377   0013D8                     
  1378                           ;afficheur.c: 113:     if (wait_status_ok()==1)
  1379   0013D8  EC77  F009         	call	_wait_status_ok	;wreg free
  1380   0013DC  06E8               	decf	wreg,f,c
  1381   0013DE  A4D8               	btfss	status,2,c
  1382   0013E0  EFF4  F009         	goto	u561
  1383   0013E4  EFF6  F009         	goto	u560
  1384   0013E8                     u561:
  1385   0013E8  EF0E  F00A         	goto	l1574
  1386   0013EC                     u560:
  1387   0013EC                     
  1388                           ;afficheur.c: 114:     {;afficheur.c: 115:         delai_us_char(12);
  1389   0013EC  0E0C               	movlw	12
  1390   0013EE  EC84  F00A         	call	_delai_us_char
  1391   0013F2                     
  1392                           ;afficheur.c: 116:         write_d_aff(d1);
  1393   0013F2  5006               	movf	d1command@d1^0,w,c
  1394   0013F4  ECD1  F00A         	call	_write_d_aff
  1395   0013F8                     
  1396                           ;afficheur.c: 117:         if (wait_status_ok()==1)
  1397   0013F8  EC77  F009         	call	_wait_status_ok	;wreg free
  1398   0013FC  06E8               	decf	wreg,f,c
  1399   0013FE  A4D8               	btfss	status,2,c
  1400   001400  EF04  F00A         	goto	u571
  1401   001404  EF06  F00A         	goto	u570
  1402   001408                     u571:
  1403   001408  EF0E  F00A         	goto	l1574
  1404   00140C                     u570:
  1405   00140C                     
  1406                           ;afficheur.c: 118:         {;afficheur.c: 119:             delai_us_char(12);
  1407   00140C  0E0C               	movlw	12
  1408   00140E  EC84  F00A         	call	_delai_us_char
  1409   001412                     
  1410                           ;afficheur.c: 120:             write_c_aff(cmd);
  1411   001412  5005               	movf	d1command@cmd^0,w,c
  1412   001414  ECDE  F00A         	call	_write_c_aff
  1413   001418                     
  1414                           ;afficheur.c: 122:                 res=1;
  1415   001418  0E01               	movlw	1
  1416   00141A  6E07               	movwf	d1command@res^0,c
  1417   00141C                     l1574:
  1418                           
  1419                           ;afficheur.c: 126:     return res;
  1420   00141C  5007               	movf	d1command@res^0,w,c
  1421   00141E  0012               	return		;funcret
  1422   001420                     __end_of_d1command:
  1423                           	callstack 0
  1424                           
  1425 ;; *************** function _write_d_aff *****************
  1426 ;; Defined at:
  1427 ;;		line 5 in file "afficheur.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;  data            1    wreg     unsigned char 
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;  data            1    0[COMRAM] unsigned char 
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  1    wreg      void 
  1434 ;; Registers used:
  1435 ;;		wreg, status,2
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1442 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1444 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1445 ;;Total ram usage:        1 bytes
  1446 ;; Hardware stack levels used: 1
  1447 ;; This function calls:
  1448 ;;		Nothing
  1449 ;; This function is called by:
  1450 ;;		_d1command
  1451 ;;		_d2command
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455                           	psect	text11
  1456   0015A2                     __ptext11:
  1457                           	callstack 0
  1458   0015A2                     _write_d_aff:
  1459                           	callstack 28
  1460                           
  1461                           ;incstack = 0
  1462                           ;write_d_aff@data stored from wreg
  1463   0015A2  6E01               	movwf	write_d_aff@data^0,c
  1464   0015A4                     
  1465                           ;afficheur.c: 5: void write_d_aff(unsigned char data);afficheur.c: 6: {;afficheur.c: 7: 
      +                              LATH=data;
  1466   0015A4  C001  FF90         	movff	write_d_aff@data,3984	;volatile
  1467   0015A8                     
  1468                           ;afficheur.c: 8:     TRISH=0x00;
  1469   0015A8  0E00               	movlw	0
  1470   0015AA  6E99               	movwf	153,c	;volatile
  1471   0015AC                     
  1472                           ;afficheur.c: 9:     LATJbits.LATJ0=0;
  1473   0015AC  9091               	bcf	145,0,c	;volatile
  1474   0015AE                     
  1475                           ;afficheur.c: 10:     LATJbits.LATJ3=0;
  1476   0015AE  9691               	bcf	145,3,c	;volatile
  1477   0015B0                     
  1478                           ;afficheur.c: 11:     LATJbits.LATJ2=0;
  1479   0015B0  9491               	bcf	145,2,c	;volatile
  1480   0015B2                     
  1481                           ;afficheur.c: 12:     __nop();
  1482   0015B2  F000               	nop	
  1483   0015B4                     
  1484                           ;afficheur.c: 13:     __nop();
  1485   0015B4  F000               	nop	
  1486   0015B6                     
  1487                           ;afficheur.c: 14:     LATJbits.LATJ2=1;
  1488   0015B6  8491               	bsf	145,2,c	;volatile
  1489   0015B8                     
  1490                           ;afficheur.c: 15:     LATJbits.LATJ3=1;
  1491   0015B8  8691               	bsf	145,3,c	;volatile
  1492   0015BA  0012               	return		;funcret
  1493   0015BC                     __end_of_write_d_aff:
  1494                           	callstack 0
  1495                           
  1496 ;; *************** function _write_c_aff *****************
  1497 ;; Defined at:
  1498 ;;		line 18 in file "afficheur.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;  command         1    wreg     unsigned char 
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  command         1    0[COMRAM] unsigned char 
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      void 
  1505 ;; Registers used:
  1506 ;;		wreg, status,2
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1513 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1515 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1516 ;;Total ram usage:        1 bytes
  1517 ;; Hardware stack levels used: 1
  1518 ;; This function calls:
  1519 ;;		Nothing
  1520 ;; This function is called by:
  1521 ;;		_command
  1522 ;;		_d1command
  1523 ;;		_d2command
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           	psect	text12
  1528   0015BC                     __ptext12:
  1529                           	callstack 0
  1530   0015BC                     _write_c_aff:
  1531                           	callstack 28
  1532                           
  1533                           ;incstack = 0
  1534                           ;write_c_aff@command stored from wreg
  1535   0015BC  6E01               	movwf	write_c_aff@command^0,c
  1536   0015BE                     
  1537                           ;afficheur.c: 18: void write_c_aff(unsigned char command);afficheur.c: 19: {;afficheur.c
      +                          : 20:     LATH=command;
  1538   0015BE  C001  FF90         	movff	write_c_aff@command,3984	;volatile
  1539   0015C2                     
  1540                           ;afficheur.c: 21:     TRISH=0x00;
  1541   0015C2  0E00               	movlw	0
  1542   0015C4  6E99               	movwf	153,c	;volatile
  1543   0015C6                     
  1544                           ;afficheur.c: 22:     LATJbits.LATJ0=1;
  1545   0015C6  8091               	bsf	145,0,c	;volatile
  1546   0015C8                     
  1547                           ;afficheur.c: 23:     LATJbits.LATJ3=0;
  1548   0015C8  9691               	bcf	145,3,c	;volatile
  1549   0015CA                     
  1550                           ;afficheur.c: 24:     LATJbits.LATJ2=0;
  1551   0015CA  9491               	bcf	145,2,c	;volatile
  1552   0015CC                     
  1553                           ;afficheur.c: 25:     __nop();
  1554   0015CC  F000               	nop	
  1555   0015CE                     
  1556                           ;afficheur.c: 26:     __nop();
  1557   0015CE  F000               	nop	
  1558   0015D0                     
  1559                           ;afficheur.c: 27:     LATJbits.LATJ2=1;
  1560   0015D0  8491               	bsf	145,2,c	;volatile
  1561   0015D2                     
  1562                           ;afficheur.c: 28:     LATJbits.LATJ3=1;
  1563   0015D2  8691               	bsf	145,3,c	;volatile
  1564   0015D4  0012               	return		;funcret
  1565   0015D6                     __end_of_write_c_aff:
  1566                           	callstack 0
  1567                           
  1568 ;; *************** function _wait_status_ok *****************
  1569 ;; Defined at:
  1570 ;;		line 54 in file "afficheur.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;		None
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  res             1    3[COMRAM] unsigned char 
  1575 ;;  status          1    2[COMRAM] unsigned char 
  1576 ;;  err             1    1[COMRAM] unsigned char 
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      unsigned char 
  1579 ;; Registers used:
  1580 ;;		wreg, status,2, status,0, cstack
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1587 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1589 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1590 ;;Total ram usage:        3 bytes
  1591 ;; Hardware stack levels used: 1
  1592 ;; Hardware stack levels required when called: 1
  1593 ;; This function calls:
  1594 ;;		_delai_us_char
  1595 ;; This function is called by:
  1596 ;;		_command
  1597 ;;		_d1command
  1598 ;;		_d2command
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           	psect	text13
  1603   0012EE                     __ptext13:
  1604                           	callstack 0
  1605   0012EE                     _wait_status_ok:
  1606                           	callstack 27
  1607   0012EE                     
  1608                           ;afficheur.c: 56:     unsigned char err,res,status;;afficheur.c: 58:     err=0;
  1609   0012EE  0E00               	movlw	0
  1610   0012F0  6E02               	movwf	wait_status_ok@err^0,c
  1611                           
  1612                           ;afficheur.c: 59:     res=2;
  1613   0012F2  0E02               	movlw	2
  1614   0012F4  6E04               	movwf	wait_status_ok@res^0,c
  1615                           
  1616                           ;afficheur.c: 60:     while (res==2)
  1617   0012F6  EFA7  F009         	goto	l1130
  1618   0012FA                     l84:
  1619                           
  1620                           ;afficheur.c: 61:     {;afficheur.c: 62:         TRISH=0xFF;
  1621   0012FA  6899               	setf	153,c	;volatile
  1622                           
  1623                           ;afficheur.c: 63:         LATJbits.LATJ0=1;
  1624   0012FC  8091               	bsf	145,0,c	;volatile
  1625                           
  1626                           ;afficheur.c: 64:         LATJbits.LATJ3=0;
  1627   0012FE  9691               	bcf	145,3,c	;volatile
  1628                           
  1629                           ;afficheur.c: 65:         LATJbits.LATJ1=0;
  1630   001300  9291               	bcf	145,1,c	;volatile
  1631                           
  1632                           ;afficheur.c: 66:         __nop();
  1633   001302  F000               	nop	
  1634                           
  1635                           ;afficheur.c: 67:         status=PORTH;
  1636   001304  CF87 F003          	movff	3975,wait_status_ok@status	;volatile
  1637                           
  1638                           ;afficheur.c: 68:         LATJbits.LATJ1=1;
  1639   001308  8291               	bsf	145,1,c	;volatile
  1640                           
  1641                           ;afficheur.c: 69:         LATJbits.LATJ3=1;
  1642   00130A  8691               	bsf	145,3,c	;volatile
  1643   00130C                     
  1644                           ;afficheur.c: 71:         status=(status&0x03);
  1645   00130C  5003               	movf	wait_status_ok@status^0,w,c
  1646   00130E  0B03               	andlw	3
  1647   001310  6E03               	movwf	wait_status_ok@status^0,c
  1648                           
  1649                           ;afficheur.c: 72:         if (status!=0x03)
  1650   001312  0E03               	movlw	3
  1651   001314  1803               	xorwf	wait_status_ok@status^0,w,c
  1652   001316  B4D8               	btfsc	status,2,c
  1653   001318  EF90  F009         	goto	u21
  1654   00131C  EF92  F009         	goto	u20
  1655   001320                     u21:
  1656   001320  EFA5  F009         	goto	l1128
  1657   001324                     u20:
  1658   001324                     
  1659                           ;afficheur.c: 73:         {;afficheur.c: 74:             err++;
  1660   001324  2A02               	incf	wait_status_ok@err^0,f,c
  1661   001326                     
  1662                           ;afficheur.c: 75:             delai_us_char(12);
  1663   001326  0E0C               	movlw	12
  1664   001328  EC84  F00A         	call	_delai_us_char
  1665   00132C                     
  1666                           ;afficheur.c: 76:             if (err>=250)
  1667   00132C  0EF9               	movlw	249
  1668   00132E  6402               	cpfsgt	wait_status_ok@err^0,c
  1669   001330  EF9C  F009         	goto	u31
  1670   001334  EF9E  F009         	goto	u30
  1671   001338                     u31:
  1672   001338  EFA7  F009         	goto	l1130
  1673   00133C                     u30:
  1674   00133C                     
  1675                           ;afficheur.c: 77:             {;afficheur.c: 79:                 LATCbits.LATC2=0;LATCbi
      +                          ts.LATC1=1;LATGbits.LATG0=1;
  1676   00133C  948B               	bcf	139,2,c	;volatile
  1677   00133E  828B               	bsf	139,1,c	;volatile
  1678   001340  808F               	bsf	143,0,c	;volatile
  1679   001342                     
  1680                           ;afficheur.c: 80:                 res=0;
  1681   001342  0E00               	movlw	0
  1682   001344  6E04               	movwf	wait_status_ok@res^0,c
  1683   001346  EFA7  F009         	goto	l1130
  1684   00134A                     l1128:
  1685                           
  1686                           ;afficheur.c: 84:         {;afficheur.c: 85:             res=1;
  1687   00134A  0E01               	movlw	1
  1688   00134C  6E04               	movwf	wait_status_ok@res^0,c
  1689   00134E                     l1130:
  1690                           
  1691                           ;afficheur.c: 60:     while (res==2)
  1692   00134E  0E02               	movlw	2
  1693   001350  1804               	xorwf	wait_status_ok@res^0,w,c
  1694   001352  B4D8               	btfsc	status,2,c
  1695   001354  EFAE  F009         	goto	u41
  1696   001358  EFB0  F009         	goto	u40
  1697   00135C                     u41:
  1698   00135C  EF7D  F009         	goto	l84
  1699   001360                     u40:
  1700   001360                     
  1701                           ;afficheur.c: 88:     return res;
  1702   001360  5004               	movf	wait_status_ok@res^0,w,c
  1703   001362  0012               	return		;funcret
  1704   001364                     __end_of_wait_status_ok:
  1705                           	callstack 0
  1706                           
  1707 ;; *************** function _delai_us_char *****************
  1708 ;; Defined at:
  1709 ;;		line 155 in file "afficheur.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;  ucdelai         1    wreg     unsigned char 
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;  ucdelai         1    0[COMRAM] unsigned char 
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      void 
  1716 ;; Registers used:
  1717 ;;		wreg, status,2, status,0
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1724 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1726 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1727 ;;Total ram usage:        1 bytes
  1728 ;; Hardware stack levels used: 1
  1729 ;; This function calls:
  1730 ;;		Nothing
  1731 ;; This function is called by:
  1732 ;;		_wait_status_ok
  1733 ;;		_command
  1734 ;;		_d1command
  1735 ;;		_d2command
  1736 ;;		_initialisation_afficheur
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text14
  1741   001508                     __ptext14:
  1742                           	callstack 0
  1743   001508                     _delai_us_char:
  1744                           	callstack 29
  1745                           
  1746                           ;incstack = 0
  1747                           ;delai_us_char@ucdelai stored from wreg
  1748   001508  6E01               	movwf	delai_us_char@ucdelai^0,c
  1749   00150A                     
  1750                           ;afficheur.c: 155: void delai_us_char(unsigned char ucdelai);afficheur.c: 156: {;affiche
      +                          ur.c: 158:     while (ucdelai>0)
  1751   00150A  EF92  F00A         	goto	l1076
  1752   00150E                     l108:
  1753                           
  1754                           ;afficheur.c: 159:     {;afficheur.c: 160:         __nop();__nop();__nop();__nop();__nop
      +                          ();__nop();__nop();__nop();__nop();__nop();
  1755   00150E  F000               	nop	
  1756   001510  F000               	nop	
  1757   001512  F000               	nop	
  1758   001514  F000               	nop	
  1759   001516  F000               	nop	
  1760   001518  F000               	nop	
  1761   00151A  F000               	nop	
  1762   00151C  F000               	nop	
  1763   00151E  F000               	nop	
  1764   001520  F000               	nop	
  1765   001522                     
  1766                           ;afficheur.c: 161:         ucdelai--;
  1767   001522  0601               	decf	delai_us_char@ucdelai^0,f,c
  1768   001524                     l1076:
  1769                           
  1770                           ;afficheur.c: 158:     while (ucdelai>0)
  1771   001524  5001               	movf	delai_us_char@ucdelai^0,w,c
  1772   001526  A4D8               	btfss	status,2,c
  1773   001528  EF98  F00A         	goto	u11
  1774   00152C  EF9A  F00A         	goto	u10
  1775   001530                     u11:
  1776   001530  EF87  F00A         	goto	l108
  1777   001534                     u10:
  1778   001534  0012               	return		;funcret
  1779   001536                     __end_of_delai_us_char:
  1780                           	callstack 0
  1781                           
  1782 ;; *************** function _I2C_Write_Register *****************
  1783 ;; Defined at:
  1784 ;;		line 21 in file "I2C.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;  Address         2    0[COMRAM] int 
  1787 ;;  Register        2    2[COMRAM] int 
  1788 ;;  data            2    4[COMRAM] int 
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;		None
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  1    wreg      void 
  1793 ;; Registers used:
  1794 ;;		None
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1800 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1803 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1804 ;;Total ram usage:        6 bytes
  1805 ;; Hardware stack levels used: 1
  1806 ;; This function calls:
  1807 ;;		Nothing
  1808 ;; This function is called by:
  1809 ;;		_main
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           	psect	text15
  1814   0010F0                     __ptext15:
  1815                           	callstack 0
  1816   0010F0                     _I2C_Write_Register:
  1817                           	callstack 30
  1818   0010F0                     
  1819                           ;I2C.c: 22:     SSP1CON2bits.SEN = 1;
  1820   0010F0  80C5               	bsf	197,0,c	;volatile
  1821   0010F2                     l360:
  1822   0010F2  B0C5               	btfsc	197,0,c	;volatile
  1823   0010F4  EF7E  F008         	goto	u721
  1824   0010F8  EF80  F008         	goto	u720
  1825   0010FC                     u721:
  1826   0010FC  EF79  F008         	goto	l360
  1827   001100                     u720:
  1828   001100                     
  1829                           ;I2C.c: 25:     SSP1BUF = Address;
  1830   001100  C001  FFC9         	movff	I2C_Write_Register@Address,4041	;volatile
  1831                           
  1832                           ;I2C.c: 26:     PIR1bits.SSP1IF = 0;
  1833   001104  969E               	bcf	158,3,c	;volatile
  1834   001106                     l363:
  1835   001106  A69E               	btfss	158,3,c	;volatile
  1836   001108  EF88  F008         	goto	u731
  1837   00110C  EF8A  F008         	goto	u730
  1838   001110                     u731:
  1839   001110  EF83  F008         	goto	l363
  1840   001114                     u730:
  1841   001114                     l366:
  1842   001114  BCC5               	btfsc	197,6,c	;volatile
  1843   001116  EF8F  F008         	goto	u741
  1844   00111A  EF91  F008         	goto	u740
  1845   00111E                     u741:
  1846   00111E  EF8A  F008         	goto	l366
  1847   001122                     u740:
  1848   001122                     
  1849                           ;I2C.c: 30:     SSP1BUF = Register;
  1850   001122  C003  FFC9         	movff	I2C_Write_Register@Register,4041	;volatile
  1851                           
  1852                           ;I2C.c: 31:     PIR1bits.SSP1IF = 0;
  1853   001126  969E               	bcf	158,3,c	;volatile
  1854   001128                     l369:
  1855   001128  A69E               	btfss	158,3,c	;volatile
  1856   00112A  EF99  F008         	goto	u751
  1857   00112E  EF9B  F008         	goto	u750
  1858   001132                     u751:
  1859   001132  EF94  F008         	goto	l369
  1860   001136                     u750:
  1861   001136                     l372:
  1862   001136  BCC5               	btfsc	197,6,c	;volatile
  1863   001138  EFA0  F008         	goto	u761
  1864   00113C  EFA2  F008         	goto	u760
  1865   001140                     u761:
  1866   001140  EF9B  F008         	goto	l372
  1867   001144                     u760:
  1868   001144                     
  1869                           ;I2C.c: 35:     SSP1BUF = data;
  1870   001144  C005  FFC9         	movff	I2C_Write_Register@data,4041	;volatile
  1871                           
  1872                           ;I2C.c: 36:     PIR1bits.SSP1IF = 0;
  1873   001148  969E               	bcf	158,3,c	;volatile
  1874   00114A                     l375:
  1875   00114A  A69E               	btfss	158,3,c	;volatile
  1876   00114C  EFAA  F008         	goto	u771
  1877   001150  EFAC  F008         	goto	u770
  1878   001154                     u771:
  1879   001154  EFA5  F008         	goto	l375
  1880   001158                     u770:
  1881   001158                     l378:
  1882   001158  BCC5               	btfsc	197,6,c	;volatile
  1883   00115A  EFB1  F008         	goto	u781
  1884   00115E  EFB3  F008         	goto	u780
  1885   001162                     u781:
  1886   001162  EFAC  F008         	goto	l378
  1887   001166                     u780:
  1888   001166                     
  1889                           ;I2C.c: 40:     SSP1CON2bits.PEN = 1;
  1890   001166  84C5               	bsf	197,2,c	;volatile
  1891   001168                     l381:
  1892   001168  A69E               	btfss	158,3,c	;volatile
  1893   00116A  EFB9  F008         	goto	u791
  1894   00116E  EFBB  F008         	goto	u790
  1895   001172                     u791:
  1896   001172  EFB4  F008         	goto	l381
  1897   001176                     u790:
  1898   001176                     
  1899                           ;I2C.c: 42:     PIR1bits.SSP1IF = 0;
  1900   001176  969E               	bcf	158,3,c	;volatile
  1901   001178  0012               	return		;funcret
  1902   00117A                     __end_of_I2C_Write_Register:
  1903                           	callstack 0
  1904                           
  1905 ;; *************** function _I2C_Read *****************
  1906 ;; Defined at:
  1907 ;;		line 44 in file "I2C.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;  Address         2    0[COMRAM] int 
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;		None
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  2    0[COMRAM] int 
  1914 ;; Registers used:
  1915 ;;		None
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1921 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1924 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1925 ;;Total ram usage:        2 bytes
  1926 ;; Hardware stack levels used: 1
  1927 ;; This function calls:
  1928 ;;		Nothing
  1929 ;; This function is called by:
  1930 ;;		_main
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           	psect	text16
  1935   0014CE                     __ptext16:
  1936                           	callstack 0
  1937   0014CE                     _I2C_Read:
  1938                           	callstack 30
  1939   0014CE                     
  1940                           ;I2C.c: 45:     SSP1CON2bits.SEN = 1;
  1941   0014CE  80C5               	bsf	197,0,c	;volatile
  1942   0014D0                     l387:
  1943   0014D0  B0C5               	btfsc	197,0,c	;volatile
  1944   0014D2  EF6D  F00A         	goto	u801
  1945   0014D6  EF6F  F00A         	goto	u800
  1946   0014DA                     u801:
  1947   0014DA  EF68  F00A         	goto	l387
  1948   0014DE                     u800:
  1949   0014DE                     
  1950                           ;I2C.c: 48:     SSP1BUF = Address;
  1951   0014DE  C001  FFC9         	movff	I2C_Read@Address,4041	;volatile
  1952                           
  1953                           ;I2C.c: 49:     PIR1bits.SSP1IF = 0;
  1954   0014E2  969E               	bcf	158,3,c	;volatile
  1955   0014E4                     l390:
  1956   0014E4  A69E               	btfss	158,3,c	;volatile
  1957   0014E6  EF77  F00A         	goto	u811
  1958   0014EA  EF79  F00A         	goto	u810
  1959   0014EE                     u811:
  1960   0014EE  EF72  F00A         	goto	l390
  1961   0014F2                     u810:
  1962   0014F2                     l393:
  1963   0014F2  BCC5               	btfsc	197,6,c	;volatile
  1964   0014F4  EF7E  F00A         	goto	u821
  1965   0014F8  EF80  F00A         	goto	u820
  1966   0014FC                     u821:
  1967   0014FC  EF79  F00A         	goto	l393
  1968   001500                     u820:
  1969   001500                     
  1970                           ;I2C.c: 53:     return SSP1BUF;
  1971   001500  CFC9 F001          	movff	4041,?_I2C_Read	;volatile
  1972   001504  6A02               	clrf	(?_I2C_Read+1)^0,c
  1973   001506  0012               	return		;funcret
  1974   001508                     __end_of_I2C_Read:
  1975                           	callstack 0
  1976                           
  1977 ;; *************** function _I2C_Init *****************
  1978 ;; Defined at:
  1979 ;;		line 12 in file "I2C.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;		None
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;		None
  1984 ;; Return value:  Size  Location     Type
  1985 ;;                  1    wreg      void 
  1986 ;; Registers used:
  1987 ;;		wreg, status,2
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1997 ;;Total ram usage:        0 bytes
  1998 ;; Hardware stack levels used: 1
  1999 ;; This function calls:
  2000 ;;		Nothing
  2001 ;; This function is called by:
  2002 ;;		_main
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           	psect	text17
  2007   001586                     __ptext17:
  2008                           	callstack 0
  2009   001586                     _I2C_Init:
  2010                           	callstack 30
  2011   001586                     
  2012                           ;I2C.c: 14:     SSP1STAT = 0x00;
  2013   001586  0E00               	movlw	0
  2014   001588  6EC7               	movwf	199,c	;volatile
  2015                           
  2016                           ;I2C.c: 15:     SSP1CON1 = 0x00;
  2017   00158A  0E00               	movlw	0
  2018   00158C  6EC6               	movwf	198,c	;volatile
  2019   00158E                     
  2020                           ;I2C.c: 16:     SSP1CON1bits.SSPEN = 1;
  2021   00158E  8AC6               	bsf	198,5,c	;volatile
  2022                           
  2023                           ;I2C.c: 17:     SSP1CON1bits.SSPM = 0x08;
  2024   001590  50C6               	movf	198,w,c	;volatile
  2025   001592  0BF0               	andlw	-16
  2026   001594  0908               	iorlw	8
  2027   001596  6EC6               	movwf	198,c	;volatile
  2028                           
  2029                           ;I2C.c: 18:     SSP1CON2 = 0x00;
  2030   001598  0E00               	movlw	0
  2031   00159A  6EC5               	movwf	197,c	;volatile
  2032                           
  2033                           ;I2C.c: 19:     SSP1ADD = 0x77;
  2034   00159C  0E77               	movlw	119
  2035   00159E  6EC8               	movwf	200,c	;volatile
  2036   0015A0  0012               	return		;funcret
  2037   0015A2                     __end_of_I2C_Init:
  2038                           	callstack 0
  2039                           
  2040                           	psect	rparam
  2041   000000                     
  2042                           	psect	idloc
  2043                           
  2044                           ;Config register IDLOC0 @ 0x200000
  2045                           ;	unspecified, using default values
  2046   200000                     	org	2097152
  2047   200000  FF                 	db	255
  2048                           
  2049                           ;Config register IDLOC1 @ 0x200001
  2050                           ;	unspecified, using default values
  2051   200001                     	org	2097153
  2052   200001  FF                 	db	255
  2053                           
  2054                           ;Config register IDLOC2 @ 0x200002
  2055                           ;	unspecified, using default values
  2056   200002                     	org	2097154
  2057   200002  FF                 	db	255
  2058                           
  2059                           ;Config register IDLOC3 @ 0x200003
  2060                           ;	unspecified, using default values
  2061   200003                     	org	2097155
  2062   200003  FF                 	db	255
  2063                           
  2064                           ;Config register IDLOC4 @ 0x200004
  2065                           ;	unspecified, using default values
  2066   200004                     	org	2097156
  2067   200004  FF                 	db	255
  2068                           
  2069                           ;Config register IDLOC5 @ 0x200005
  2070                           ;	unspecified, using default values
  2071   200005                     	org	2097157
  2072   200005  FF                 	db	255
  2073                           
  2074                           ;Config register IDLOC6 @ 0x200006
  2075                           ;	unspecified, using default values
  2076   200006                     	org	2097158
  2077   200006  FF                 	db	255
  2078                           
  2079                           ;Config register IDLOC7 @ 0x200007
  2080                           ;	unspecified, using default values
  2081   200007                     	org	2097159
  2082   200007  FF                 	db	255
  2083                           
  2084                           	psect	config
  2085                           
  2086                           ;Config register CONFIG1L @ 0x300000
  2087                           ;	VREG Sleep Enable bit
  2088                           ;	RETEN = ON, Enabled
  2089                           ;	LF-INTOSC Low-power Enable bit
  2090                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
  2091                           ;	SOSC Power Selection and mode Configuration bits
  2092                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
  2093                           ;	Extended Instruction Set
  2094                           ;	XINST = OFF, Disabled
  2095   300000                     	org	3145728
  2096   300000  15                 	db	21
  2097                           
  2098                           ;Config register CONFIG1H @ 0x300001
  2099                           ;	Oscillator
  2100                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
  2101                           ;	PLL x4 Enable bit
  2102                           ;	PLLCFG = ON, Enabled
  2103                           ;	Fail-Safe Clock Monitor
  2104                           ;	FCMEN = OFF, Disabled
  2105                           ;	Internal External Oscillator Switch Over Mode
  2106                           ;	IESO = OFF, Disabled
  2107   300001                     	org	3145729
  2108   300001  13                 	db	19
  2109                           
  2110                           ;Config register CONFIG2L @ 0x300002
  2111                           ;	Power Up Timer
  2112                           ;	PWRTEN = OFF, Disabled
  2113                           ;	Brown Out Detect
  2114                           ;	BOREN = OFF, Disabled in hardware, SBOREN disabled
  2115                           ;	Brown-out Reset Voltage bits
  2116                           ;	BORV = 0, 3.0V
  2117                           ;	BORMV Power level
  2118                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
  2119   300002                     	org	3145730
  2120   300002  61                 	db	97
  2121                           
  2122                           ;Config register CONFIG2H @ 0x300003
  2123                           ;	Watchdog Timer
  2124                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
  2125                           ;	Watchdog Postscaler
  2126                           ;	WDTPS = 1, 1:1
  2127   300003                     	org	3145731
  2128   300003  00                 	db	0
  2129                           
  2130                           ;Config register CONFIG3L @ 0x300004
  2131                           ;	RTCC Clock Select
  2132                           ;	RTCOSC = INTOSCREF, RTCC uses INTRC
  2133                           ;	External Address Shift bit
  2134                           ;	EASHFT = OFF, Address Shifting disabled
  2135                           ;	Address Bus Width Select bits
  2136                           ;	ABW = MM, 8-bit address bus
  2137                           ;	Data Bus Width
  2138                           ;	BW = 8, 8-bit external bus mode
  2139                           ;	External Bus Wait
  2140                           ;	WAIT = ON, Enabled
  2141   300004                     	org	3145732
  2142   300004  30                 	db	48
  2143                           
  2144                           ;Config register CONFIG3H @ 0x300005
  2145                           ;	CCP2 Mux
  2146                           ;	CCP2MX = PORTBE, RE7-Microcontroller Mode/RB3-All other modes
  2147                           ;	ECCP Mux
  2148                           ;	ECCPMX = PORTH, Enhanced CCP1/3 [P1B/P1C/P3B/P3C] muxed with RH7/RH6/RH5/RH4
  2149                           ;	MSSP address masking
  2150                           ;	MSSPMSK = MSK5, 5 bit address masking mode
  2151                           ;	Master Clear Enable
  2152                           ;	MCLRE = ON, MCLR Enabled, RG5 Disabled
  2153   300005                     	org	3145733
  2154   300005  80                 	db	128
  2155                           
  2156                           ;Config register CONFIG4L @ 0x300006
  2157                           ;	Stack Overflow Reset
  2158                           ;	STVREN = ON, Enabled
  2159                           ;	Boot Block Size
  2160                           ;	BBSIZ = BB1K, 1K word Boot Block size
  2161                           ;	Background Debug
  2162                           ;	DEBUG = OFF, Disabled
  2163   300006                     	org	3145734
  2164   300006  81                 	db	129
  2165                           
  2166                           ; Padding undefined space
  2167   300007                     	org	3145735
  2168   300007  FF                 	db	255
  2169                           
  2170                           ;Config register CONFIG5L @ 0x300008
  2171                           ;	Code Protect 00800-03FFF
  2172                           ;	CP0 = OFF, Disabled
  2173                           ;	Code Protect 04000-07FFF
  2174                           ;	CP1 = OFF, Disabled
  2175                           ;	Code Protect 08000-0BFFF
  2176                           ;	CP2 = OFF, Disabled
  2177                           ;	Code Protect 0C000-0FFFF
  2178                           ;	CP3 = OFF, Disabled
  2179                           ;	Code Protect 10000-13FFF
  2180                           ;	CP4 = OFF, Disabled
  2181                           ;	Code Protect 14000-17FFF
  2182                           ;	CP5 = OFF, Disabled
  2183                           ;	Code Protect 18000-1BFFF
  2184                           ;	CP6 = OFF, Disabled
  2185                           ;	Code Protect 1C000-1FFFF
  2186                           ;	CP7 = OFF, Disabled
  2187   300008                     	org	3145736
  2188   300008  FF                 	db	255
  2189                           
  2190                           ;Config register CONFIG5H @ 0x300009
  2191                           ;	Code Protect Boot
  2192                           ;	CPB = OFF, Disabled
  2193                           ;	Data EE Read Protect
  2194                           ;	CPD = OFF, Disabled
  2195   300009                     	org	3145737
  2196   300009  C0                 	db	192
  2197                           
  2198                           ;Config register CONFIG6L @ 0x30000A
  2199                           ;	Table Write Protect 00800-03FFF
  2200                           ;	WRT0 = OFF, Disabled
  2201                           ;	Table Write Protect 04000-07FFF
  2202                           ;	WRT1 = OFF, Disabled
  2203                           ;	Table Write Protect 08000-0BFFF
  2204                           ;	WRT2 = OFF, Disabled
  2205                           ;	Table Write Protect 0C000-0FFFF
  2206                           ;	WRT3 = OFF, Disabled
  2207                           ;	Table Write Protect 10000-13FFF
  2208                           ;	WRT4 = OFF, Disabled
  2209                           ;	Table Write Protect 14000-17FFF
  2210                           ;	WRT5 = OFF, Disabled
  2211                           ;	Table Write Protect 18000-1BFFF
  2212                           ;	WRT6 = OFF, Disabled
  2213                           ;	Table Write Protect 1C000-1FFFF
  2214                           ;	WRT7 = OFF, Disabled
  2215   30000A                     	org	3145738
  2216   30000A  FF                 	db	255
  2217                           
  2218                           ;Config register CONFIG6H @ 0x30000B
  2219                           ;	Config. Write Protect
  2220                           ;	WRTC = OFF, Disabled
  2221                           ;	Table Write Protect Boot
  2222                           ;	WRTB = OFF, Disabled
  2223                           ;	Data EE Write Protect
  2224                           ;	WRTD = OFF, Disabled
  2225   30000B                     	org	3145739
  2226   30000B  E0                 	db	224
  2227                           
  2228                           ;Config register CONFIG7L @ 0x30000C
  2229                           ;	Table Read Protect 00800-03FFF
  2230                           ;	EBRT0 = OFF, Disabled
  2231                           ;	Table Read Protect 04000-07FFF
  2232                           ;	EBRT1 = OFF, Disabled
  2233                           ;	Table Read Protect 08000-0BFFF
  2234                           ;	EBRT2 = OFF, Disabled
  2235                           ;	Table Read Protect 0C000-0FFFF
  2236                           ;	EBRT3 = OFF, Disabled
  2237                           ;	Table Read Protect 10000-13FFF
  2238                           ;	EBRT4 = OFF, Disabled
  2239                           ;	Table Read Protect 14000-17FFF
  2240                           ;	EBRT5 = OFF, Disabled
  2241                           ;	Table Read Protect 18000-1BFFF
  2242                           ;	EBRT6 = OFF, Disabled
  2243                           ;	Table Read Protect 1C000-1FFFF
  2244                           ;	EBRT7 = OFF, Disabled
  2245   30000C                     	org	3145740
  2246   30000C  FF                 	db	255
  2247                           
  2248                           ;Config register CONFIG7H @ 0x30000D
  2249                           ;	Table Read Protect Boot
  2250                           ;	EBRTB = OFF, Disabled
  2251   30000D                     	org	3145741
  2252   30000D  40                 	db	64
  2253                           tosu	equ	0xFFF
  2254                           tosh	equ	0xFFE
  2255                           tosl	equ	0xFFD
  2256                           stkptr	equ	0xFFC
  2257                           pclatu	equ	0xFFB
  2258                           pclath	equ	0xFFA
  2259                           pcl	equ	0xFF9
  2260                           tblptru	equ	0xFF8
  2261                           tblptrh	equ	0xFF7
  2262                           tblptrl	equ	0xFF6
  2263                           tablat	equ	0xFF5
  2264                           prodh	equ	0xFF4
  2265                           prodl	equ	0xFF3
  2266                           indf0	equ	0xFEF
  2267                           postinc0	equ	0xFEE
  2268                           postdec0	equ	0xFED
  2269                           preinc0	equ	0xFEC
  2270                           plusw0	equ	0xFEB
  2271                           fsr0h	equ	0xFEA
  2272                           fsr0l	equ	0xFE9
  2273                           wreg	equ	0xFE8
  2274                           indf1	equ	0xFE7
  2275                           postinc1	equ	0xFE6
  2276                           postdec1	equ	0xFE5
  2277                           preinc1	equ	0xFE4
  2278                           plusw1	equ	0xFE3
  2279                           fsr1h	equ	0xFE2
  2280                           fsr1l	equ	0xFE1
  2281                           bsr	equ	0xFE0
  2282                           indf2	equ	0xFDF
  2283                           postinc2	equ	0xFDE
  2284                           postdec2	equ	0xFDD
  2285                           preinc2	equ	0xFDC
  2286                           plusw2	equ	0xFDB
  2287                           fsr2h	equ	0xFDA
  2288                           fsr2l	equ	0xFD9
  2289                           status	equ	0xFD8

Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      17
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    draw_string@tableau	PTR unsigned char  size(2) Largest target is 3861
		 -> RAM(DATA[3861]), STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_goto_lico
    _initialisation_afficheur->_d2command
    _command->_wait_status_ok
    _goto_lico->_d2command
    _draw_string->_d1command
    _clear_text->_d2command
    _clear_graphics->_d2command
    _d2command->_wait_status_ok
    _d1command->_wait_status_ok
    _wait_status_ok->_delai_us_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   13401
                           _I2C_Init
                           _I2C_Read
                 _I2C_Write_Register
                     _clear_graphics
                         _clear_text
                        _draw_string
                          _goto_lico
           _initialisation_afficheur
           _initialisation_des_ports
 ---------------------------------------------------------------------------------
 (1) _initialisation_des_ports                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialisation_afficheur                             1     1      0    3222
                                              8 COMRAM     1     1      0
                    _check_status_ok
                            _command
                          _d1command
                          _d2command
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (2) _command                                              2     2      0     140
                                              4 COMRAM     1     1      0
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
 ---------------------------------------------------------------------------------
 (2) _check_status_ok                                      1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _goto_lico                                            6     5      1    2435
                                              8 COMRAM     6     5      1
                          _d2command
 ---------------------------------------------------------------------------------
 (1) _draw_string                                          2     0      2    1008
                                              7 COMRAM     2     0      2
                           _I2C_Read (ARG)
                          _d1command
 ---------------------------------------------------------------------------------
 (1) _clear_text                                           2     2      0    3058
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (1) _clear_graphics                                       2     2      0    3058
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (2) _d2command                                            4     2      2    2201
                                              4 COMRAM     4     2      2
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (2) _d1command                                            3     2      1     811
                                              4 COMRAM     3     2      1
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (3) _write_d_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _write_c_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _wait_status_ok                                       3     3      0      90
                                              1 COMRAM     3     3      0
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (2) _delai_us_char                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Write_Register                                   6     0      6     522
                                              0 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (1) _I2C_Read                                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _I2C_Read
   _I2C_Write_Register
   _clear_graphics
     _d1command
       _delai_us_char
       _wait_status_ok
         _delai_us_char
       _write_c_aff
       _write_d_aff
     _d2command
       _delai_us_char
       _wait_status_ok
       _write_c_aff
       _write_d_aff
   _clear_text
     _d1command
     _d2command
   _draw_string
     _I2C_Read (ARG)
     _d1command (ARG)
   _goto_lico
     _d2command
   _initialisation_afficheur
     _check_status_ok
     _command
       _delai_us_char
       _wait_status_ok
       _write_c_aff
     _d1command
     _d2command
     _delai_us_char
   _initialisation_des_ports

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      56        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      E      11       1       17.9%
BITBIGSFRhllhl      2C      0       0      52        0.0%
BITBIGSFRhlhlll     1C      0       0      48        0.0%
BITBIGSFRhhhl       1C      0       0      37        0.0%
BITBANK15           16      0       0      34        0.0%
BANK15              16      0       0      35        0.0%
BITBIGSFRhhlhl      15      0       0      39        0.0%
BITBIGSFRhllhh      11      0       0      51        0.0%
BITBIGSFRhhhh        E      0       0      36        0.0%
BITBIGSFRhhlhh       A      0       0      38        0.0%
BITBIGSFRhlhhh       9      0       0      41        0.0%
BITBIGSFRll          6      0       0      54        0.0%
BITBIGSFRhlhllh      3      0       0      47        0.0%
BITBIGSFRhlhlhh      3      0       0      43        0.0%
BITBIGSFRhlhllh      2      0       0      46        0.0%
BITBIGSFRhlhhl       2      0       0      42        0.0%
BITBIGSFRhlhlll      1      0       0      49        0.0%
BITBIGSFRhlhlhl      1      0       0      44        0.0%
BITBIGSFRhlhlhl      1      0       0      45        0.0%
BITBIGSFRlh          1      0       0      53        0.0%
BITBIGSFRhlhlll      1      0       0      50        0.0%
BITBIGSFRhhll        1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      11      55        0.0%
DATA                 0      0      11       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Jan 16 12:02:14 2023

          ?_initialisation_des_ports 0001                                   l72 15BA  
                                 l80 1458                                   l75 15D4  
                                 l84 12FA                                   l93 1584  
                                 l79 1456                                   l89 1362  
                                 l98 141E                                   u10 1534  
                                 u11 1530                                   u20 1324  
                                 u21 1320                                   u30 133C  
                                 u31 1338                                   u40 1360  
                                 u41 135C                                   u50 144A  
                                 u51 1446                                   u60 1578  
                                 u61 1574                                  l110 1534  
                                l104 13D0                                  l131 1200  
                                l108 150E                                  l117 10EE  
                                l134 1274                                  l160 1492  
                                l153 12CC                                  l155 12EC  
                                l165 14CC                                  l360 10F2  
                                l362 1100                                  l363 1106  
                                l380 1166                                  l372 1136  
                                l357 15A0                                  l381 1168  
                                l390 14E4                                  l374 1144  
                                l366 1114                                  l278 1560  
                                l383 1176                                  l375 114A  
                                l384 1178                                  l368 1122  
                                l393 14F2                                  l369 1128  
                                l378 1158                                  l395 1500  
                                l387 14D0                                  l396 1506  
                                l389 14DE                         ?_draw_string 0008  
                                u600 13BE                                  u601 13BA  
                                u610 1052                                  u611 104E  
                                u700 1492                                  u620 1070  
                                u701 148E                                  u621 106C  
                                u710 14CC                                  u630 1228  
                                u711 14C8                                  u800 14DE  
                                u720 1100                                  u560 13EC  
                                u640 123E                                  u801 14DA  
                                u721 10FC                                  u561 13E8  
                                u641 123A                                  u810 14F2  
                                u730 1114                                  u570 140C  
                                u650 1264                                  u811 14EE  
                                u731 1110                                  u571 1408  
                                u820 1500                                  u740 1122  
                                u580 137E                                  u660 1274  
                                u821 14FC                                  u741 111E  
                                u581 137A                                  u661 1270  
                                u637 121E                                  u750 1136  
                                u590 139E                                  u670 1290  
                                u751 1132                                  u591 139A  
                                u671 128C                                  u760 1144  
                                u680 12A4                                  u761 1140  
                                u657 125A                                  u681 12A0  
                                u770 1158                                  u690 12EC  
                                u771 1154                                  u691 12E8  
                                u780 1166                                  u781 1162  
                                u790 1176                                  u791 1172  
                                wreg 000FE8                                 l1100 15C6  
                               l1110 15D0                                 l1102 15C8  
                               l1120 1326                                 l1112 15D2  
                               l1104 15CA                                 l1122 132C  
                               l1130 134E                                 l1114 12EE  
                               l1106 15CC                                 l1132 1360  
                               l1124 133C                                 l1116 130C  
                               l1108 15CE                                 l1140 144A  
                               l1126 1342                                 l1118 1324  
                               l1142 1452                                 l1150 1578  
                               l1072 150A                                 l1128 134A  
                               l1080 15A8                                 l1136 1420  
                               l1152 157E                                 l1074 1522  
                               l1090 15B4                                 l1082 15AC  
                               l1138 1436                                 l1154 1584  
                               l1146 1564                                 l1076 1524  
                               l1092 15B6                                 l1084 15AE  
                               l1148 1564                                 l1094 15B8  
                               l1086 15B0                                 l1078 15A4  
                               l1096 15BE                                 l1088 15B2  
                               l1600 13CE                                 l1360 154A  
                               l1098 15C2                                 l1610 1026  
                               l1370 1554                                 l1362 154C  
                               l1620 103C                                 l1612 1028  
                               l1604 100E                                 l1380 155E  
                               l1372 1556                                 l1364 154E  
                               l1356 1536                                 l1382 1586  
                               l1630 1070                                 l1622 1042  
                               l1614 102E                                 l1606 1022  
                               l1374 1558                                 l1366 1550  
                               l1358 1548                                 l1384 158E  
                               l1560 13D8                                 l1632 11FC  
                               l1640 1278                                 l1624 1052  
                               l1616 1030                                 l1608 1024  
                               l1376 155A                                 l1368 1552  
                               l1800 11C0                                 l1706 10F0  
                               l1570 1412                                 l1562 13EC  
                               l1634 1202                                 l1650 12A8  
                               l1642 1280                                 l1626 1058  
                               l1618 103A                                 l1378 155C  
                               l1802 11DC                                 l1708 14CE  
                               l1572 1418                                 l1564 13F2  
                               l1580 136A                                 l1636 123E  
                               l1652 12CE                                 l1644 1290  
                               l1628 105C                                 l1566 13F8  
                               l1574 141C                                 l1558 13D4  
                               l1590 13A4                                 l1582 137E  
                               l1670 14A2                                 l1662 1470  
                               l1654 145A                                 l1638 1242  
                               l1646 1294                                 l1568 140C  
                               l1592 13AA                                 l1584 1384  
                               l1680 14B8                                 l1664 147A  
                               l1656 1468                                 l1648 12A4  
                               l1594 13BE                                 l1586 138A  
                               l1578 1366                                 l1666 147E  
                               l1596 13C4                                 l1588 139E  
                               l1676 14AA                                 l1668 1494  
                               l1598 13CA                                 l1678 14B4  
                               l1790 1186                                 l1792 118A  
                               l1784 117A                                 l1794 1194  
                               l1786 117E                                 l1796 11A0  
                               l1788 1182                                 l1798 11A4  
                               STR_1 1001                                 _LATH 000F90  
                               _LATJ 000F91                                 _main 117A  
                   __end_of_I2C_Init 15A2                     __end_of_I2C_Read 1508  
                               fsr0h 000FEA                                 indf0 000FEF  
                               fsr0l 000FE9                                 prodh 000FF4  
                               prodl 000FF3                                 start 0000  
                       ___param_bank 000000                     ??_wait_status_ok 0002  
             EEP_SPI_WriteByte@F6879 000F                                ?_main 0001  
                              _TX1IF 007CF4                                _PORTH 000F87  
                              _TRISH 000F99                                _TRISJ 000F9A  
                        _write_c_aff 15BC                          _write_d_aff 15A2  
                    write_d_aff@data 0001                      __end_of_command 1586  
                              tablat 000FF5                __end_of_delai_us_char 1536  
                    _check_status_ok 1420                                status 000FD8  
                    __initialization 15D6                         __end_of_main 11FC  
                             ??_main 000F                        __activetblptr 000003  
                             _ANCON0 000F25                               _ANCON1 000F24  
                             _ANCON2 000F23                               _MEMCON 000F26  
                             _RCSTA1 000FAB                               _RCSTA2 000F22  
                             _SPBRG1 000FAF                               _SPBRG2 000F1E  
                             _TXREG1 000FAD                               _TXREG2 000F1C  
                             _TXSTA1 000FAC                               _TXSTA2 000F21  
                             isa$std 000001                            ??_command 0005  
                          ?_I2C_Init 0001                            ?_I2C_Read 0001  
                       __mediumconst 0000                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
            __end_of_check_status_ok 145A                           __accesstop 0060  
            __end_of__initialization 15DC                        ___rparam_used 000001  
          I2C_Write_Register@Address 0001                       __pcstackCOMRAM 0001  
                  __end_of_d1command 1420                    __end_of_d2command 13D2  
                         ??_I2C_Init 0001                           ??_I2C_Read 0003  
                     _clear_graphics 1494                           _clear_text 145A  
                       ?_write_c_aff 0001                         ?_write_d_aff 0001  
           _initialisation_afficheur 100E                              _SPBRGH1 000FD4  
                            _SPBRGH2 000F1F                              _SSP1ADD 000FC8  
                   ?_check_status_ok 0001                              _SSP1BUF 000FC9  
                            _SSP2BUF 000F6A                    wait_status_ok@err 0002  
                  wait_status_ok@res 0004               __end_of_clear_graphics 14CE  
           _initialisation_des_ports 1536                              __Hparam 0000  
                            __Lparam 0000                         __psmallconst 1000  
                            __pcinit 15D6           __end_of_I2C_Write_Register 117A  
                            __ramtop 1000                              __ptext0 117A  
                            __ptext1 1536                              __ptext2 100E  
                            __ptext3 1562                              __ptext4 1420  
                            __ptext5 1276                              __ptext6 11FC  
                            __ptext7 145A                              __ptext8 1494  
                            __ptext9 1364                              _command 1562  
                 draw_string@tableau 0008                    __end_of_goto_lico 12EE  
               end_of_initialization 15DC                      ?_clear_graphics 0001  
                        ?_clear_text 0001                         goto_lico@adr 000D  
                          _TRISAbits 000F92                            _TRISCbits 000F94  
                          _TRISDbits 000F95                            _TRISFbits 000F97  
                          _TRISGbits 000F98                    clear_graphics@add 0009  
                         command@cmd 0005                   check_status_ok@res 0001  
                          _d1command 13D2                            _d2command 1364  
                      ??_draw_string 000A           I2C_Write_Register@Register 0003  
                start_initialization 15D6                        _delai_us_char 1508  
         ??_initialisation_afficheur 0009                        clear_text@add 0009  
                         ?_d1command 0005                 delai_us_char@ucdelai 0001  
                         ?_d2command 0005                          __pbssCOMRAM 000F  
                    I2C_Read@Address 0001           ??_initialisation_des_ports 0001  
                __end_of_draw_string 1276                       ?_delai_us_char 0001  
                           ?_command 0001                       _wait_status_ok 12EE  
                        __smallconst 1000                             _BAUDCON1 000F65  
                           _BAUDCON2 000F20                     goto_lico@colonne 0009  
                           _I2C_Init 1586                             _I2C_Read 14CE  
                        _PADCFG1bits 000F53                     ??_clear_graphics 0009  
                 _I2C_Write_Register 10F0                   write_c_aff@command 0001  
                          _goto_lico 1276                             _LATCbits 000F8B  
                           _LATFbits 000F8E                             _LATGbits 000F8F  
                           _LATJbits 000F91                  ?_I2C_Write_Register 0001  
                           _PIR1bits 000F9E                             _PIR2bits 000FA1  
                       ??_clear_text 0009                             _SSP1CON1 000FC6  
                           _SSP1CON2 000FC5                             _SSP2CON1 000F67  
                           _SSP1STAT 000FC7                             _SSP2STAT 000F68  
             __end_of_wait_status_ok 1364                          ??_d1command 0006  
                        ??_d2command 0007                 ??_I2C_Write_Register 0007  
                        _draw_string 11FC                          _INTCON2bits 000FF1  
                    ??_delai_us_char 0001                   __end_of_clear_text 1494  
                         ?_goto_lico 0009                             __Hrparam 0000  
                           __Lrparam 0000     __end_of_initialisation_afficheur 10F0  
                    ?_wait_status_ok 0001  initialisation_afficheur@error_count 0009  
   __end_of_initialisation_des_ports 1562                             __ptext10 13D2  
                           __ptext11 15A2                             __ptext12 15BC  
                           __ptext13 12EE                             __ptext14 1508  
                           __ptext15 10F0                             __ptext16 14CE  
                           __ptext17 1586                         _SSP1CON1bits 000FC6  
                       _SSP1CON2bits 000FC5                         _SSP2CON1bits 000F67  
                           isa$xinst 000000                    ??_check_status_ok 0001  
                      ??_write_c_aff 0001                        ??_write_d_aff 0001  
                        ??_goto_lico 000A                       goto_lico@ligne 000C  
                       d1command@cmd 0005                         d1command@res 0007  
             I2C_Write_Register@data 0005                          d1command@d1 0006  
                __end_of_write_c_aff 15D6                  __end_of_write_d_aff 15BC  
                       d2command@cmd 0006            ?_initialisation_afficheur 0001  
                       d2command@res 0008                 wait_status_ok@status 0003  
                        d2command@d1 0007                          d2command@d2 0005  
