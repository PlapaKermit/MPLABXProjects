

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Jan 16 12:13:18 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F87K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    31   000000                     
    32                           ; Generated 06/04/2022 GMT
    33                           ; 
    34                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F87K22 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66   000000                     _ANCON2	set	3875
    67   000000                     _ANCON1	set	3876
    68   000000                     _ANCON0	set	3877
    69   000000                     _MEMCON	set	3878
    70   000000                     _BAUDCON1	set	3941
    71   000000                     _RCSTA1	set	4011
    72   000000                     _TXSTA1	set	4012
    73   000000                     _RCSTA2	set	3874
    74   000000                     _PIR1bits	set	3998
    75   000000                     _SSP1CON2bits	set	4037
    76   000000                     _SSP1CON1bits	set	4038
    77   000000                     _SSP2CON1bits	set	3943
    78   000000                     _LATJ	set	3985
    79   000000                     _TXREG2	set	3868
    80   000000                     _SPBRG2	set	3870
    81   000000                     _SPBRGH2	set	3871
    82   000000                     _BAUDCON2	set	3872
    83   000000                     _TXSTA2	set	3873
    84   000000                     _TXREG1	set	4013
    85   000000                     _SPBRG1	set	4015
    86   000000                     _SPBRGH1	set	4052
    87   000000                     _SSP2CON1	set	3943
    88   000000                     _SSP2STAT	set	3944
    89   000000                     _PORTH	set	3975
    90   000000                     _LATH	set	3984
    91   000000                     _TX1IF	set	31988
    92   000000                     _INTCON2bits	set	4081
    93   000000                     _SSP1CON2	set	4037
    94   000000                     _SSP1CON1	set	4038
    95   000000                     _SSP1STAT	set	4039
    96   000000                     _PIR2bits	set	4001
    97   000000                     _TRISCbits	set	3988
    98   000000                     _TRISAbits	set	3986
    99   000000                     _LATJbits	set	3985
   100   000000                     _TRISH	set	3993
   101   000000                     _TRISJ	set	3994
   102   000000                     _LATCbits	set	3979
   103   000000                     _LATFbits	set	3982
   104   000000                     _LATGbits	set	3983
   105   000000                     _PADCFG1bits	set	3923
   106   000000                     _TRISFbits	set	3991
   107   000000                     _TRISDbits	set	3989
   108   000000                     _TRISGbits	set	3992
   109   000000                     _SSP2BUF	set	3946
   110   000000                     _SSP1BUF	set	4041
   111   000000                     _SSP1ADD	set	4040
   112                           
   113                           	psect	smallconst
   114   001000                     __psmallconst:
   115                           	callstack 0
   116   001000  00                 	db	0
   117   001001                     STR_1:
   118   001001  48                 	db	72	;'H'
   119   001002  65                 	db	101	;'e'
   120   001003  6C                 	db	108	;'l'
   121   001004  6C                 	db	108	;'l'
   122   001005  6F                 	db	111	;'o'
   123   001006  20                 	db	32
   124   001007  57                 	db	87	;'W'
   125   001008  6F                 	db	111	;'o'
   126   001009  72                 	db	114	;'r'
   127   00100A  6C                 	db	108	;'l'
   128   00100B  64                 	db	100	;'d'
   129   00100C  00                 	db	0
   130   00100D  00                 	db	0	; dummy byte at the end
   131   000000                     
   132                           ; #config settings
   133                           
   134                           	psect	cinit
   135   0015AA                     __pcinit:
   136                           	callstack 0
   137   0015AA                     start_initialization:
   138                           	callstack 0
   139   0015AA                     __initialization:
   140                           	callstack 0
   141                           
   142                           ; Clear objects allocated to COMRAM (3 bytes)
   143   0015AA  6A11               	clrf	(__pbssCOMRAM+2)& (0+255),c
   144   0015AC  6A10               	clrf	(__pbssCOMRAM+1)& (0+255),c
   145   0015AE  6A0F               	clrf	__pbssCOMRAM& (0+255),c
   146   0015B0                     end_of_initialization:
   147                           	callstack 0
   148   0015B0                     __end_of__initialization:
   149                           	callstack 0
   150   0015B0  0100               	movlb	0
   151   0015B2  EF78  F008         	goto	_main	;jump to C main() function
   152                           
   153                           	psect	bssCOMRAM
   154   00000F                     __pbssCOMRAM:
   155                           	callstack 0
   156   00000F                     	ds	3
   157                           
   158                           	psect	cstackCOMRAM
   159   000001                     __pcstackCOMRAM:
   160                           	callstack 0
   161   000001                     ?_I2C_Read:
   162                           	callstack 0
   163   000001                     write_d_aff@data:
   164                           	callstack 0
   165   000001                     write_c_aff@command:
   166                           	callstack 0
   167   000001                     check_status_ok@res:
   168                           	callstack 0
   169   000001                     delai_us_char@ucdelai:
   170                           	callstack 0
   171   000001                     I2C_Write_Register@Address:
   172                           	callstack 0
   173   000001                     I2C_Read@Address:
   174                           	callstack 0
   175                           
   176                           ; 2 bytes @ 0x0
   177   000001                     	ds	1
   178   000002                     wait_status_ok@err:
   179                           	callstack 0
   180                           
   181                           ; 1 bytes @ 0x1
   182   000002                     	ds	1
   183   000003                     wait_status_ok@status:
   184                           	callstack 0
   185   000003                     I2C_Write_Register@Register:
   186                           	callstack 0
   187                           
   188                           ; 2 bytes @ 0x2
   189   000003                     	ds	1
   190   000004                     wait_status_ok@res:
   191                           	callstack 0
   192                           
   193                           ; 1 bytes @ 0x3
   194   000004                     	ds	1
   195   000005                     command@cmd:
   196                           	callstack 0
   197   000005                     d1command@cmd:
   198                           	callstack 0
   199   000005                     d2command@d2:
   200                           	callstack 0
   201   000005                     I2C_Write_Register@data:
   202                           	callstack 0
   203                           
   204                           ; 2 bytes @ 0x4
   205   000005                     	ds	1
   206   000006                     d1command@d1:
   207                           	callstack 0
   208   000006                     d2command@cmd:
   209                           	callstack 0
   210                           
   211                           ; 1 bytes @ 0x5
   212   000006                     	ds	1
   213   000007                     d1command@res:
   214                           	callstack 0
   215   000007                     d2command@d1:
   216                           	callstack 0
   217                           
   218                           ; 1 bytes @ 0x6
   219   000007                     	ds	1
   220   000008                     d2command@res:
   221                           	callstack 0
   222   000008                     draw_string@tableau:
   223                           	callstack 0
   224                           
   225                           ; 2 bytes @ 0x7
   226   000008                     	ds	1
   227   000009                     initialisation_afficheur@error_count:
   228                           	callstack 0
   229   000009                     goto_lico@colonne:
   230                           	callstack 0
   231   000009                     clear_text@add:
   232                           	callstack 0
   233   000009                     clear_graphics@add:
   234                           	callstack 0
   235                           
   236                           ; 2 bytes @ 0x8
   237   000009                     	ds	1
   238   00000A                     ??_goto_lico:
   239                           
   240                           ; 1 bytes @ 0x9
   241   00000A                     	ds	2
   242   00000C                     goto_lico@ligne:
   243                           	callstack 0
   244                           
   245                           ; 1 bytes @ 0xB
   246   00000C                     	ds	1
   247   00000D                     goto_lico@adr:
   248                           	callstack 0
   249                           
   250                           ; 2 bytes @ 0xC
   251   00000D                     	ds	2
   252   00000F                     
   253                           ; 1 bytes @ 0xE
   254 ;;
   255 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   256 ;;
   257 ;; *************** function _main *****************
   258 ;; Defined at:
   259 ;;		line 49 in file "main.c"
   260 ;; Parameters:    Size  Location     Type
   261 ;;		None
   262 ;; Auto vars:     Size  Location     Type
   263 ;;		None
   264 ;; Return value:  Size  Location     Type
   265 ;;                  1    wreg      void 
   266 ;; Registers used:
   267 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   268 ;; Tracked objects:
   269 ;;		On entry : 0/0
   270 ;;		On exit  : 0/0
   271 ;;		Unchanged: 0/0
   272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   277 ;;Total ram usage:        0 bytes
   278 ;; Hardware stack levels required when called: 4
   279 ;; This function calls:
   280 ;;		_I2C_Init
   281 ;;		_I2C_Read
   282 ;;		_I2C_Write_Register
   283 ;;		_clear_graphics
   284 ;;		_clear_text
   285 ;;		_draw_string
   286 ;;		_goto_lico
   287 ;;		_initialisation_afficheur
   288 ;;		_initialisation_des_ports
   289 ;; This function is called by:
   290 ;;		Startup code after reset
   291 ;; This function uses a non-reentrant model
   292 ;;
   293                           
   294                           	psect	text0
   295   0010F0                     __ptext0:
   296                           	callstack 0
   297   0010F0                     _main:
   298                           	callstack 27
   299   0010F0                     
   300                           ;main.c: 51:     initialisation_des_ports();
   301   0010F0  EC85  F00A         	call	_initialisation_des_ports	;wreg free
   302   0010F4                     
   303                           ;main.c: 52:     initialisation_afficheur();
   304   0010F4  EC07  F008         	call	_initialisation_afficheur	;wreg free
   305   0010F8                     
   306                           ;main.c: 53:     clear_text();
   307   0010F8  EC18  F00A         	call	_clear_text	;wreg free
   308   0010FC                     
   309                           ;main.c: 54:     clear_graphics();
   310   0010FC  EC35  F00A         	call	_clear_graphics	;wreg free
   311   001100                     
   312                           ;main.c: 56:     goto_lico(0,0);
   313   001100  0E00               	movlw	0
   314   001102  6E09               	movwf	goto_lico@colonne^0,c
   315   001104  0E00               	movlw	0
   316   001106  ECF6  F008         	call	_goto_lico
   317   00110A                     
   318                           ;main.c: 57:     draw_string("Hello World");
   319   00110A  0E01               	movlw	low STR_1
   320   00110C  6E08               	movwf	draw_string@tableau^0,c
   321   00110E  0E10               	movlw	high STR_1
   322   001110  6E09               	movwf	(draw_string@tableau+1)^0,c
   323   001112  ECB9  F008         	call	_draw_string	;wreg free
   324   001116                     
   325                           ;main.c: 58:     I2C_Init();
   326   001116  ECAD  F00A         	call	_I2C_Init	;wreg free
   327   00111A                     
   328                           ;main.c: 59:     I2C_Write_Register(0xA0, 0x08, 0x00);
   329   00111A  0E00               	movlw	0
   330   00111C  6E02               	movwf	(I2C_Write_Register@Address+1)^0,c
   331   00111E  0EA0               	movlw	160
   332   001120  6E01               	movwf	I2C_Write_Register@Address^0,c
   333   001122  0E00               	movlw	0
   334   001124  6E04               	movwf	(I2C_Write_Register@Register+1)^0,c
   335   001126  0E08               	movlw	8
   336   001128  6E03               	movwf	I2C_Write_Register@Register^0,c
   337   00112A  0E00               	movlw	0
   338   00112C  6E06               	movwf	(I2C_Write_Register@data+1)^0,c
   339   00112E  0E00               	movlw	0
   340   001130  6E05               	movwf	I2C_Write_Register@data^0,c
   341   001132  ECA4  F009         	call	_I2C_Write_Register	;wreg free
   342   001136                     
   343                           ;main.c: 60:     I2C_Write_Register(0xA0,0x00,0x20);
   344   001136  0E00               	movlw	0
   345   001138  6E02               	movwf	(I2C_Write_Register@Address+1)^0,c
   346   00113A  0EA0               	movlw	160
   347   00113C  6E01               	movwf	I2C_Write_Register@Address^0,c
   348   00113E  0E00               	movlw	0
   349   001140  6E04               	movwf	(I2C_Write_Register@Register+1)^0,c
   350   001142  0E00               	movlw	0
   351   001144  6E03               	movwf	I2C_Write_Register@Register^0,c
   352   001146  0E00               	movlw	0
   353   001148  6E06               	movwf	(I2C_Write_Register@data+1)^0,c
   354   00114A  0E20               	movlw	32
   355   00114C  6E05               	movwf	I2C_Write_Register@data^0,c
   356   00114E  ECA4  F009         	call	_I2C_Write_Register	;wreg free
   357   001152                     l1793:
   358                           
   359                           ;main.c: 63:     {;main.c: 64:         draw_string(I2C_Read(0xA1));
   360   001152  0E00               	movlw	0
   361   001154  6E02               	movwf	(I2C_Read@Address+1)^0,c
   362   001156  0EA1               	movlw	161
   363   001158  6E01               	movwf	I2C_Read@Address^0,c
   364   00115A  EC52  F00A         	call	_I2C_Read	;wreg free
   365   00115E  C001  F008         	movff	?_I2C_Read,draw_string@tableau
   366   001162  C002  F009         	movff	?_I2C_Read+1,draw_string@tableau+1
   367   001166  ECB9  F008         	call	_draw_string	;wreg free
   368   00116A  EFA9  F008         	goto	l1793
   369   00116E  EF01  F000         	goto	start
   370   001172                     __end_of_main:
   371                           	callstack 0
   372                           
   373 ;; *************** function _initialisation_des_ports *****************
   374 ;; Defined at:
   375 ;;		line 18 in file "main.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;		None
   378 ;; Auto vars:     Size  Location     Type
   379 ;;		None
   380 ;; Return value:  Size  Location     Type
   381 ;;                  1    wreg      void 
   382 ;; Registers used:
   383 ;;		wreg, status,2
   384 ;; Tracked objects:
   385 ;;		On entry : 0/0
   386 ;;		On exit  : 0/0
   387 ;;		Unchanged: 0/0
   388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   393 ;;Total ram usage:        0 bytes
   394 ;; Hardware stack levels used: 1
   395 ;; This function calls:
   396 ;;		Nothing
   397 ;; This function is called by:
   398 ;;		_main
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           
   402                           	psect	text1
   403   00150A                     __ptext1:
   404                           	callstack 0
   405   00150A                     _initialisation_des_ports:
   406                           	callstack 30
   407   00150A                     
   408                           ;main.c: 21:     MEMCON=0xA0;
   409   00150A  0EA0               	movlw	160
   410   00150C  010F               	movlb	15	; () banked
   411   00150E  6F26               	movwf	38,b	;volatile
   412                           
   413                           ;main.c: 24:     ANCON0=0x03;
   414   001510  0E03               	movlw	3
   415   001512  6F25               	movwf	37,b	;volatile
   416                           
   417                           ;main.c: 25:     ANCON1=0x08;
   418   001514  0E08               	movlw	8
   419   001516  6F24               	movwf	36,b	;volatile
   420                           
   421                           ;main.c: 26:     ANCON2=0x00;
   422   001518  0E00               	movlw	0
   423   00151A  6F23               	movwf	35,b	;volatile
   424   00151C                     
   425                           ; BSR set to: 15
   426                           ;main.c: 30:     LATCbits.LATC2=0;
   427   00151C  948B               	bcf	139,2,c	;volatile
   428   00151E                     
   429                           ; BSR set to: 15
   430                           ;main.c: 31:     LATCbits.LATC1=0;
   431   00151E  928B               	bcf	139,1,c	;volatile
   432   001520                     
   433                           ; BSR set to: 15
   434                           ;main.c: 32:     LATGbits.LATG0=0;
   435   001520  908F               	bcf	143,0,c	;volatile
   436   001522                     
   437                           ; BSR set to: 15
   438                           ;main.c: 35:     TRISAbits.TRISA2=0;
   439   001522  9492               	bcf	146,2,c	;volatile
   440   001524                     
   441                           ; BSR set to: 15
   442                           ;main.c: 36:     TRISAbits.TRISA3=0;
   443   001524  9692               	bcf	146,3,c	;volatile
   444   001526                     
   445                           ; BSR set to: 15
   446                           ;main.c: 37:     TRISAbits.TRISA4=0;
   447   001526  9892               	bcf	146,4,c	;volatile
   448   001528                     
   449                           ; BSR set to: 15
   450                           ;main.c: 38:     TRISAbits.TRISA5=0;
   451   001528  9A92               	bcf	146,5,c	;volatile
   452   00152A                     
   453                           ; BSR set to: 15
   454                           ;main.c: 39:     TRISCbits.TRISC2=0;
   455   00152A  9494               	bcf	148,2,c	;volatile
   456   00152C                     
   457                           ; BSR set to: 15
   458                           ;main.c: 40:     TRISCbits.TRISC1=0;
   459   00152C  9294               	bcf	148,1,c	;volatile
   460   00152E                     
   461                           ; BSR set to: 15
   462                           ;main.c: 41:     TRISGbits.TRISG0=0;
   463   00152E  9098               	bcf	152,0,c	;volatile
   464   001530                     
   465                           ; BSR set to: 15
   466                           ;main.c: 44:     INTCON2bits.RBPU=0;
   467   001530  9EF1               	bcf	241,7,c	;volatile
   468   001532                     
   469                           ; BSR set to: 15
   470                           ;main.c: 45:     PADCFG1bits.REPU=1;
   471   001532  8D53               	bsf	83,6,b	;volatile
   472   001534                     
   473                           ; BSR set to: 15
   474   001534  0012               	return		;funcret
   475   001536                     __end_of_initialisation_des_ports:
   476                           	callstack 0
   477                           
   478 ;; *************** function _initialisation_afficheur *****************
   479 ;; Defined at:
   480 ;;		line 165 in file "afficheur.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;  error_count     1    8[COMRAM] unsigned char 
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      void 
   487 ;; Registers used:
   488 ;;		wreg, status,2, status,0, cstack
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   495 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   497 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   498 ;;Total ram usage:        1 bytes
   499 ;; Hardware stack levels used: 1
   500 ;; Hardware stack levels required when called: 3
   501 ;; This function calls:
   502 ;;		_check_status_ok
   503 ;;		_command
   504 ;;		_d1command
   505 ;;		_d2command
   506 ;;		_delai_us_char
   507 ;; This function is called by:
   508 ;;		_main
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512                           	psect	text2
   513   00100E                     __ptext2:
   514                           	callstack 0
   515   00100E                     _initialisation_afficheur:
   516                           	callstack 27
   517   00100E                     
   518                           ;afficheur.c: 168:     unsigned char error_count;;afficheur.c: 170:     error_count=0;
   519   00100E  0E00               	movlw	0
   520   001010  6E09               	movwf	initialisation_afficheur@error_count^0,c
   521                           
   522                           ;afficheur.c: 173:     LATH=0;
   523   001012  0E00               	movlw	0
   524   001014  6E90               	movwf	144,c	;volatile
   525                           
   526                           ;afficheur.c: 174:     LATJ=0x1F;
   527   001016  0E1F               	movlw	31
   528   001018  6E91               	movwf	145,c	;volatile
   529                           
   530                           ;afficheur.c: 177:     TRISH=0;
   531   00101A  0E00               	movlw	0
   532   00101C  6E99               	movwf	153,c	;volatile
   533                           
   534                           ;afficheur.c: 178:     TRISJ=0;
   535   00101E  0E00               	movlw	0
   536   001020  6E9A               	movwf	154,c	;volatile
   537   001022                     
   538                           ;afficheur.c: 181:     LATJbits.LATJ5=0;
   539   001022  9A91               	bcf	145,5,c	;volatile
   540   001024                     
   541                           ;afficheur.c: 182:     LATJbits.LATJ6=1;
   542   001024  8C91               	bsf	145,6,c	;volatile
   543   001026                     
   544                           ;afficheur.c: 185:     LATJbits.LATJ4=0;
   545   001026  9891               	bcf	145,4,c	;volatile
   546   001028                     
   547                           ;afficheur.c: 186:     delai_us_char(4);
   548   001028  0E04               	movlw	4
   549   00102A  EC6E  F00A         	call	_delai_us_char
   550   00102E                     
   551                           ;afficheur.c: 187:     LATJbits.LATJ4=1;
   552   00102E  8891               	bsf	145,4,c	;volatile
   553   001030                     
   554                           ;afficheur.c: 191:     delai_us_char(12);
   555   001030  0E0C               	movlw	12
   556   001032  EC6E  F00A         	call	_delai_us_char
   557                           
   558                           ;afficheur.c: 192:     while(check_status_ok()==00)
   559   001036  EF2E  F008         	goto	l1619
   560   00103A                     l1609:
   561                           
   562                           ;afficheur.c: 193:     {;afficheur.c: 194:         error_count++;
   563   00103A  2A09               	incf	initialisation_afficheur@error_count^0,f,c
   564   00103C                     
   565                           ;afficheur.c: 195:         delai_us_char(12);
   566   00103C  0E0C               	movlw	12
   567   00103E  EC6E  F00A         	call	_delai_us_char
   568   001042                     
   569                           ;afficheur.c: 196:         if (error_count>200)
   570   001042  0EC8               	movlw	200
   571   001044  6409               	cpfsgt	initialisation_afficheur@error_count^0,c
   572   001046  EF27  F008         	goto	u581
   573   00104A  EF29  F008         	goto	u580
   574   00104E                     u581:
   575   00104E  EF2E  F008         	goto	l1619
   576   001052                     u580:
   577   001052                     
   578                           ;afficheur.c: 197:         {;afficheur.c: 198:             LATCbits.LATC1=1;LATGbits.LAT
      +                          G0=1;LATCbits.LATC2=0;
   579   001052  828B               	bsf	139,1,c	;volatile
   580   001054  808F               	bsf	143,0,c	;volatile
   581   001056  948B               	bcf	139,2,c	;volatile
   582   001058                     
   583                           ;afficheur.c: 201:             error_count=0;
   584   001058  0E00               	movlw	0
   585   00105A  6E09               	movwf	initialisation_afficheur@error_count^0,c
   586   00105C                     l1619:
   587                           
   588                           ;afficheur.c: 192:     while(check_status_ok()==00)
   589   00105C  ECFB  F009         	call	_check_status_ok	;wreg free
   590   001060  0900               	iorlw	0
   591   001062  B4D8               	btfsc	status,2,c
   592   001064  EF36  F008         	goto	u591
   593   001068  EF38  F008         	goto	u590
   594   00106C                     u591:
   595   00106C  EF1D  F008         	goto	l1609
   596   001070                     u590:
   597   001070                     
   598                           ;afficheur.c: 206:     d2command(39,15,0x21);
   599   001070  0E0F               	movlw	15
   600   001072  6E05               	movwf	d2command@d2^0,c
   601   001074  0E21               	movlw	33
   602   001076  6E06               	movwf	d2command@cmd^0,c
   603   001078  0E27               	movlw	39
   604   00107A  EC6D  F009         	call	_d2command
   605                           
   606                           ;afficheur.c: 207:     d2command(0,0,0x22);
   607   00107E  0E00               	movlw	0
   608   001080  6E05               	movwf	d2command@d2^0,c
   609   001082  0E22               	movlw	34
   610   001084  6E06               	movwf	d2command@cmd^0,c
   611   001086  0E00               	movlw	0
   612   001088  EC6D  F009         	call	_d2command
   613                           
   614                           ;afficheur.c: 208:     d2command(0,0,0x24);
   615   00108C  0E00               	movlw	0
   616   00108E  6E05               	movwf	d2command@d2^0,c
   617   001090  0E24               	movlw	36
   618   001092  6E06               	movwf	d2command@cmd^0,c
   619   001094  0E00               	movlw	0
   620   001096  EC6D  F009         	call	_d2command
   621                           
   622                           ;afficheur.c: 211:     d2command(0,0x7B,0x40);
   623   00109A  0E7B               	movlw	123
   624   00109C  6E05               	movwf	d2command@d2^0,c
   625   00109E  0E40               	movlw	64
   626   0010A0  6E06               	movwf	d2command@cmd^0,c
   627   0010A2  0E00               	movlw	0
   628   0010A4  EC6D  F009         	call	_d2command
   629                           
   630                           ;afficheur.c: 212:     d2command(40,0,0x41);
   631   0010A8  0E00               	movlw	0
   632   0010AA  6E05               	movwf	d2command@d2^0,c
   633   0010AC  0E41               	movlw	65
   634   0010AE  6E06               	movwf	d2command@cmd^0,c
   635   0010B0  0E28               	movlw	40
   636   0010B2  EC6D  F009         	call	_d2command
   637                           
   638                           ;afficheur.c: 213:     d2command(0x00,0x80,0x42);
   639   0010B6  0E80               	movlw	128
   640   0010B8  6E05               	movwf	d2command@d2^0,c
   641   0010BA  0E42               	movlw	66
   642   0010BC  6E06               	movwf	d2command@cmd^0,c
   643   0010BE  0E00               	movlw	0
   644   0010C0  EC6D  F009         	call	_d2command
   645                           
   646                           ;afficheur.c: 214:     d2command(40,0,0x43);
   647   0010C4  0E00               	movlw	0
   648   0010C6  6E05               	movwf	d2command@d2^0,c
   649   0010C8  0E43               	movlw	67
   650   0010CA  6E06               	movwf	d2command@cmd^0,c
   651   0010CC  0E28               	movlw	40
   652   0010CE  EC6D  F009         	call	_d2command
   653                           
   654                           ;afficheur.c: 217:     command(0x80);
   655   0010D2  0E80               	movlw	128
   656   0010D4  EC9B  F00A         	call	_command
   657                           
   658                           ;afficheur.c: 220:     command(0x9C);
   659   0010D8  0E9C               	movlw	156
   660   0010DA  EC9B  F00A         	call	_command
   661                           
   662                           ;afficheur.c: 223:     command(0xA0);
   663   0010DE  0EA0               	movlw	160
   664   0010E0  EC9B  F00A         	call	_command
   665                           
   666                           ;afficheur.c: 226:     d1command(0x02,0x70);
   667   0010E4  0E70               	movlw	112
   668   0010E6  6E05               	movwf	d1command@cmd^0,c
   669   0010E8  0E02               	movlw	2
   670   0010EA  ECD4  F009         	call	_d1command
   671   0010EE  0012               	return		;funcret
   672   0010F0                     __end_of_initialisation_afficheur:
   673                           	callstack 0
   674                           
   675 ;; *************** function _command *****************
   676 ;; Defined at:
   677 ;;		line 91 in file "afficheur.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;  cmd             1    wreg     unsigned char 
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  cmd             1    4[COMRAM] unsigned char 
   682 ;;  res             1    0        unsigned char 
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      unsigned char 
   685 ;; Registers used:
   686 ;;		wreg, status,2, status,0, cstack
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   693 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   696 ;;Total ram usage:        1 bytes
   697 ;; Hardware stack levels used: 1
   698 ;; Hardware stack levels required when called: 2
   699 ;; This function calls:
   700 ;;		_delai_us_char
   701 ;;		_wait_status_ok
   702 ;;		_write_c_aff
   703 ;; This function is called by:
   704 ;;		_initialisation_afficheur
   705 ;;		_plot1
   706 ;;		_plot0
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           	psect	text3
   711   001536                     __ptext3:
   712                           	callstack 0
   713   001536                     _command:
   714                           	callstack 27
   715                           
   716                           ;incstack = 0
   717                           ;command@cmd stored from wreg
   718   001536  6E05               	movwf	command@cmd^0,c
   719   001538                     
   720                           ;afficheur.c: 97:     if(wait_status_ok()==1)
   721   001538  EC32  F009         	call	_wait_status_ok	;wreg free
   722   00153C  06E8               	decf	wreg,f,c
   723   00153E  A4D8               	btfss	status,2,c
   724   001540  EFA4  F00A         	goto	u61
   725   001544  EFA6  F00A         	goto	u60
   726   001548                     u61:
   727   001548  EFAC  F00A         	goto	l93
   728   00154C                     u60:
   729   00154C                     
   730                           ;afficheur.c: 98:     {;afficheur.c: 99:         delai_us_char(12);
   731   00154C  0E0C               	movlw	12
   732   00154E  EC6E  F00A         	call	_delai_us_char
   733   001552                     
   734                           ;afficheur.c: 100:         write_c_aff(cmd);
   735   001552  5005               	movf	command@cmd^0,w,c
   736   001554  ECC8  F00A         	call	_write_c_aff
   737   001558                     l93:
   738   001558  0012               	return		;funcret
   739   00155A                     __end_of_command:
   740                           	callstack 0
   741                           
   742 ;; *************** function _check_status_ok *****************
   743 ;; Defined at:
   744 ;;		line 31 in file "afficheur.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;		None
   747 ;; Auto vars:     Size  Location     Type
   748 ;;  res             1    0[COMRAM] unsigned char 
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      unsigned char 
   751 ;; Registers used:
   752 ;;		wreg, status,2, status,0
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   759 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   761 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   762 ;;Total ram usage:        1 bytes
   763 ;; Hardware stack levels used: 1
   764 ;; This function calls:
   765 ;;		Nothing
   766 ;; This function is called by:
   767 ;;		_initialisation_afficheur
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771                           	psect	text4
   772   0013F6                     __ptext4:
   773                           	callstack 0
   774   0013F6                     _check_status_ok:
   775                           	callstack 29
   776   0013F6                     
   777                           ;afficheur.c: 33:     unsigned char res;;afficheur.c: 36:     TRISH=0xFF;
   778   0013F6  6899               	setf	153,c	;volatile
   779                           
   780                           ;afficheur.c: 37:     LATJbits.LATJ0=1;
   781   0013F8  8091               	bsf	145,0,c	;volatile
   782                           
   783                           ;afficheur.c: 38:     LATJbits.LATJ3=0;
   784   0013FA  9691               	bcf	145,3,c	;volatile
   785                           
   786                           ;afficheur.c: 39:     LATJbits.LATJ1=0;
   787   0013FC  9291               	bcf	145,1,c	;volatile
   788                           
   789                           ;afficheur.c: 40:     __nop();
   790   0013FE  F000               	nop	
   791                           
   792                           ;afficheur.c: 41:     __nop();
   793   001400  F000               	nop	
   794                           
   795                           ;afficheur.c: 42:     __nop();
   796   001402  F000               	nop	
   797                           
   798                           ;afficheur.c: 43:     res=PORTH;
   799   001404  CF87 F001          	movff	3975,check_status_ok@res	;volatile
   800                           
   801                           ;afficheur.c: 44:     LATJbits.LATJ1=1;
   802   001408  8291               	bsf	145,1,c	;volatile
   803                           
   804                           ;afficheur.c: 45:     LATJbits.LATJ3=1;
   805   00140A  8691               	bsf	145,3,c	;volatile
   806   00140C                     
   807                           ;afficheur.c: 47:     if ((res&0x03)==0x03)
   808   00140C  5001               	movf	check_status_ok@res^0,w,c
   809   00140E  0B03               	andlw	3
   810   001410  0A03               	xorlw	3
   811   001412  A4D8               	btfss	status,2,c
   812   001414  EF0E  F00A         	goto	u51
   813   001418  EF10  F00A         	goto	u50
   814   00141C                     u51:
   815   00141C  EF14  F00A         	goto	l1133
   816   001420                     u50:
   817   001420                     
   818                           ;afficheur.c: 48:         res=1;
   819   001420  0E01               	movlw	1
   820   001422  6E01               	movwf	check_status_ok@res^0,c
   821   001424  EF16  F00A         	goto	l79
   822   001428                     l1133:
   823                           
   824                           ;afficheur.c: 50:         res=0;
   825   001428  0E00               	movlw	0
   826   00142A  6E01               	movwf	check_status_ok@res^0,c
   827   00142C                     l79:
   828                           
   829                           ;afficheur.c: 51:     return res;
   830   00142C  5001               	movf	check_status_ok@res^0,w,c
   831   00142E  0012               	return		;funcret
   832   001430                     __end_of_check_status_ok:
   833                           	callstack 0
   834                           
   835 ;; *************** function _goto_lico *****************
   836 ;; Defined at:
   837 ;;		line 276 in file "afficheur.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;  ligne           1    wreg     unsigned char 
   840 ;;  colonne         1    8[COMRAM] unsigned char 
   841 ;; Auto vars:     Size  Location     Type
   842 ;;  ligne           1   11[COMRAM] unsigned char 
   843 ;;  adr             2   12[COMRAM] unsigned int 
   844 ;; Return value:  Size  Location     Type
   845 ;;                  1    wreg      void 
   846 ;; Registers used:
   847 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   848 ;; Tracked objects:
   849 ;;		On entry : 0/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   853 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   854 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   855 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   856 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   857 ;;Total ram usage:        6 bytes
   858 ;; Hardware stack levels used: 1
   859 ;; Hardware stack levels required when called: 3
   860 ;; This function calls:
   861 ;;		_d2command
   862 ;; This function is called by:
   863 ;;		_main
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           	psect	text5
   868   0011EC                     __ptext5:
   869                           	callstack 0
   870   0011EC                     _goto_lico:
   871                           	callstack 27
   872                           
   873                           ;incstack = 0
   874                           ;goto_lico@ligne stored from wreg
   875   0011EC  6E0C               	movwf	goto_lico@ligne^0,c
   876   0011EE                     
   877                           ;afficheur.c: 276: void goto_lico(unsigned char ligne, unsigned char colonne);afficheur.
      +                          c: 277: {;afficheur.c: 278:     unsigned int adr;;afficheur.c: 280:     adr=0x7B00;
   878   0011EE  0E7B               	movlw	123
   879   0011F0  6E0E               	movwf	(goto_lico@adr+1)^0,c
   880   0011F2  0E00               	movlw	0
   881   0011F4  6E0D               	movwf	goto_lico@adr^0,c
   882   0011F6                     
   883                           ;afficheur.c: 281:     if (ligne>15) ligne=0;
   884   0011F6  0E0F               	movlw	15
   885   0011F8  640C               	cpfsgt	goto_lico@ligne^0,c
   886   0011FA  EF01  F009         	goto	u641
   887   0011FE  EF03  F009         	goto	u640
   888   001202                     u641:
   889   001202  EF05  F009         	goto	l1637
   890   001206                     u640:
   891   001206  0E00               	movlw	0
   892   001208  6E0C               	movwf	goto_lico@ligne^0,c
   893   00120A                     l1637:
   894                           
   895                           ;afficheur.c: 282:     if (colonne>39) colonne=0;
   896   00120A  0E27               	movlw	39
   897   00120C  6409               	cpfsgt	goto_lico@colonne^0,c
   898   00120E  EF0B  F009         	goto	u651
   899   001212  EF0D  F009         	goto	u650
   900   001216                     u651:
   901   001216  EF0F  F009         	goto	l1641
   902   00121A                     u650:
   903   00121A  0E00               	movlw	0
   904   00121C  6E09               	movwf	goto_lico@colonne^0,c
   905   00121E                     l1641:
   906                           
   907                           ;afficheur.c: 283:     adr=adr+40*ligne+colonne;
   908   00121E  500C               	movf	goto_lico@ligne^0,w,c
   909   001220  0D28               	mullw	40
   910   001222  CFF3 F00A          	movff	prodl,??_goto_lico
   911   001226  CFF4 F00B          	movff	prodh,??_goto_lico+1
   912   00122A  5009               	movf	goto_lico@colonne^0,w,c
   913   00122C  260A               	addwf	??_goto_lico^0,f,c
   914   00122E  0E00               	movlw	0
   915   001230  220B               	addwfc	(??_goto_lico+1)^0,f,c
   916   001232  500D               	movf	goto_lico@adr^0,w,c
   917   001234  240A               	addwf	??_goto_lico^0,w,c
   918   001236  6E0D               	movwf	goto_lico@adr^0,c
   919   001238  500E               	movf	(goto_lico@adr+1)^0,w,c
   920   00123A  200B               	addwfc	(??_goto_lico+1)^0,w,c
   921   00123C  6E0E               	movwf	(goto_lico@adr+1)^0,c
   922                           
   923                           ;afficheur.c: 284:     while(d2command((unsigned char)(adr&0x00FF),(unsigned char)(adr>>
      +                          8),0x24)==0)
   924   00123E  EF22  F009         	goto	l1643
   925   001242                     l153:
   926                           
   927                           ;afficheur.c: 285:         __nop();
   928   001242  F000               	nop	
   929   001244                     l1643:
   930                           
   931                           ;afficheur.c: 284:     while(d2command((unsigned char)(adr&0x00FF),(unsigned char)(adr>>
      +                          8),0x24)==0)
   932   001244  500E               	movf	(goto_lico@adr+1)^0,w,c
   933   001246  6E05               	movwf	d2command@d2^0,c
   934   001248  0E24               	movlw	36
   935   00124A  6E06               	movwf	d2command@cmd^0,c
   936   00124C  500D               	movf	goto_lico@adr^0,w,c
   937   00124E  EC6D  F009         	call	_d2command
   938   001252  0900               	iorlw	0
   939   001254  B4D8               	btfsc	status,2,c
   940   001256  EF2F  F009         	goto	u661
   941   00125A  EF31  F009         	goto	u660
   942   00125E                     u661:
   943   00125E  EF21  F009         	goto	l153
   944   001262                     u660:
   945   001262  0012               	return		;funcret
   946   001264                     __end_of_goto_lico:
   947                           	callstack 0
   948                           
   949 ;; *************** function _draw_string *****************
   950 ;; Defined at:
   951 ;;		line 244 in file "afficheur.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;  tableau         2    7[COMRAM] PTR unsigned char 
   954 ;;		 -> RAM(3861), STR_1(12), 
   955 ;; Auto vars:     Size  Location     Type
   956 ;;		None
   957 ;; Return value:  Size  Location     Type
   958 ;;                  1    wreg      void 
   959 ;; Registers used:
   960 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   966 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   969 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   970 ;;Total ram usage:        2 bytes
   971 ;; Hardware stack levels used: 1
   972 ;; Hardware stack levels required when called: 3
   973 ;; This function calls:
   974 ;;		_d1command
   975 ;; This function is called by:
   976 ;;		_main
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980                           	psect	text6
   981   001172                     __ptext6:
   982                           	callstack 0
   983   001172                     _draw_string:
   984                           	callstack 27
   985   001172                     
   986                           ;afficheur.c: 244: void draw_string(unsigned char * tableau);afficheur.c: 245: {;affiche
      +                          ur.c: 246:     while(tableau[0]!=0)
   987   001172  EFDC  F008         	goto	l1629
   988   001176                     l131:
   989                           
   990                           ;afficheur.c: 249:             __nop();
   991   001176  F000               	nop	
   992   001178                     l1625:
   993                           
   994                           ;afficheur.c: 248:         while(d1command(tableau[0]-32,0xC0)==0)
   995   001178  0EC0               	movlw	192
   996   00117A  6E05               	movwf	d1command@cmd^0,c
   997   00117C  C008  FFF6         	movff	draw_string@tableau,tblptrl
   998   001180  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
   999   001184  0E00               	movlw	low (__smallconst shr (0+16))
  1000   001186  6EF8               	movwf	tblptru,c
  1001   001188  0E0F               	movlw	(high __ramtop+-1)
  1002   00118A  64F7               	cpfsgt	tblptrh,c
  1003   00118C  D003               	bra	u607
  1004   00118E  0008               	tblrd		*
  1005   001190  50F5               	movf	tablat,w,c
  1006   001192  D005               	bra	u600
  1007   001194                     u607:
  1008   001194  CFF6 FFE9          	movff	tblptrl,fsr0l
  1009   001198  CFF7 FFEA          	movff	tblptrh,fsr0h
  1010   00119C  50EF               	movf	indf0,w,c
  1011   00119E                     u600:
  1012   00119E  0FE0               	addlw	224
  1013   0011A0  ECD4  F009         	call	_d1command
  1014   0011A4  0900               	iorlw	0
  1015   0011A6  B4D8               	btfsc	status,2,c
  1016   0011A8  EFD8  F008         	goto	u611
  1017   0011AC  EFDA  F008         	goto	u610
  1018   0011B0                     u611:
  1019   0011B0  EFBB  F008         	goto	l131
  1020   0011B4                     u610:
  1021   0011B4                     
  1022                           ;afficheur.c: 250:         tableau++;
  1023   0011B4  4A08               	infsnz	draw_string@tableau^0,f,c
  1024   0011B6  2A09               	incf	(draw_string@tableau+1)^0,f,c
  1025   0011B8                     l1629:
  1026                           
  1027                           ;afficheur.c: 246:     while(tableau[0]!=0)
  1028   0011B8  C008  FFF6         	movff	draw_string@tableau,tblptrl
  1029   0011BC  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  1030   0011C0  0E00               	movlw	low (__smallconst shr (0+16))
  1031   0011C2  6EF8               	movwf	tblptru,c
  1032   0011C4  0E0F               	movlw	(high __ramtop+-1)
  1033   0011C6  64F7               	cpfsgt	tblptrh,c
  1034   0011C8  D003               	bra	u627
  1035   0011CA  0008               	tblrd		*
  1036   0011CC  50F5               	movf	tablat,w,c
  1037   0011CE  D005               	bra	u620
  1038   0011D0                     u627:
  1039   0011D0  CFF6 FFE9          	movff	tblptrl,fsr0l
  1040   0011D4  CFF7 FFEA          	movff	tblptrh,fsr0h
  1041   0011D8  50EF               	movf	indf0,w,c
  1042   0011DA                     u620:
  1043   0011DA  0900               	iorlw	0
  1044   0011DC  A4D8               	btfss	status,2,c
  1045   0011DE  EFF3  F008         	goto	u631
  1046   0011E2  EFF5  F008         	goto	u630
  1047   0011E6                     u631:
  1048   0011E6  EFBC  F008         	goto	l1625
  1049   0011EA                     u630:
  1050   0011EA  0012               	return		;funcret
  1051   0011EC                     __end_of_draw_string:
  1052                           	callstack 0
  1053                           
  1054 ;; *************** function _clear_text *****************
  1055 ;; Defined at:
  1056 ;;		line 288 in file "afficheur.c"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;		None
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;  add             2    8[COMRAM] unsigned int 
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  1    wreg      void 
  1063 ;; Registers used:
  1064 ;;		wreg, status,2, status,0, cstack
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1073 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1074 ;;Total ram usage:        2 bytes
  1075 ;; Hardware stack levels used: 1
  1076 ;; Hardware stack levels required when called: 3
  1077 ;; This function calls:
  1078 ;;		_d1command
  1079 ;;		_d2command
  1080 ;; This function is called by:
  1081 ;;		_main
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           	psect	text7
  1086   001430                     __ptext7:
  1087                           	callstack 0
  1088   001430                     _clear_text:
  1089                           	callstack 27
  1090   001430                     
  1091                           ;afficheur.c: 290:     unsigned int add;;afficheur.c: 292:     d2command(0,0,0x24);
  1092   001430  0E00               	movlw	0
  1093   001432  6E05               	movwf	d2command@d2^0,c
  1094   001434  0E24               	movlw	36
  1095   001436  6E06               	movwf	d2command@cmd^0,c
  1096   001438  0E00               	movlw	0
  1097   00143A  EC6D  F009         	call	_d2command
  1098   00143E                     
  1099                           ;afficheur.c: 293:     for (add=0;add!=0x8000;add++)
  1100   00143E  0E00               	movlw	0
  1101   001440  6E0A               	movwf	(clear_text@add+1)^0,c
  1102   001442  0E00               	movlw	0
  1103   001444  6E09               	movwf	clear_text@add^0,c
  1104   001446                     l1653:
  1105                           
  1106                           ;afficheur.c: 294:     {;afficheur.c: 295:             d1command(0x00,0xC0);
  1107   001446  0EC0               	movlw	192
  1108   001448  6E05               	movwf	d1command@cmd^0,c
  1109   00144A  0E00               	movlw	0
  1110   00144C  ECD4  F009         	call	_d1command
  1111   001450                     
  1112                           ;afficheur.c: 296:     }
  1113   001450  4A09               	infsnz	clear_text@add^0,f,c
  1114   001452  2A0A               	incf	(clear_text@add+1)^0,f,c
  1115   001454  0E80               	movlw	128
  1116   001456  180A               	xorwf	(clear_text@add+1)^0,w,c
  1117   001458  1009               	iorwf	clear_text@add^0,w,c
  1118   00145A  A4D8               	btfss	status,2,c
  1119   00145C  EF32  F00A         	goto	u671
  1120   001460  EF34  F00A         	goto	u670
  1121   001464                     u671:
  1122   001464  EF23  F00A         	goto	l1653
  1123   001468                     u670:
  1124   001468  0012               	return		;funcret
  1125   00146A                     __end_of_clear_text:
  1126                           	callstack 0
  1127                           
  1128 ;; *************** function _clear_graphics *****************
  1129 ;; Defined at:
  1130 ;;		line 299 in file "afficheur.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;		None
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;  add             2    8[COMRAM] unsigned int 
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, status,2, status,0, cstack
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1145 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1147 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1148 ;;Total ram usage:        2 bytes
  1149 ;; Hardware stack levels used: 1
  1150 ;; Hardware stack levels required when called: 3
  1151 ;; This function calls:
  1152 ;;		_d1command
  1153 ;;		_d2command
  1154 ;; This function is called by:
  1155 ;;		_main
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           	psect	text8
  1160   00146A                     __ptext8:
  1161                           	callstack 0
  1162   00146A                     _clear_graphics:
  1163                           	callstack 27
  1164   00146A                     
  1165                           ;afficheur.c: 301:     unsigned int add;;afficheur.c: 303:     d2command(0,0x80,0x24);
  1166   00146A  0E80               	movlw	128
  1167   00146C  6E05               	movwf	d2command@d2^0,c
  1168   00146E  0E24               	movlw	36
  1169   001470  6E06               	movwf	d2command@cmd^0,c
  1170   001472  0E00               	movlw	0
  1171   001474  EC6D  F009         	call	_d2command
  1172   001478                     
  1173                           ;afficheur.c: 304:     for (add=0x8000;add!=0xF800;add++)
  1174   001478  0E80               	movlw	128
  1175   00147A  6E0A               	movwf	(clear_graphics@add+1)^0,c
  1176   00147C  0E00               	movlw	0
  1177   00147E  6E09               	movwf	clear_graphics@add^0,c
  1178   001480                     l1667:
  1179                           
  1180                           ;afficheur.c: 305:     {;afficheur.c: 306:             d1command(0x00,0xC0);
  1181   001480  0EC0               	movlw	192
  1182   001482  6E05               	movwf	d1command@cmd^0,c
  1183   001484  0E00               	movlw	0
  1184   001486  ECD4  F009         	call	_d1command
  1185   00148A                     
  1186                           ;afficheur.c: 307:     }
  1187   00148A  4A09               	infsnz	clear_graphics@add^0,f,c
  1188   00148C  2A0A               	incf	(clear_graphics@add+1)^0,f,c
  1189   00148E  0EF8               	movlw	248
  1190   001490  180A               	xorwf	(clear_graphics@add+1)^0,w,c
  1191   001492  1009               	iorwf	clear_graphics@add^0,w,c
  1192   001494  A4D8               	btfss	status,2,c
  1193   001496  EF4F  F00A         	goto	u681
  1194   00149A  EF51  F00A         	goto	u680
  1195   00149E                     u681:
  1196   00149E  EF40  F00A         	goto	l1667
  1197   0014A2                     u680:
  1198   0014A2  0012               	return		;funcret
  1199   0014A4                     __end_of_clear_graphics:
  1200                           	callstack 0
  1201                           
  1202 ;; *************** function _d2command *****************
  1203 ;; Defined at:
  1204 ;;		line 129 in file "afficheur.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;  d1              1    wreg     unsigned char 
  1207 ;;  d2              1    4[COMRAM] unsigned char 
  1208 ;;  cmd             1    5[COMRAM] unsigned char 
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;  d1              1    6[COMRAM] unsigned char 
  1211 ;;  res             1    7[COMRAM] unsigned char 
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      unsigned char 
  1214 ;; Registers used:
  1215 ;;		wreg, status,2, status,0, cstack
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1221 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1222 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1224 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1225 ;;Total ram usage:        4 bytes
  1226 ;; Hardware stack levels used: 1
  1227 ;; Hardware stack levels required when called: 2
  1228 ;; This function calls:
  1229 ;;		_delai_us_char
  1230 ;;		_wait_status_ok
  1231 ;;		_write_c_aff
  1232 ;;		_write_d_aff
  1233 ;; This function is called by:
  1234 ;;		_initialisation_afficheur
  1235 ;;		_goto_lico
  1236 ;;		_clear_text
  1237 ;;		_clear_graphics
  1238 ;;		_clear_cgram
  1239 ;;		_plot1
  1240 ;;		_plot0
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           	psect	text9
  1245   0012DA                     __ptext9:
  1246                           	callstack 0
  1247   0012DA                     _d2command:
  1248                           	callstack 27
  1249                           
  1250                           ;incstack = 0
  1251                           ;d2command@d1 stored from wreg
  1252   0012DA  6E07               	movwf	d2command@d1^0,c
  1253   0012DC                     
  1254                           ;afficheur.c: 129: unsigned char d2command(unsigned char d1, unsigned char d2, unsigned 
      +                          char cmd);afficheur.c: 130: {;afficheur.c: 131:     unsigned char res;;afficheur.c: 133:
      +                               res=0;
  1255   0012DC  0E00               	movlw	0
  1256   0012DE  6E08               	movwf	d2command@res^0,c
  1257   0012E0                     
  1258                           ;afficheur.c: 135:     if (wait_status_ok()==1)
  1259   0012E0  EC32  F009         	call	_wait_status_ok	;wreg free
  1260   0012E4  06E8               	decf	wreg,f,c
  1261   0012E6  A4D8               	btfss	status,2,c
  1262   0012E8  EF78  F009         	goto	u551
  1263   0012EC  EF7A  F009         	goto	u550
  1264   0012F0                     u551:
  1265   0012F0  EFA2  F009         	goto	l1591
  1266   0012F4                     u550:
  1267   0012F4                     
  1268                           ;afficheur.c: 136:     {;afficheur.c: 137:         delai_us_char(12);
  1269   0012F4  0E0C               	movlw	12
  1270   0012F6  EC6E  F00A         	call	_delai_us_char
  1271   0012FA                     
  1272                           ;afficheur.c: 138:         write_d_aff(d1);
  1273   0012FA  5007               	movf	d2command@d1^0,w,c
  1274   0012FC  ECBB  F00A         	call	_write_d_aff
  1275   001300                     
  1276                           ;afficheur.c: 139:         if (wait_status_ok()==1)
  1277   001300  EC32  F009         	call	_wait_status_ok	;wreg free
  1278   001304  06E8               	decf	wreg,f,c
  1279   001306  A4D8               	btfss	status,2,c
  1280   001308  EF88  F009         	goto	u561
  1281   00130C  EF8A  F009         	goto	u560
  1282   001310                     u561:
  1283   001310  EFA2  F009         	goto	l1591
  1284   001314                     u560:
  1285   001314                     
  1286                           ;afficheur.c: 140:         {;afficheur.c: 141:             delai_us_char(12);
  1287   001314  0E0C               	movlw	12
  1288   001316  EC6E  F00A         	call	_delai_us_char
  1289   00131A                     
  1290                           ;afficheur.c: 142:             write_d_aff(d2);
  1291   00131A  5005               	movf	d2command@d2^0,w,c
  1292   00131C  ECBB  F00A         	call	_write_d_aff
  1293   001320                     
  1294                           ;afficheur.c: 143:             if (wait_status_ok()==1)
  1295   001320  EC32  F009         	call	_wait_status_ok	;wreg free
  1296   001324  06E8               	decf	wreg,f,c
  1297   001326  A4D8               	btfss	status,2,c
  1298   001328  EF98  F009         	goto	u571
  1299   00132C  EF9A  F009         	goto	u570
  1300   001330                     u571:
  1301   001330  EFA2  F009         	goto	l1591
  1302   001334                     u570:
  1303   001334                     
  1304                           ;afficheur.c: 144:             {;afficheur.c: 145:                 delai_us_char(12);
  1305   001334  0E0C               	movlw	12
  1306   001336  EC6E  F00A         	call	_delai_us_char
  1307   00133A                     
  1308                           ;afficheur.c: 146:                 write_c_aff(cmd);
  1309   00133A  5006               	movf	d2command@cmd^0,w,c
  1310   00133C  ECC8  F00A         	call	_write_c_aff
  1311   001340                     
  1312                           ;afficheur.c: 148:                     res=1;
  1313   001340  0E01               	movlw	1
  1314   001342  6E08               	movwf	d2command@res^0,c
  1315   001344                     l1591:
  1316                           
  1317                           ;afficheur.c: 152:     return res;
  1318   001344  5008               	movf	d2command@res^0,w,c
  1319   001346  0012               	return		;funcret
  1320   001348                     __end_of_d2command:
  1321                           	callstack 0
  1322                           
  1323 ;; *************** function _d1command *****************
  1324 ;; Defined at:
  1325 ;;		line 107 in file "afficheur.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;  d1              1    wreg     unsigned char 
  1328 ;;  cmd             1    4[COMRAM] unsigned char 
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;  d1              1    5[COMRAM] unsigned char 
  1331 ;;  res             1    6[COMRAM] unsigned char 
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  1    wreg      unsigned char 
  1334 ;; Registers used:
  1335 ;;		wreg, status,2, status,0, cstack
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1341 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1342 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1344 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1345 ;;Total ram usage:        3 bytes
  1346 ;; Hardware stack levels used: 1
  1347 ;; Hardware stack levels required when called: 2
  1348 ;; This function calls:
  1349 ;;		_delai_us_char
  1350 ;;		_wait_status_ok
  1351 ;;		_write_c_aff
  1352 ;;		_write_d_aff
  1353 ;; This function is called by:
  1354 ;;		_initialisation_afficheur
  1355 ;;		_draw_string
  1356 ;;		_clear_text
  1357 ;;		_clear_graphics
  1358 ;;		_draw_char
  1359 ;;		_draw_hex8
  1360 ;;		_clear_cgram
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           	psect	text10
  1365   0013A8                     __ptext10:
  1366                           	callstack 0
  1367   0013A8                     _d1command:
  1368                           	callstack 27
  1369                           
  1370                           ;incstack = 0
  1371                           ;d1command@d1 stored from wreg
  1372   0013A8  6E06               	movwf	d1command@d1^0,c
  1373   0013AA                     
  1374                           ;afficheur.c: 107: unsigned char d1command(unsigned char d1, unsigned char cmd);afficheu
      +                          r.c: 108: {;afficheur.c: 109:     unsigned char res;;afficheur.c: 111:     res=0;
  1375   0013AA  0E00               	movlw	0
  1376   0013AC  6E07               	movwf	d1command@res^0,c
  1377   0013AE                     
  1378                           ;afficheur.c: 113:     if (wait_status_ok()==1)
  1379   0013AE  EC32  F009         	call	_wait_status_ok	;wreg free
  1380   0013B2  06E8               	decf	wreg,f,c
  1381   0013B4  A4D8               	btfss	status,2,c
  1382   0013B6  EFDF  F009         	goto	u531
  1383   0013BA  EFE1  F009         	goto	u530
  1384   0013BE                     u531:
  1385   0013BE  EFF9  F009         	goto	l1565
  1386   0013C2                     u530:
  1387   0013C2                     
  1388                           ;afficheur.c: 114:     {;afficheur.c: 115:         delai_us_char(12);
  1389   0013C2  0E0C               	movlw	12
  1390   0013C4  EC6E  F00A         	call	_delai_us_char
  1391   0013C8                     
  1392                           ;afficheur.c: 116:         write_d_aff(d1);
  1393   0013C8  5006               	movf	d1command@d1^0,w,c
  1394   0013CA  ECBB  F00A         	call	_write_d_aff
  1395   0013CE                     
  1396                           ;afficheur.c: 117:         if (wait_status_ok()==1)
  1397   0013CE  EC32  F009         	call	_wait_status_ok	;wreg free
  1398   0013D2  06E8               	decf	wreg,f,c
  1399   0013D4  A4D8               	btfss	status,2,c
  1400   0013D6  EFEF  F009         	goto	u541
  1401   0013DA  EFF1  F009         	goto	u540
  1402   0013DE                     u541:
  1403   0013DE  EFF9  F009         	goto	l1565
  1404   0013E2                     u540:
  1405   0013E2                     
  1406                           ;afficheur.c: 118:         {;afficheur.c: 119:             delai_us_char(12);
  1407   0013E2  0E0C               	movlw	12
  1408   0013E4  EC6E  F00A         	call	_delai_us_char
  1409   0013E8                     
  1410                           ;afficheur.c: 120:             write_c_aff(cmd);
  1411   0013E8  5005               	movf	d1command@cmd^0,w,c
  1412   0013EA  ECC8  F00A         	call	_write_c_aff
  1413   0013EE                     
  1414                           ;afficheur.c: 122:                 res=1;
  1415   0013EE  0E01               	movlw	1
  1416   0013F0  6E07               	movwf	d1command@res^0,c
  1417   0013F2                     l1565:
  1418                           
  1419                           ;afficheur.c: 126:     return res;
  1420   0013F2  5007               	movf	d1command@res^0,w,c
  1421   0013F4  0012               	return		;funcret
  1422   0013F6                     __end_of_d1command:
  1423                           	callstack 0
  1424                           
  1425 ;; *************** function _write_d_aff *****************
  1426 ;; Defined at:
  1427 ;;		line 5 in file "afficheur.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;  data            1    wreg     unsigned char 
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;  data            1    0[COMRAM] unsigned char 
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  1    wreg      void 
  1434 ;; Registers used:
  1435 ;;		wreg, status,2
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1442 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1444 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1445 ;;Total ram usage:        1 bytes
  1446 ;; Hardware stack levels used: 1
  1447 ;; This function calls:
  1448 ;;		Nothing
  1449 ;; This function is called by:
  1450 ;;		_d1command
  1451 ;;		_d2command
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455                           	psect	text11
  1456   001576                     __ptext11:
  1457                           	callstack 0
  1458   001576                     _write_d_aff:
  1459                           	callstack 28
  1460                           
  1461                           ;incstack = 0
  1462                           ;write_d_aff@data stored from wreg
  1463   001576  6E01               	movwf	write_d_aff@data^0,c
  1464   001578                     
  1465                           ;afficheur.c: 5: void write_d_aff(unsigned char data);afficheur.c: 6: {;afficheur.c: 7: 
      +                              LATH=data;
  1466   001578  C001  FF90         	movff	write_d_aff@data,3984	;volatile
  1467   00157C                     
  1468                           ;afficheur.c: 8:     TRISH=0x00;
  1469   00157C  0E00               	movlw	0
  1470   00157E  6E99               	movwf	153,c	;volatile
  1471   001580                     
  1472                           ;afficheur.c: 9:     LATJbits.LATJ0=0;
  1473   001580  9091               	bcf	145,0,c	;volatile
  1474   001582                     
  1475                           ;afficheur.c: 10:     LATJbits.LATJ3=0;
  1476   001582  9691               	bcf	145,3,c	;volatile
  1477   001584                     
  1478                           ;afficheur.c: 11:     LATJbits.LATJ2=0;
  1479   001584  9491               	bcf	145,2,c	;volatile
  1480   001586                     
  1481                           ;afficheur.c: 12:     __nop();
  1482   001586  F000               	nop	
  1483   001588                     
  1484                           ;afficheur.c: 13:     __nop();
  1485   001588  F000               	nop	
  1486   00158A                     
  1487                           ;afficheur.c: 14:     LATJbits.LATJ2=1;
  1488   00158A  8491               	bsf	145,2,c	;volatile
  1489   00158C                     
  1490                           ;afficheur.c: 15:     LATJbits.LATJ3=1;
  1491   00158C  8691               	bsf	145,3,c	;volatile
  1492   00158E  0012               	return		;funcret
  1493   001590                     __end_of_write_d_aff:
  1494                           	callstack 0
  1495                           
  1496 ;; *************** function _write_c_aff *****************
  1497 ;; Defined at:
  1498 ;;		line 18 in file "afficheur.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;  command         1    wreg     unsigned char 
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  command         1    0[COMRAM] unsigned char 
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      void 
  1505 ;; Registers used:
  1506 ;;		wreg, status,2
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1513 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1515 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1516 ;;Total ram usage:        1 bytes
  1517 ;; Hardware stack levels used: 1
  1518 ;; This function calls:
  1519 ;;		Nothing
  1520 ;; This function is called by:
  1521 ;;		_command
  1522 ;;		_d1command
  1523 ;;		_d2command
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           	psect	text12
  1528   001590                     __ptext12:
  1529                           	callstack 0
  1530   001590                     _write_c_aff:
  1531                           	callstack 28
  1532                           
  1533                           ;incstack = 0
  1534                           ;write_c_aff@command stored from wreg
  1535   001590  6E01               	movwf	write_c_aff@command^0,c
  1536   001592                     
  1537                           ;afficheur.c: 18: void write_c_aff(unsigned char command);afficheur.c: 19: {;afficheur.c
      +                          : 20:     LATH=command;
  1538   001592  C001  FF90         	movff	write_c_aff@command,3984	;volatile
  1539   001596                     
  1540                           ;afficheur.c: 21:     TRISH=0x00;
  1541   001596  0E00               	movlw	0
  1542   001598  6E99               	movwf	153,c	;volatile
  1543   00159A                     
  1544                           ;afficheur.c: 22:     LATJbits.LATJ0=1;
  1545   00159A  8091               	bsf	145,0,c	;volatile
  1546   00159C                     
  1547                           ;afficheur.c: 23:     LATJbits.LATJ3=0;
  1548   00159C  9691               	bcf	145,3,c	;volatile
  1549   00159E                     
  1550                           ;afficheur.c: 24:     LATJbits.LATJ2=0;
  1551   00159E  9491               	bcf	145,2,c	;volatile
  1552   0015A0                     
  1553                           ;afficheur.c: 25:     __nop();
  1554   0015A0  F000               	nop	
  1555   0015A2                     
  1556                           ;afficheur.c: 26:     __nop();
  1557   0015A2  F000               	nop	
  1558   0015A4                     
  1559                           ;afficheur.c: 27:     LATJbits.LATJ2=1;
  1560   0015A4  8491               	bsf	145,2,c	;volatile
  1561   0015A6                     
  1562                           ;afficheur.c: 28:     LATJbits.LATJ3=1;
  1563   0015A6  8691               	bsf	145,3,c	;volatile
  1564   0015A8  0012               	return		;funcret
  1565   0015AA                     __end_of_write_c_aff:
  1566                           	callstack 0
  1567                           
  1568 ;; *************** function _wait_status_ok *****************
  1569 ;; Defined at:
  1570 ;;		line 54 in file "afficheur.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;		None
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  res             1    3[COMRAM] unsigned char 
  1575 ;;  status          1    2[COMRAM] unsigned char 
  1576 ;;  err             1    1[COMRAM] unsigned char 
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      unsigned char 
  1579 ;; Registers used:
  1580 ;;		wreg, status,2, status,0, cstack
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1587 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1589 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1590 ;;Total ram usage:        3 bytes
  1591 ;; Hardware stack levels used: 1
  1592 ;; Hardware stack levels required when called: 1
  1593 ;; This function calls:
  1594 ;;		_delai_us_char
  1595 ;; This function is called by:
  1596 ;;		_command
  1597 ;;		_d1command
  1598 ;;		_d2command
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           	psect	text13
  1603   001264                     __ptext13:
  1604                           	callstack 0
  1605   001264                     _wait_status_ok:
  1606                           	callstack 27
  1607   001264                     
  1608                           ;afficheur.c: 56:     unsigned char err,res,status;;afficheur.c: 58:     err=0;
  1609   001264  0E00               	movlw	0
  1610   001266  6E02               	movwf	wait_status_ok@err^0,c
  1611                           
  1612                           ;afficheur.c: 59:     res=2;
  1613   001268  0E02               	movlw	2
  1614   00126A  6E04               	movwf	wait_status_ok@res^0,c
  1615                           
  1616                           ;afficheur.c: 60:     while (res==2)
  1617   00126C  EF62  F009         	goto	l1121
  1618   001270                     l84:
  1619                           
  1620                           ;afficheur.c: 61:     {;afficheur.c: 62:         TRISH=0xFF;
  1621   001270  6899               	setf	153,c	;volatile
  1622                           
  1623                           ;afficheur.c: 63:         LATJbits.LATJ0=1;
  1624   001272  8091               	bsf	145,0,c	;volatile
  1625                           
  1626                           ;afficheur.c: 64:         LATJbits.LATJ3=0;
  1627   001274  9691               	bcf	145,3,c	;volatile
  1628                           
  1629                           ;afficheur.c: 65:         LATJbits.LATJ1=0;
  1630   001276  9291               	bcf	145,1,c	;volatile
  1631                           
  1632                           ;afficheur.c: 66:         __nop();
  1633   001278  F000               	nop	
  1634                           
  1635                           ;afficheur.c: 67:         status=PORTH;
  1636   00127A  CF87 F003          	movff	3975,wait_status_ok@status	;volatile
  1637                           
  1638                           ;afficheur.c: 68:         LATJbits.LATJ1=1;
  1639   00127E  8291               	bsf	145,1,c	;volatile
  1640                           
  1641                           ;afficheur.c: 69:         LATJbits.LATJ3=1;
  1642   001280  8691               	bsf	145,3,c	;volatile
  1643   001282                     
  1644                           ;afficheur.c: 71:         status=(status&0x03);
  1645   001282  5003               	movf	wait_status_ok@status^0,w,c
  1646   001284  0B03               	andlw	3
  1647   001286  6E03               	movwf	wait_status_ok@status^0,c
  1648                           
  1649                           ;afficheur.c: 72:         if (status!=0x03)
  1650   001288  0E03               	movlw	3
  1651   00128A  1803               	xorwf	wait_status_ok@status^0,w,c
  1652   00128C  B4D8               	btfsc	status,2,c
  1653   00128E  EF4B  F009         	goto	u21
  1654   001292  EF4D  F009         	goto	u20
  1655   001296                     u21:
  1656   001296  EF60  F009         	goto	l1119
  1657   00129A                     u20:
  1658   00129A                     
  1659                           ;afficheur.c: 73:         {;afficheur.c: 74:             err++;
  1660   00129A  2A02               	incf	wait_status_ok@err^0,f,c
  1661   00129C                     
  1662                           ;afficheur.c: 75:             delai_us_char(12);
  1663   00129C  0E0C               	movlw	12
  1664   00129E  EC6E  F00A         	call	_delai_us_char
  1665   0012A2                     
  1666                           ;afficheur.c: 76:             if (err>=250)
  1667   0012A2  0EF9               	movlw	249
  1668   0012A4  6402               	cpfsgt	wait_status_ok@err^0,c
  1669   0012A6  EF57  F009         	goto	u31
  1670   0012AA  EF59  F009         	goto	u30
  1671   0012AE                     u31:
  1672   0012AE  EF62  F009         	goto	l1121
  1673   0012B2                     u30:
  1674   0012B2                     
  1675                           ;afficheur.c: 77:             {;afficheur.c: 79:                 LATCbits.LATC2=0;LATCbi
      +                          ts.LATC1=1;LATGbits.LATG0=1;
  1676   0012B2  948B               	bcf	139,2,c	;volatile
  1677   0012B4  828B               	bsf	139,1,c	;volatile
  1678   0012B6  808F               	bsf	143,0,c	;volatile
  1679   0012B8                     
  1680                           ;afficheur.c: 80:                 res=0;
  1681   0012B8  0E00               	movlw	0
  1682   0012BA  6E04               	movwf	wait_status_ok@res^0,c
  1683   0012BC  EF62  F009         	goto	l1121
  1684   0012C0                     l1119:
  1685                           
  1686                           ;afficheur.c: 84:         {;afficheur.c: 85:             res=1;
  1687   0012C0  0E01               	movlw	1
  1688   0012C2  6E04               	movwf	wait_status_ok@res^0,c
  1689   0012C4                     l1121:
  1690                           
  1691                           ;afficheur.c: 60:     while (res==2)
  1692   0012C4  0E02               	movlw	2
  1693   0012C6  1804               	xorwf	wait_status_ok@res^0,w,c
  1694   0012C8  B4D8               	btfsc	status,2,c
  1695   0012CA  EF69  F009         	goto	u41
  1696   0012CE  EF6B  F009         	goto	u40
  1697   0012D2                     u41:
  1698   0012D2  EF38  F009         	goto	l84
  1699   0012D6                     u40:
  1700   0012D6                     
  1701                           ;afficheur.c: 88:     return res;
  1702   0012D6  5004               	movf	wait_status_ok@res^0,w,c
  1703   0012D8  0012               	return		;funcret
  1704   0012DA                     __end_of_wait_status_ok:
  1705                           	callstack 0
  1706                           
  1707 ;; *************** function _delai_us_char *****************
  1708 ;; Defined at:
  1709 ;;		line 155 in file "afficheur.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;  ucdelai         1    wreg     unsigned char 
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;  ucdelai         1    0[COMRAM] unsigned char 
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      void 
  1716 ;; Registers used:
  1717 ;;		wreg, status,2, status,0
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1724 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1726 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1727 ;;Total ram usage:        1 bytes
  1728 ;; Hardware stack levels used: 1
  1729 ;; This function calls:
  1730 ;;		Nothing
  1731 ;; This function is called by:
  1732 ;;		_wait_status_ok
  1733 ;;		_command
  1734 ;;		_d1command
  1735 ;;		_d2command
  1736 ;;		_initialisation_afficheur
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text14
  1741   0014DC                     __ptext14:
  1742                           	callstack 0
  1743   0014DC                     _delai_us_char:
  1744                           	callstack 29
  1745                           
  1746                           ;incstack = 0
  1747                           ;delai_us_char@ucdelai stored from wreg
  1748   0014DC  6E01               	movwf	delai_us_char@ucdelai^0,c
  1749   0014DE                     
  1750                           ;afficheur.c: 155: void delai_us_char(unsigned char ucdelai);afficheur.c: 156: {;affiche
      +                          ur.c: 158:     while (ucdelai>0)
  1751   0014DE  EF7C  F00A         	goto	l1067
  1752   0014E2                     l108:
  1753                           
  1754                           ;afficheur.c: 159:     {;afficheur.c: 160:         __nop();__nop();__nop();__nop();__nop
      +                          ();__nop();__nop();__nop();__nop();__nop();
  1755   0014E2  F000               	nop	
  1756   0014E4  F000               	nop	
  1757   0014E6  F000               	nop	
  1758   0014E8  F000               	nop	
  1759   0014EA  F000               	nop	
  1760   0014EC  F000               	nop	
  1761   0014EE  F000               	nop	
  1762   0014F0  F000               	nop	
  1763   0014F2  F000               	nop	
  1764   0014F4  F000               	nop	
  1765   0014F6                     
  1766                           ;afficheur.c: 161:         ucdelai--;
  1767   0014F6  0601               	decf	delai_us_char@ucdelai^0,f,c
  1768   0014F8                     l1067:
  1769                           
  1770                           ;afficheur.c: 158:     while (ucdelai>0)
  1771   0014F8  5001               	movf	delai_us_char@ucdelai^0,w,c
  1772   0014FA  A4D8               	btfss	status,2,c
  1773   0014FC  EF82  F00A         	goto	u11
  1774   001500  EF84  F00A         	goto	u10
  1775   001504                     u11:
  1776   001504  EF71  F00A         	goto	l108
  1777   001508                     u10:
  1778   001508  0012               	return		;funcret
  1779   00150A                     __end_of_delai_us_char:
  1780                           	callstack 0
  1781                           
  1782 ;; *************** function _I2C_Write_Register *****************
  1783 ;; Defined at:
  1784 ;;		line 21 in file "I2C.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;  Address         2    0[COMRAM] int 
  1787 ;;  Register        2    2[COMRAM] int 
  1788 ;;  data            2    4[COMRAM] int 
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;		None
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  1    wreg      void 
  1793 ;; Registers used:
  1794 ;;		None
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1800 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1803 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1804 ;;Total ram usage:        6 bytes
  1805 ;; Hardware stack levels used: 1
  1806 ;; This function calls:
  1807 ;;		Nothing
  1808 ;; This function is called by:
  1809 ;;		_main
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           	psect	text15
  1814   001348                     __ptext15:
  1815                           	callstack 0
  1816   001348                     _I2C_Write_Register:
  1817                           	callstack 30
  1818   001348                     
  1819                           ;I2C.c: 22:     SSP1CON2bits.SEN = 1;
  1820   001348  80C5               	bsf	197,0,c	;volatile
  1821   00134A                     l360:
  1822   00134A  B0C5               	btfsc	197,0,c	;volatile
  1823   00134C  EFAA  F009         	goto	u691
  1824   001350  EFAC  F009         	goto	u690
  1825   001354                     u691:
  1826   001354  EFA5  F009         	goto	l360
  1827   001358                     u690:
  1828   001358                     
  1829                           ;I2C.c: 25:     SSP1BUF = Address;
  1830   001358  C001  FFC9         	movff	I2C_Write_Register@Address,4041	;volatile
  1831                           
  1832                           ;I2C.c: 26:     PIR1bits.SSP1IF = 0;
  1833   00135C  969E               	bcf	158,3,c	;volatile
  1834   00135E                     l363:
  1835   00135E  BCC5               	btfsc	197,6,c	;volatile
  1836   001360  EFB4  F009         	goto	u701
  1837   001364  EFB6  F009         	goto	u700
  1838   001368                     u701:
  1839   001368  EFAF  F009         	goto	l363
  1840   00136C                     u700:
  1841   00136C                     
  1842                           ;I2C.c: 30:     SSP1BUF = Register;
  1843   00136C  C003  FFC9         	movff	I2C_Write_Register@Register,4041	;volatile
  1844                           
  1845                           ;I2C.c: 31:     PIR1bits.SSP1IF = 0;
  1846   001370  969E               	bcf	158,3,c	;volatile
  1847   001372                     l366:
  1848   001372  BCC5               	btfsc	197,6,c	;volatile
  1849   001374  EFBE  F009         	goto	u711
  1850   001378  EFC0  F009         	goto	u710
  1851   00137C                     u711:
  1852   00137C  EFB9  F009         	goto	l366
  1853   001380                     u710:
  1854   001380                     
  1855                           ;I2C.c: 35:     SSP1BUF = data;
  1856   001380  C005  FFC9         	movff	I2C_Write_Register@data,4041	;volatile
  1857                           
  1858                           ;I2C.c: 36:     PIR1bits.SSP1IF = 0;
  1859   001384  969E               	bcf	158,3,c	;volatile
  1860   001386                     l369:
  1861   001386  BCC5               	btfsc	197,6,c	;volatile
  1862   001388  EFC8  F009         	goto	u721
  1863   00138C  EFCA  F009         	goto	u720
  1864   001390                     u721:
  1865   001390  EFC3  F009         	goto	l369
  1866   001394                     u720:
  1867   001394                     
  1868                           ;I2C.c: 40:     SSP1CON2bits.PEN = 1;
  1869   001394  84C5               	bsf	197,2,c	;volatile
  1870   001396                     l372:
  1871   001396  A69E               	btfss	158,3,c	;volatile
  1872   001398  EFD0  F009         	goto	u731
  1873   00139C  EFD2  F009         	goto	u730
  1874   0013A0                     u731:
  1875   0013A0  EFCB  F009         	goto	l372
  1876   0013A4                     u730:
  1877   0013A4                     
  1878                           ;I2C.c: 42:     PIR1bits.SSP1IF = 0;
  1879   0013A4  969E               	bcf	158,3,c	;volatile
  1880   0013A6  0012               	return		;funcret
  1881   0013A8                     __end_of_I2C_Write_Register:
  1882                           	callstack 0
  1883                           
  1884 ;; *************** function _I2C_Read *****************
  1885 ;; Defined at:
  1886 ;;		line 44 in file "I2C.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;  Address         2    0[COMRAM] int 
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;		None
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  2    0[COMRAM] int 
  1893 ;; Registers used:
  1894 ;;		None
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1900 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1903 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1904 ;;Total ram usage:        2 bytes
  1905 ;; Hardware stack levels used: 1
  1906 ;; This function calls:
  1907 ;;		Nothing
  1908 ;; This function is called by:
  1909 ;;		_main
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           	psect	text16
  1914   0014A4                     __ptext16:
  1915                           	callstack 0
  1916   0014A4                     _I2C_Read:
  1917                           	callstack 30
  1918   0014A4                     
  1919                           ;I2C.c: 45:     SSP1CON2bits.SEN = 1;
  1920   0014A4  80C5               	bsf	197,0,c	;volatile
  1921   0014A6                     l378:
  1922   0014A6  B0C5               	btfsc	197,0,c	;volatile
  1923   0014A8  EF58  F00A         	goto	u741
  1924   0014AC  EF5A  F00A         	goto	u740
  1925   0014B0                     u741:
  1926   0014B0  EF53  F00A         	goto	l378
  1927   0014B4                     u740:
  1928   0014B4                     
  1929                           ;I2C.c: 48:     SSP1BUF = Address;
  1930   0014B4  C001  FFC9         	movff	I2C_Read@Address,4041	;volatile
  1931   0014B8                     l381:
  1932   0014B8  A69E               	btfss	158,3,c	;volatile
  1933   0014BA  EF61  F00A         	goto	u751
  1934   0014BE  EF63  F00A         	goto	u750
  1935   0014C2                     u751:
  1936   0014C2  EF5C  F00A         	goto	l381
  1937   0014C6                     u750:
  1938   0014C6                     l384:
  1939   0014C6  BCC5               	btfsc	197,6,c	;volatile
  1940   0014C8  EF68  F00A         	goto	u761
  1941   0014CC  EF6A  F00A         	goto	u760
  1942   0014D0                     u761:
  1943   0014D0  EF63  F00A         	goto	l384
  1944   0014D4                     u760:
  1945   0014D4                     
  1946                           ;I2C.c: 53:     return SSP1BUF;
  1947   0014D4  CFC9 F001          	movff	4041,?_I2C_Read	;volatile
  1948   0014D8  6A02               	clrf	(?_I2C_Read+1)^0,c
  1949   0014DA  0012               	return		;funcret
  1950   0014DC                     __end_of_I2C_Read:
  1951                           	callstack 0
  1952                           
  1953 ;; *************** function _I2C_Init *****************
  1954 ;; Defined at:
  1955 ;;		line 12 in file "I2C.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;		None
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;		None
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  1    wreg      void 
  1962 ;; Registers used:
  1963 ;;		wreg, status,2
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1973 ;;Total ram usage:        0 bytes
  1974 ;; Hardware stack levels used: 1
  1975 ;; This function calls:
  1976 ;;		Nothing
  1977 ;; This function is called by:
  1978 ;;		_main
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           	psect	text17
  1983   00155A                     __ptext17:
  1984                           	callstack 0
  1985   00155A                     _I2C_Init:
  1986                           	callstack 30
  1987   00155A                     
  1988                           ;I2C.c: 14:     SSP1STAT = 0x00;
  1989   00155A  0E00               	movlw	0
  1990   00155C  6EC7               	movwf	199,c	;volatile
  1991                           
  1992                           ;I2C.c: 15:     SSP1CON1 = 0x00;
  1993   00155E  0E00               	movlw	0
  1994   001560  6EC6               	movwf	198,c	;volatile
  1995   001562                     
  1996                           ;I2C.c: 16:     SSP1CON1bits.SSPEN = 1;
  1997   001562  8AC6               	bsf	198,5,c	;volatile
  1998                           
  1999                           ;I2C.c: 17:     SSP1CON1bits.SSPM = 0x08;
  2000   001564  50C6               	movf	198,w,c	;volatile
  2001   001566  0BF0               	andlw	-16
  2002   001568  0908               	iorlw	8
  2003   00156A  6EC6               	movwf	198,c	;volatile
  2004                           
  2005                           ;I2C.c: 18:     SSP1CON2 = 0x00;
  2006   00156C  0E00               	movlw	0
  2007   00156E  6EC5               	movwf	197,c	;volatile
  2008                           
  2009                           ;I2C.c: 19:     SSP1ADD = 0x77;
  2010   001570  0E77               	movlw	119
  2011   001572  6EC8               	movwf	200,c	;volatile
  2012   001574  0012               	return		;funcret
  2013   001576                     __end_of_I2C_Init:
  2014                           	callstack 0
  2015                           
  2016                           	psect	rparam
  2017   000000                     
  2018                           	psect	idloc
  2019                           
  2020                           ;Config register IDLOC0 @ 0x200000
  2021                           ;	unspecified, using default values
  2022   200000                     	org	2097152
  2023   200000  FF                 	db	255
  2024                           
  2025                           ;Config register IDLOC1 @ 0x200001
  2026                           ;	unspecified, using default values
  2027   200001                     	org	2097153
  2028   200001  FF                 	db	255
  2029                           
  2030                           ;Config register IDLOC2 @ 0x200002
  2031                           ;	unspecified, using default values
  2032   200002                     	org	2097154
  2033   200002  FF                 	db	255
  2034                           
  2035                           ;Config register IDLOC3 @ 0x200003
  2036                           ;	unspecified, using default values
  2037   200003                     	org	2097155
  2038   200003  FF                 	db	255
  2039                           
  2040                           ;Config register IDLOC4 @ 0x200004
  2041                           ;	unspecified, using default values
  2042   200004                     	org	2097156
  2043   200004  FF                 	db	255
  2044                           
  2045                           ;Config register IDLOC5 @ 0x200005
  2046                           ;	unspecified, using default values
  2047   200005                     	org	2097157
  2048   200005  FF                 	db	255
  2049                           
  2050                           ;Config register IDLOC6 @ 0x200006
  2051                           ;	unspecified, using default values
  2052   200006                     	org	2097158
  2053   200006  FF                 	db	255
  2054                           
  2055                           ;Config register IDLOC7 @ 0x200007
  2056                           ;	unspecified, using default values
  2057   200007                     	org	2097159
  2058   200007  FF                 	db	255
  2059                           
  2060                           	psect	config
  2061                           
  2062                           ;Config register CONFIG1L @ 0x300000
  2063                           ;	VREG Sleep Enable bit
  2064                           ;	RETEN = ON, Enabled
  2065                           ;	LF-INTOSC Low-power Enable bit
  2066                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
  2067                           ;	SOSC Power Selection and mode Configuration bits
  2068                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
  2069                           ;	Extended Instruction Set
  2070                           ;	XINST = OFF, Disabled
  2071   300000                     	org	3145728
  2072   300000  15                 	db	21
  2073                           
  2074                           ;Config register CONFIG1H @ 0x300001
  2075                           ;	Oscillator
  2076                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
  2077                           ;	PLL x4 Enable bit
  2078                           ;	PLLCFG = ON, Enabled
  2079                           ;	Fail-Safe Clock Monitor
  2080                           ;	FCMEN = OFF, Disabled
  2081                           ;	Internal External Oscillator Switch Over Mode
  2082                           ;	IESO = OFF, Disabled
  2083   300001                     	org	3145729
  2084   300001  13                 	db	19
  2085                           
  2086                           ;Config register CONFIG2L @ 0x300002
  2087                           ;	Power Up Timer
  2088                           ;	PWRTEN = OFF, Disabled
  2089                           ;	Brown Out Detect
  2090                           ;	BOREN = OFF, Disabled in hardware, SBOREN disabled
  2091                           ;	Brown-out Reset Voltage bits
  2092                           ;	BORV = 0, 3.0V
  2093                           ;	BORMV Power level
  2094                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
  2095   300002                     	org	3145730
  2096   300002  61                 	db	97
  2097                           
  2098                           ;Config register CONFIG2H @ 0x300003
  2099                           ;	Watchdog Timer
  2100                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
  2101                           ;	Watchdog Postscaler
  2102                           ;	WDTPS = 1, 1:1
  2103   300003                     	org	3145731
  2104   300003  00                 	db	0
  2105                           
  2106                           ;Config register CONFIG3L @ 0x300004
  2107                           ;	RTCC Clock Select
  2108                           ;	RTCOSC = INTOSCREF, RTCC uses INTRC
  2109                           ;	External Address Shift bit
  2110                           ;	EASHFT = OFF, Address Shifting disabled
  2111                           ;	Address Bus Width Select bits
  2112                           ;	ABW = MM, 8-bit address bus
  2113                           ;	Data Bus Width
  2114                           ;	BW = 8, 8-bit external bus mode
  2115                           ;	External Bus Wait
  2116                           ;	WAIT = ON, Enabled
  2117   300004                     	org	3145732
  2118   300004  30                 	db	48
  2119                           
  2120                           ;Config register CONFIG3H @ 0x300005
  2121                           ;	CCP2 Mux
  2122                           ;	CCP2MX = PORTBE, RE7-Microcontroller Mode/RB3-All other modes
  2123                           ;	ECCP Mux
  2124                           ;	ECCPMX = PORTH, Enhanced CCP1/3 [P1B/P1C/P3B/P3C] muxed with RH7/RH6/RH5/RH4
  2125                           ;	MSSP address masking
  2126                           ;	MSSPMSK = MSK5, 5 bit address masking mode
  2127                           ;	Master Clear Enable
  2128                           ;	MCLRE = ON, MCLR Enabled, RG5 Disabled
  2129   300005                     	org	3145733
  2130   300005  80                 	db	128
  2131                           
  2132                           ;Config register CONFIG4L @ 0x300006
  2133                           ;	Stack Overflow Reset
  2134                           ;	STVREN = ON, Enabled
  2135                           ;	Boot Block Size
  2136                           ;	BBSIZ = BB1K, 1K word Boot Block size
  2137                           ;	Background Debug
  2138                           ;	DEBUG = OFF, Disabled
  2139   300006                     	org	3145734
  2140   300006  81                 	db	129
  2141                           
  2142                           ; Padding undefined space
  2143   300007                     	org	3145735
  2144   300007  FF                 	db	255
  2145                           
  2146                           ;Config register CONFIG5L @ 0x300008
  2147                           ;	Code Protect 00800-03FFF
  2148                           ;	CP0 = OFF, Disabled
  2149                           ;	Code Protect 04000-07FFF
  2150                           ;	CP1 = OFF, Disabled
  2151                           ;	Code Protect 08000-0BFFF
  2152                           ;	CP2 = OFF, Disabled
  2153                           ;	Code Protect 0C000-0FFFF
  2154                           ;	CP3 = OFF, Disabled
  2155                           ;	Code Protect 10000-13FFF
  2156                           ;	CP4 = OFF, Disabled
  2157                           ;	Code Protect 14000-17FFF
  2158                           ;	CP5 = OFF, Disabled
  2159                           ;	Code Protect 18000-1BFFF
  2160                           ;	CP6 = OFF, Disabled
  2161                           ;	Code Protect 1C000-1FFFF
  2162                           ;	CP7 = OFF, Disabled
  2163   300008                     	org	3145736
  2164   300008  FF                 	db	255
  2165                           
  2166                           ;Config register CONFIG5H @ 0x300009
  2167                           ;	Code Protect Boot
  2168                           ;	CPB = OFF, Disabled
  2169                           ;	Data EE Read Protect
  2170                           ;	CPD = OFF, Disabled
  2171   300009                     	org	3145737
  2172   300009  C0                 	db	192
  2173                           
  2174                           ;Config register CONFIG6L @ 0x30000A
  2175                           ;	Table Write Protect 00800-03FFF
  2176                           ;	WRT0 = OFF, Disabled
  2177                           ;	Table Write Protect 04000-07FFF
  2178                           ;	WRT1 = OFF, Disabled
  2179                           ;	Table Write Protect 08000-0BFFF
  2180                           ;	WRT2 = OFF, Disabled
  2181                           ;	Table Write Protect 0C000-0FFFF
  2182                           ;	WRT3 = OFF, Disabled
  2183                           ;	Table Write Protect 10000-13FFF
  2184                           ;	WRT4 = OFF, Disabled
  2185                           ;	Table Write Protect 14000-17FFF
  2186                           ;	WRT5 = OFF, Disabled
  2187                           ;	Table Write Protect 18000-1BFFF
  2188                           ;	WRT6 = OFF, Disabled
  2189                           ;	Table Write Protect 1C000-1FFFF
  2190                           ;	WRT7 = OFF, Disabled
  2191   30000A                     	org	3145738
  2192   30000A  FF                 	db	255
  2193                           
  2194                           ;Config register CONFIG6H @ 0x30000B
  2195                           ;	Config. Write Protect
  2196                           ;	WRTC = OFF, Disabled
  2197                           ;	Table Write Protect Boot
  2198                           ;	WRTB = OFF, Disabled
  2199                           ;	Data EE Write Protect
  2200                           ;	WRTD = OFF, Disabled
  2201   30000B                     	org	3145739
  2202   30000B  E0                 	db	224
  2203                           
  2204                           ;Config register CONFIG7L @ 0x30000C
  2205                           ;	Table Read Protect 00800-03FFF
  2206                           ;	EBRT0 = OFF, Disabled
  2207                           ;	Table Read Protect 04000-07FFF
  2208                           ;	EBRT1 = OFF, Disabled
  2209                           ;	Table Read Protect 08000-0BFFF
  2210                           ;	EBRT2 = OFF, Disabled
  2211                           ;	Table Read Protect 0C000-0FFFF
  2212                           ;	EBRT3 = OFF, Disabled
  2213                           ;	Table Read Protect 10000-13FFF
  2214                           ;	EBRT4 = OFF, Disabled
  2215                           ;	Table Read Protect 14000-17FFF
  2216                           ;	EBRT5 = OFF, Disabled
  2217                           ;	Table Read Protect 18000-1BFFF
  2218                           ;	EBRT6 = OFF, Disabled
  2219                           ;	Table Read Protect 1C000-1FFFF
  2220                           ;	EBRT7 = OFF, Disabled
  2221   30000C                     	org	3145740
  2222   30000C  FF                 	db	255
  2223                           
  2224                           ;Config register CONFIG7H @ 0x30000D
  2225                           ;	Table Read Protect Boot
  2226                           ;	EBRTB = OFF, Disabled
  2227   30000D                     	org	3145741
  2228   30000D  40                 	db	64
  2229                           tosu	equ	0xFFF
  2230                           tosh	equ	0xFFE
  2231                           tosl	equ	0xFFD
  2232                           stkptr	equ	0xFFC
  2233                           pclatu	equ	0xFFB
  2234                           pclath	equ	0xFFA
  2235                           pcl	equ	0xFF9
  2236                           tblptru	equ	0xFF8
  2237                           tblptrh	equ	0xFF7
  2238                           tblptrl	equ	0xFF6
  2239                           tablat	equ	0xFF5
  2240                           prodh	equ	0xFF4
  2241                           prodl	equ	0xFF3
  2242                           indf0	equ	0xFEF
  2243                           postinc0	equ	0xFEE
  2244                           postdec0	equ	0xFED
  2245                           preinc0	equ	0xFEC
  2246                           plusw0	equ	0xFEB
  2247                           fsr0h	equ	0xFEA
  2248                           fsr0l	equ	0xFE9
  2249                           wreg	equ	0xFE8
  2250                           indf1	equ	0xFE7
  2251                           postinc1	equ	0xFE6
  2252                           postdec1	equ	0xFE5
  2253                           preinc1	equ	0xFE4
  2254                           plusw1	equ	0xFE3
  2255                           fsr1h	equ	0xFE2
  2256                           fsr1l	equ	0xFE1
  2257                           bsr	equ	0xFE0
  2258                           indf2	equ	0xFDF
  2259                           postinc2	equ	0xFDE
  2260                           postdec2	equ	0xFDD
  2261                           preinc2	equ	0xFDC
  2262                           plusw2	equ	0xFDB
  2263                           fsr2h	equ	0xFDA
  2264                           fsr2l	equ	0xFD9
  2265                           status	equ	0xFD8

Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      17
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    draw_string@tableau	PTR unsigned char  size(2) Largest target is 3861
		 -> RAM(DATA[3861]), STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_goto_lico
    _initialisation_afficheur->_d2command
    _command->_wait_status_ok
    _goto_lico->_d2command
    _draw_string->_d1command
    _clear_text->_d2command
    _clear_graphics->_d2command
    _d2command->_wait_status_ok
    _d1command->_wait_status_ok
    _wait_status_ok->_delai_us_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   13401
                           _I2C_Init
                           _I2C_Read
                 _I2C_Write_Register
                     _clear_graphics
                         _clear_text
                        _draw_string
                          _goto_lico
           _initialisation_afficheur
           _initialisation_des_ports
 ---------------------------------------------------------------------------------
 (1) _initialisation_des_ports                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialisation_afficheur                             1     1      0    3222
                                              8 COMRAM     1     1      0
                    _check_status_ok
                            _command
                          _d1command
                          _d2command
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (2) _command                                              2     2      0     140
                                              4 COMRAM     1     1      0
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
 ---------------------------------------------------------------------------------
 (2) _check_status_ok                                      1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _goto_lico                                            6     5      1    2435
                                              8 COMRAM     6     5      1
                          _d2command
 ---------------------------------------------------------------------------------
 (1) _draw_string                                          2     0      2    1008
                                              7 COMRAM     2     0      2
                           _I2C_Read (ARG)
                          _d1command
 ---------------------------------------------------------------------------------
 (1) _clear_text                                           2     2      0    3058
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (1) _clear_graphics                                       2     2      0    3058
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (2) _d2command                                            4     2      2    2201
                                              4 COMRAM     4     2      2
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (2) _d1command                                            3     2      1     811
                                              4 COMRAM     3     2      1
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (3) _write_d_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _write_c_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _wait_status_ok                                       3     3      0      90
                                              1 COMRAM     3     3      0
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (2) _delai_us_char                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Write_Register                                   6     0      6     522
                                              0 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (1) _I2C_Read                                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _I2C_Read
   _I2C_Write_Register
   _clear_graphics
     _d1command
       _delai_us_char
       _wait_status_ok
         _delai_us_char
       _write_c_aff
       _write_d_aff
     _d2command
       _delai_us_char
       _wait_status_ok
       _write_c_aff
       _write_d_aff
   _clear_text
     _d1command
     _d2command
   _draw_string
     _I2C_Read (ARG)
     _d1command (ARG)
   _goto_lico
     _d2command
   _initialisation_afficheur
     _check_status_ok
     _command
       _delai_us_char
       _wait_status_ok
       _write_c_aff
     _d1command
     _d2command
     _delai_us_char
   _initialisation_des_ports

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      56        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      E      11       1       17.9%
BITBIGSFRhllhl      2C      0       0      52        0.0%
BITBIGSFRhlhlll     1C      0       0      48        0.0%
BITBIGSFRhhhl       1C      0       0      37        0.0%
BITBANK15           16      0       0      34        0.0%
BANK15              16      0       0      35        0.0%
BITBIGSFRhhlhl      15      0       0      39        0.0%
BITBIGSFRhllhh      11      0       0      51        0.0%
BITBIGSFRhhhh        B      0       0      36        0.0%
BITBIGSFRhhlhh       A      0       0      38        0.0%
BITBIGSFRhlhhh       9      0       0      41        0.0%
BITBIGSFRll          6      0       0      54        0.0%
BITBIGSFRhlhllh      3      0       0      47        0.0%
BITBIGSFRhlhlhh      3      0       0      43        0.0%
BITBIGSFRhlhllh      2      0       0      46        0.0%
BITBIGSFRhlhhl       2      0       0      42        0.0%
BITBIGSFRhlhlll      1      0       0      49        0.0%
BITBIGSFRhlhlhl      1      0       0      44        0.0%
BITBIGSFRhlhlhl      1      0       0      45        0.0%
BITBIGSFRlh          1      0       0      53        0.0%
BITBIGSFRhlhlll      1      0       0      50        0.0%
BITBIGSFRhhll        1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      11      55        0.0%
DATA                 0      0      11       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Jan 16 12:13:18 2023

          ?_initialisation_des_ports 0001                                   l72 158E  
                                 l80 142E                                   l75 15A8  
                                 l84 1270                                   l93 1558  
                                 l79 142C                                   l89 12D8  
                                 l98 13F4                                   u10 1508  
                                 u11 1504                                   u20 129A  
                                 u21 1296                                   u30 12B2  
                                 u31 12AE                                   u40 12D6  
                                 u41 12D2                                   u50 1420  
                                 u51 141C                                   u60 154C  
                                 u61 1548                                  l110 1508  
                                l104 1346                                  l131 1176  
                                l108 14E2                                  l117 10EE  
                                l134 11EA                                  l160 1468  
                                l153 1242                                  l155 1262  
                                l165 14A2                                  l360 134A  
                                l362 1358                                  l371 1394  
                                l363 135E                                  l380 14B4  
                                l372 1396                                  l357 1574  
                                l381 14B8                                  l365 136C  
                                l374 13A4                                  l366 1372  
                                l278 1534                                  l375 13A6  
                                l384 14C6                                  l368 1380  
                                l369 1386                                  l386 14D4  
                                l378 14A6                                  l387 14DA  
                       ?_draw_string 0008                                  u600 119E  
                                u530 13C2                                  u610 11B4  
                                u531 13BE                                  u611 11B0  
                                u700 136C                                  u540 13E2  
                                u620 11DA                                  u701 1368  
                                u541 13DE                                  u710 1380  
                                u550 12F4                                  u630 11EA  
                                u711 137C                                  u551 12F0  
                                u631 11E6                                  u607 1194  
                                u720 1394                                  u560 1314  
                                u640 1206                                  u721 1390  
                                u561 1310                                  u641 1202  
                                u730 13A4                                  u570 1334  
                                u650 121A                                  u731 13A0  
                                u571 1330                                  u627 11D0  
                                u651 1216                                  u740 14B4  
                                u660 1262                                  u580 1052  
                                u741 14B0                                  u661 125E  
                                u581 104E                                  u750 14C6  
                                u670 1468                                  u590 1070  
                                u751 14C2                                  u671 1464  
                                u591 106C                                  u760 14D4  
                                u680 14A2                                  u761 14D0  
                                u681 149E                                  u690 1358  
                                u691 1354                                  wreg 000FE8  
                               l1101 15A4                                 l1111 129C  
                               l1103 15A6                                 l1113 12A2  
                               l1121 12C4                                 l1105 1264  
                               l1123 12D6                                 l1115 12B2  
                               l1107 1282                                 l1131 1420  
                               l1117 12B8                                 l1109 129A  
                               l1133 1428                                 l1141 154C  
                               l1063 14DE                                 l1119 12C0  
                               l1071 157C                                 l1127 13F6  
                               l1143 1552                                 l1065 14F6  
                               l1081 1588                                 l1073 1580  
                               l1129 140C                                 l1145 1558  
                               l1137 1538                                 l1067 14F8  
                               l1091 159A                                 l1083 158A  
                               l1075 1582                                 l1139 1538  
                               l1093 159C                                 l1085 158C  
                               l1077 1584                                 l1069 1578  
                               l1095 159E                                 l1087 1592  
                               l1079 1586                                 l1351 151E  
                               l1097 15A0                                 l1089 1596  
                               l1601 1026                                 l1361 1528  
                               l1353 1520                                 l1099 15A2  
                               l1611 103C                                 l1603 1028  
                               l1371 1532                                 l1363 152A  
                               l1355 1522                                 l1347 150A  
                               l1373 155A                                 l1621 1070  
                               l1613 1042                                 l1605 102E  
                               l1365 152C                                 l1357 1524  
                               l1349 151C                                 l1375 1562  
                               l1551 13AE                                 l1623 1172  
                               l1631 11EE                                 l1615 1052  
                               l1607 1030                                 l1367 152E  
                               l1359 1526                                 l1561 13E8  
                               l1553 13C2                                 l1625 1178  
                               l1641 121E                                 l1633 11F6  
                               l1617 1058                                 l1609 103A  
                               l1369 1530                                 l1563 13EE  
                               l1555 13C8                                 l1571 12E0  
                               l1627 11B4                                 l1643 1244  
                               l1635 1206                                 l1619 105C  
                               l1557 13CE                                 l1565 13F2  
                               l1549 13AA                                 l1581 131A  
                               l1573 12F4                                 l1661 1478  
                               l1653 1446                                 l1645 1430  
                               l1629 11B8                                 l1637 120A  
                               l1559 13E2                                 l1583 1320  
                               l1575 12FA                                 l1591 1344  
                               l1671 148E                                 l1655 1450  
                               l1647 143E                                 l1639 121A  
                               l1585 1334                                 l1577 1300  
                               l1569 12DC                                 l1657 1454  
                               l1587 133A                                 l1579 1314  
                               l1667 1480                                 l1659 146A  
                               l1595 100E                                 l1589 1340  
                               l1669 148A                                 l1597 1022  
                               l1781 10FC                                 l1599 1024  
                               l1791 1136                                 l1783 1100  
                               l1775 10F0                                 l1697 1348  
                               l1793 1152                                 l1785 110A  
                               l1777 10F4                                 l1699 14A4  
                               l1787 1116                                 l1779 10F8  
                               l1789 111A                                 STR_1 1001  
                               _LATH 000F90                                 _LATJ 000F91  
                               _main 10F0                     __end_of_I2C_Init 1576  
                   __end_of_I2C_Read 14DC                                 fsr0h 000FEA  
                               indf0 000FEF                                 fsr0l 000FE9  
                               prodh 000FF4                                 prodl 000FF3  
                               start 0002                         ___param_bank 000000  
                   ??_wait_status_ok 0002               EEP_SPI_WriteByte@F6879 000F  
                              ?_main 0001                                _TX1IF 007CF4  
                              _PORTH 000F87                                _TRISH 000F99  
                              _TRISJ 000F9A                          _write_c_aff 1590  
                        _write_d_aff 1576                      write_d_aff@data 0001  
                    __end_of_command 155A                                tablat 000FF5  
              __end_of_delai_us_char 150A                      _check_status_ok 13F6  
                              status 000FD8                      __initialization 15AA  
                       __end_of_main 1172                               ??_main 000F  
                      __activetblptr 000003                               _ANCON0 000F25  
                             _ANCON1 000F24                               _ANCON2 000F23  
                             _MEMCON 000F26                               _RCSTA1 000FAB  
                             _RCSTA2 000F22                               _SPBRG1 000FAF  
                             _SPBRG2 000F1E                               _TXREG1 000FAD  
                             _TXREG2 000F1C                               _TXSTA1 000FAC  
                             _TXSTA2 000F21                               isa$std 000001  
                          ??_command 0005                            ?_I2C_Init 0001  
                          ?_I2C_Read 0001                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8              __end_of_check_status_ok 1430  
                         __accesstop 0060              __end_of__initialization 15B0  
                      ___rparam_used 000001            I2C_Write_Register@Address 0001  
                     __pcstackCOMRAM 0001                    __end_of_d1command 13F6  
                  __end_of_d2command 1348                           ??_I2C_Init 0001  
                         ??_I2C_Read 0003                       _clear_graphics 146A  
                         _clear_text 1430                         ?_write_c_aff 0001  
                       ?_write_d_aff 0001             _initialisation_afficheur 100E  
                            _SPBRGH1 000FD4                              _SPBRGH2 000F1F  
                            _SSP1ADD 000FC8                     ?_check_status_ok 0001  
                            _SSP1BUF 000FC9                              _SSP2BUF 000F6A  
                  wait_status_ok@err 0002                    wait_status_ok@res 0004  
             __end_of_clear_graphics 14A4             _initialisation_des_ports 150A  
                            __Hparam 0000                              __Lparam 0000  
                       __psmallconst 1000                              __pcinit 15AA  
         __end_of_I2C_Write_Register 13A8                              __ramtop 1000  
                            __ptext0 10F0                              __ptext1 150A  
                            __ptext2 100E                              __ptext3 1536  
                            __ptext4 13F6                              __ptext5 11EC  
                            __ptext6 1172                              __ptext7 1430  
                            __ptext8 146A                              __ptext9 12DA  
                            _command 1536                   draw_string@tableau 0008  
                  __end_of_goto_lico 1264                 end_of_initialization 15B0  
                    ?_clear_graphics 0001                          ?_clear_text 0001  
                       goto_lico@adr 000D                            _TRISAbits 000F92  
                          _TRISCbits 000F94                            _TRISDbits 000F95  
                          _TRISFbits 000F97                            _TRISGbits 000F98  
                  clear_graphics@add 0009                           command@cmd 0005  
                 check_status_ok@res 0001                            _d1command 13A8  
                          _d2command 12DA                        ??_draw_string 000A  
         I2C_Write_Register@Register 0003                  start_initialization 15AA  
                      _delai_us_char 14DC           ??_initialisation_afficheur 0009  
                      clear_text@add 0009                           ?_d1command 0005  
               delai_us_char@ucdelai 0001                           ?_d2command 0005  
                        __pbssCOMRAM 000F                      I2C_Read@Address 0001  
         ??_initialisation_des_ports 0001                  __end_of_draw_string 11EC  
                     ?_delai_us_char 0001                             ?_command 0001  
                     _wait_status_ok 1264                          __smallconst 1000  
                           _BAUDCON1 000F65                             _BAUDCON2 000F20  
                   goto_lico@colonne 0009                             _I2C_Init 155A  
                           _I2C_Read 14A4                          _PADCFG1bits 000F53  
                   ??_clear_graphics 0009                   _I2C_Write_Register 1348  
                 write_c_aff@command 0001                            _goto_lico 11EC  
                           _LATCbits 000F8B                             _LATFbits 000F8E  
                           _LATGbits 000F8F                             _LATJbits 000F91  
                ?_I2C_Write_Register 0001                             _PIR1bits 000F9E  
                           _PIR2bits 000FA1                         ??_clear_text 0009  
                           _SSP1CON1 000FC6                             _SSP1CON2 000FC5  
                           _SSP2CON1 000F67                             _SSP1STAT 000FC7  
                           _SSP2STAT 000F68               __end_of_wait_status_ok 12DA  
                        ??_d1command 0006                          ??_d2command 0007  
               ??_I2C_Write_Register 0007                          _draw_string 1172  
                        _INTCON2bits 000FF1                      ??_delai_us_char 0001  
                 __end_of_clear_text 146A                           ?_goto_lico 0009  
                           __Hrparam 0000                             __Lrparam 0000  
   __end_of_initialisation_afficheur 10F0                      ?_wait_status_ok 0001  
initialisation_afficheur@error_count 0009     __end_of_initialisation_des_ports 1536  
                           __ptext10 13A8                             __ptext11 1576  
                           __ptext12 1590                             __ptext13 1264  
                           __ptext14 14DC                             __ptext15 1348  
                           __ptext16 14A4                             __ptext17 155A  
                       _SSP1CON1bits 000FC6                         _SSP1CON2bits 000FC5  
                       _SSP2CON1bits 000F67                             isa$xinst 000000  
                  ??_check_status_ok 0001                        ??_write_c_aff 0001  
                      ??_write_d_aff 0001                          ??_goto_lico 000A  
                     goto_lico@ligne 000C                         d1command@cmd 0005  
                       d1command@res 0007               I2C_Write_Register@data 0005  
                        d1command@d1 0006                  __end_of_write_c_aff 15AA  
                __end_of_write_d_aff 1590                         d2command@cmd 0006  
          ?_initialisation_afficheur 0001                         d2command@res 0008  
               wait_status_ok@status 0003                          d2command@d1 0007  
                        d2command@d2 0005  
