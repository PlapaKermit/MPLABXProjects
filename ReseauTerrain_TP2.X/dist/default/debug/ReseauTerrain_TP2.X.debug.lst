

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Jan 17 09:19:14 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F87K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33   000000                     
    34                           ; Generated 06/04/2022 GMT
    35                           ; 
    36                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F87K22 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68   000000                     _ANCON2	set	3875
    69   000000                     _ANCON1	set	3876
    70   000000                     _ANCON0	set	3877
    71   000000                     _MEMCON	set	3878
    72   000000                     _BAUDCON1	set	3941
    73   000000                     _RCSTA1	set	4011
    74   000000                     _TXSTA1	set	4012
    75   000000                     _RCSTA2	set	3874
    76   000000                     _PIR1bits	set	3998
    77   000000                     _SSP1CON2bits	set	4037
    78   000000                     _SSP1CON1bits	set	4038
    79   000000                     _SSP2CON1bits	set	3943
    80   000000                     _LATJ	set	3985
    81   000000                     _TXREG2	set	3868
    82   000000                     _SPBRG2	set	3870
    83   000000                     _SPBRGH2	set	3871
    84   000000                     _BAUDCON2	set	3872
    85   000000                     _TXSTA2	set	3873
    86   000000                     _TXREG1	set	4013
    87   000000                     _SPBRG1	set	4015
    88   000000                     _SPBRGH1	set	4052
    89   000000                     _SSP2CON1	set	3943
    90   000000                     _SSP2STAT	set	3944
    91   000000                     _PORTH	set	3975
    92   000000                     _LATH	set	3984
    93   000000                     _TX1IF	set	31988
    94   000000                     _INTCON2bits	set	4081
    95   000000                     _SSP1CON2	set	4037
    96   000000                     _SSP1CON1	set	4038
    97   000000                     _SSP1STAT	set	4039
    98   000000                     _PIR2bits	set	4001
    99   000000                     _TRISCbits	set	3988
   100   000000                     _TRISAbits	set	3986
   101   000000                     _LATJbits	set	3985
   102   000000                     _TRISH	set	3993
   103   000000                     _TRISJ	set	3994
   104   000000                     _LATCbits	set	3979
   105   000000                     _LATFbits	set	3982
   106   000000                     _LATGbits	set	3983
   107   000000                     _PADCFG1bits	set	3923
   108   000000                     _TRISFbits	set	3991
   109   000000                     _TRISDbits	set	3989
   110   000000                     _TRISGbits	set	3992
   111   000000                     _SSP2BUF	set	3946
   112   000000                     _SSP1BUF	set	4041
   113   000000                     _SSP1ADD	set	4040
   114                           
   115                           	psect	smallconst
   116   001000                     __psmallconst:
   117                           	callstack 0
   118   001000  00                 	db	0
   119   001001                     STR_1:
   120   001001  48                 	db	72	;'H'
   121   001002  65                 	db	101	;'e'
   122   001003  6C                 	db	108	;'l'
   123   001004  6C                 	db	108	;'l'
   124   001005  6F                 	db	111	;'o'
   125   001006  20                 	db	32
   126   001007  57                 	db	87	;'W'
   127   001008  6F                 	db	111	;'o'
   128   001009  72                 	db	114	;'r'
   129   00100A  6C                 	db	108	;'l'
   130   00100B  64                 	db	100	;'d'
   131   00100C  00                 	db	0
   132   00100D  00                 	db	0	; dummy byte at the end
   133   000000                     
   134                           ; #config settings
   135                           
   136                           	psect	cinit
   137   0016CA                     __pcinit:
   138                           	callstack 0
   139   0016CA                     start_initialization:
   140                           	callstack 0
   141   0016CA                     __initialization:
   142                           	callstack 0
   143                           
   144                           ; Clear objects allocated to COMRAM (3 bytes)
   145   0016CA  6A11               	clrf	(__pbssCOMRAM+2)& (0+255),c
   146   0016CC  6A10               	clrf	(__pbssCOMRAM+1)& (0+255),c
   147   0016CE  6A0F               	clrf	__pbssCOMRAM& (0+255),c
   148   0016D0                     end_of_initialization:
   149                           	callstack 0
   150   0016D0                     __end_of__initialization:
   151                           	callstack 0
   152   0016D0  0100               	movlb	0
   153   0016D2  EFC9  F008         	goto	_main	;jump to C main() function
   154                           
   155                           	psect	bssCOMRAM
   156   00000F                     __pbssCOMRAM:
   157                           	callstack 0
   158   00000F                     	ds	3
   159                           
   160                           	psect	cstackCOMRAM
   161   000001                     __pcstackCOMRAM:
   162                           	callstack 0
   163   000001                     ??_delai_ms:
   164   000001                     ?_I2C_Read:
   165                           	callstack 0
   166   000001                     write_d_aff@data:
   167                           	callstack 0
   168   000001                     write_c_aff@command:
   169                           	callstack 0
   170   000001                     check_status_ok@res:
   171                           	callstack 0
   172   000001                     delai_us_char@ucdelai:
   173                           	callstack 0
   174   000001                     I2C_Write_Register@u8Register:
   175                           	callstack 0
   176   000001                     I2C_Read@Register:
   177                           	callstack 0
   178                           
   179                           ; 1 bytes @ 0x0
   180   000001                     	ds	1
   181   000002                     wait_status_ok@err:
   182                           	callstack 0
   183   000002                     I2C_Write_Register@u8Value:
   184                           	callstack 0
   185                           
   186                           ; 1 bytes @ 0x1
   187   000002                     	ds	1
   188   000003                     wait_status_ok@status:
   189                           	callstack 0
   190   000003                     I2C_Write_Register@u8Address:
   191                           	callstack 0
   192   000003                     I2C_Read@Address:
   193                           	callstack 0
   194                           
   195                           ; 1 bytes @ 0x2
   196   000003                     	ds	1
   197   000004                     wait_status_ok@res:
   198                           	callstack 0
   199   000004                     delai_ms@j:
   200                           	callstack 0
   201                           
   202                           ; 2 bytes @ 0x3
   203   000004                     	ds	1
   204   000005                     command@cmd:
   205                           	callstack 0
   206   000005                     d1command@cmd:
   207                           	callstack 0
   208   000005                     d2command@d2:
   209                           	callstack 0
   210                           
   211                           ; 1 bytes @ 0x4
   212   000005                     	ds	1
   213   000006                     d1command@d1:
   214                           	callstack 0
   215   000006                     d2command@cmd:
   216                           	callstack 0
   217   000006                     delai_ms@val:
   218                           	callstack 0
   219                           
   220                           ; 1 bytes @ 0x5
   221   000006                     	ds	1
   222   000007                     d1command@res:
   223                           	callstack 0
   224   000007                     d2command@d1:
   225                           	callstack 0
   226                           
   227                           ; 1 bytes @ 0x6
   228   000007                     	ds	1
   229   000008                     d2command@res:
   230                           	callstack 0
   231   000008                     draw_char@dccar:
   232                           	callstack 0
   233   000008                     draw_string@tableau:
   234                           	callstack 0
   235                           
   236                           ; 2 bytes @ 0x7
   237   000008                     	ds	1
   238   000009                     initialisation_afficheur@error_count:
   239                           	callstack 0
   240   000009                     goto_lico@colonne:
   241                           	callstack 0
   242   000009                     clear_text@add:
   243                           	callstack 0
   244   000009                     clear_graphics@add:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0x8
   248   000009                     	ds	1
   249   00000A                     ??_goto_lico:
   250                           
   251                           ; 1 bytes @ 0x9
   252   00000A                     	ds	2
   253   00000C                     goto_lico@ligne:
   254                           	callstack 0
   255                           
   256                           ; 1 bytes @ 0xB
   257   00000C                     	ds	1
   258   00000D                     goto_lico@adr:
   259                           	callstack 0
   260                           
   261                           ; 2 bytes @ 0xC
   262   00000D                     	ds	2
   263   00000F                     
   264                           ; 1 bytes @ 0xE
   265 ;;
   266 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   267 ;;
   268 ;; *************** function _main *****************
   269 ;; Defined at:
   270 ;;		line 58 in file "main.c"
   271 ;; Parameters:    Size  Location     Type
   272 ;;		None
   273 ;; Auto vars:     Size  Location     Type
   274 ;;		None
   275 ;; Return value:  Size  Location     Type
   276 ;;                  1    wreg      void 
   277 ;; Registers used:
   278 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   279 ;; Tracked objects:
   280 ;;		On entry : 0/0
   281 ;;		On exit  : 0/0
   282 ;;		Unchanged: 0/0
   283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   288 ;;Total ram usage:        0 bytes
   289 ;; Hardware stack levels required when called: 4
   290 ;; This function calls:
   291 ;;		_I2C_Init
   292 ;;		_I2C_Read
   293 ;;		_I2C_Write_Register
   294 ;;		_clear_graphics
   295 ;;		_clear_text
   296 ;;		_delai_ms
   297 ;;		_draw_char
   298 ;;		_draw_string
   299 ;;		_goto_lico
   300 ;;		_initialisation_afficheur
   301 ;;		_initialisation_des_ports
   302 ;; This function is called by:
   303 ;;		Startup code after reset
   304 ;; This function uses a non-reentrant model
   305 ;;
   306                           
   307                           	psect	text0
   308   001192                     __ptext0:
   309                           	callstack 0
   310   001192                     _main:
   311                           	callstack 27
   312   001192                     
   313                           ;main.c: 60:     initialisation_des_ports();
   314   001192  EC15  F00B         	call	_initialisation_des_ports	;wreg free
   315   001196                     
   316                           ;main.c: 61:     initialisation_afficheur();
   317   001196  EC07  F008         	call	_initialisation_afficheur	;wreg free
   318   00119A                     
   319                           ;main.c: 62:     clear_text();
   320   00119A  ECC4  F00A         	call	_clear_text	;wreg free
   321   00119E                     
   322                           ;main.c: 63:     clear_graphics();
   323   00119E  ECE1  F00A         	call	_clear_graphics	;wreg free
   324   0011A2                     
   325                           ;main.c: 65:     goto_lico(0,0);
   326   0011A2  0E00               	movlw	0
   327   0011A4  6E09               	movwf	goto_lico@colonne^0,c
   328   0011A6  0E00               	movlw	0
   329   0011A8  EC5B  F009         	call	_goto_lico
   330   0011AC                     
   331                           ;main.c: 66:     draw_string("Hello World");
   332   0011AC  0E01               	movlw	low STR_1
   333   0011AE  6E08               	movwf	draw_string@tableau^0,c
   334   0011B0  0E10               	movlw	high STR_1
   335   0011B2  6E09               	movwf	(draw_string@tableau+1)^0,c
   336   0011B4  EC09  F00A         	call	_draw_string	;wreg free
   337   0011B8                     
   338                           ;main.c: 67:     I2C_Init();
   339   0011B8  EC3D  F00B         	call	_I2C_Init	;wreg free
   340   0011BC                     
   341                           ;main.c: 68:     I2C_Write_Register(0xA0, 0x08, 0x00);
   342   0011BC  0E08               	movlw	8
   343   0011BE  6E01               	movwf	I2C_Write_Register@u8Register^0,c
   344   0011C0  0E00               	movlw	0
   345   0011C2  6E02               	movwf	I2C_Write_Register@u8Value^0,c
   346   0011C4  0EA0               	movlw	160
   347   0011C6  EC15  F009         	call	_I2C_Write_Register
   348   0011CA                     
   349                           ;main.c: 70:     I2C_Write_Register(0xA0, 0x01, 0x00);
   350   0011CA  0E01               	movlw	1
   351   0011CC  6E01               	movwf	I2C_Write_Register@u8Register^0,c
   352   0011CE  0E00               	movlw	0
   353   0011D0  6E02               	movwf	I2C_Write_Register@u8Value^0,c
   354   0011D2  0EA0               	movlw	160
   355   0011D4  EC15  F009         	call	_I2C_Write_Register
   356   0011D8                     
   357                           ;main.c: 71:     I2C_Write_Register(0xA0, 0x02, 0x00);
   358   0011D8  0E02               	movlw	2
   359   0011DA  6E01               	movwf	I2C_Write_Register@u8Register^0,c
   360   0011DC  0E00               	movlw	0
   361   0011DE  6E02               	movwf	I2C_Write_Register@u8Value^0,c
   362   0011E0  0EA0               	movlw	160
   363   0011E2  EC15  F009         	call	_I2C_Write_Register
   364   0011E6                     
   365                           ;main.c: 72:     I2C_Write_Register(0xA0, 0x03, 0x00);
   366   0011E6  0E03               	movlw	3
   367   0011E8  6E01               	movwf	I2C_Write_Register@u8Register^0,c
   368   0011EA  0E00               	movlw	0
   369   0011EC  6E02               	movwf	I2C_Write_Register@u8Value^0,c
   370   0011EE  0EA0               	movlw	160
   371   0011F0  EC15  F009         	call	_I2C_Write_Register
   372   0011F4                     
   373                           ;main.c: 74:     I2C_Write_Register(0xA0,0x00,0x20);
   374   0011F4  0E00               	movlw	0
   375   0011F6  6E01               	movwf	I2C_Write_Register@u8Register^0,c
   376   0011F8  0E20               	movlw	32
   377   0011FA  6E02               	movwf	I2C_Write_Register@u8Value^0,c
   378   0011FC  0EA0               	movlw	160
   379   0011FE  EC15  F009         	call	_I2C_Write_Register
   380   001202                     l1878:
   381                           
   382                           ;main.c: 77:     {;main.c: 78:         draw_char(I2C_Read(0xA1,0x00));
   383   001202  0E00               	movlw	0
   384   001204  6E01               	movwf	I2C_Read@Register^0,c
   385   001206  0EA1               	movlw	161
   386   001208  EC78  F008         	call	_I2C_Read
   387   00120C  5001               	movf	?_I2C_Read^0,w,c
   388   00120E  EC34  F00A         	call	_draw_char
   389   001212                     
   390                           ;main.c: 79:         delai_ms(100);
   391   001212  0E64               	movlw	100
   392   001214  EC84  F00A         	call	_delai_ms
   393   001218                     
   394                           ;main.c: 80:         goto_lico(0,0);
   395   001218  0E00               	movlw	0
   396   00121A  6E09               	movwf	goto_lico@colonne^0,c
   397   00121C  0E00               	movlw	0
   398   00121E  EC5B  F009         	call	_goto_lico
   399   001222  EF01  F009         	goto	l1878
   400   001226  EF01  F000         	goto	start
   401   00122A                     __end_of_main:
   402                           	callstack 0
   403                           
   404 ;; *************** function _initialisation_des_ports *****************
   405 ;; Defined at:
   406 ;;		line 27 in file "main.c"
   407 ;; Parameters:    Size  Location     Type
   408 ;;		None
   409 ;; Auto vars:     Size  Location     Type
   410 ;;		None
   411 ;; Return value:  Size  Location     Type
   412 ;;                  1    wreg      void 
   413 ;; Registers used:
   414 ;;		wreg, status,2
   415 ;; Tracked objects:
   416 ;;		On entry : 0/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   424 ;;Total ram usage:        0 bytes
   425 ;; Hardware stack levels used: 1
   426 ;; This function calls:
   427 ;;		Nothing
   428 ;; This function is called by:
   429 ;;		_main
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433                           	psect	text1
   434   00162A                     __ptext1:
   435                           	callstack 0
   436   00162A                     _initialisation_des_ports:
   437                           	callstack 30
   438   00162A                     
   439                           ;main.c: 30:     MEMCON=0xA0;
   440   00162A  0EA0               	movlw	160
   441   00162C  010F               	movlb	15	; () banked
   442   00162E  6F26               	movwf	38,b	;volatile
   443                           
   444                           ;main.c: 33:     ANCON0=0x03;
   445   001630  0E03               	movlw	3
   446   001632  6F25               	movwf	37,b	;volatile
   447                           
   448                           ;main.c: 34:     ANCON1=0x08;
   449   001634  0E08               	movlw	8
   450   001636  6F24               	movwf	36,b	;volatile
   451                           
   452                           ;main.c: 35:     ANCON2=0x00;
   453   001638  0E00               	movlw	0
   454   00163A  6F23               	movwf	35,b	;volatile
   455   00163C                     
   456                           ; BSR set to: 15
   457                           ;main.c: 39:     LATCbits.LATC2=0;
   458   00163C  948B               	bcf	139,2,c	;volatile
   459   00163E                     
   460                           ; BSR set to: 15
   461                           ;main.c: 40:     LATCbits.LATC1=0;
   462   00163E  928B               	bcf	139,1,c	;volatile
   463   001640                     
   464                           ; BSR set to: 15
   465                           ;main.c: 41:     LATGbits.LATG0=0;
   466   001640  908F               	bcf	143,0,c	;volatile
   467   001642                     
   468                           ; BSR set to: 15
   469                           ;main.c: 44:     TRISAbits.TRISA2=0;
   470   001642  9492               	bcf	146,2,c	;volatile
   471   001644                     
   472                           ; BSR set to: 15
   473                           ;main.c: 45:     TRISAbits.TRISA3=0;
   474   001644  9692               	bcf	146,3,c	;volatile
   475   001646                     
   476                           ; BSR set to: 15
   477                           ;main.c: 46:     TRISAbits.TRISA4=0;
   478   001646  9892               	bcf	146,4,c	;volatile
   479   001648                     
   480                           ; BSR set to: 15
   481                           ;main.c: 47:     TRISAbits.TRISA5=0;
   482   001648  9A92               	bcf	146,5,c	;volatile
   483   00164A                     
   484                           ; BSR set to: 15
   485                           ;main.c: 48:     TRISCbits.TRISC2=0;
   486   00164A  9494               	bcf	148,2,c	;volatile
   487   00164C                     
   488                           ; BSR set to: 15
   489                           ;main.c: 49:     TRISCbits.TRISC1=0;
   490   00164C  9294               	bcf	148,1,c	;volatile
   491   00164E                     
   492                           ; BSR set to: 15
   493                           ;main.c: 50:     TRISGbits.TRISG0=0;
   494   00164E  9098               	bcf	152,0,c	;volatile
   495   001650                     
   496                           ; BSR set to: 15
   497                           ;main.c: 53:     INTCON2bits.RBPU=0;
   498   001650  9EF1               	bcf	241,7,c	;volatile
   499   001652                     
   500                           ; BSR set to: 15
   501                           ;main.c: 54:     PADCFG1bits.REPU=1;
   502   001652  8D53               	bsf	83,6,b	;volatile
   503   001654                     
   504                           ; BSR set to: 15
   505   001654  0012               	return		;funcret
   506   001656                     __end_of_initialisation_des_ports:
   507                           	callstack 0
   508                           
   509 ;; *************** function _initialisation_afficheur *****************
   510 ;; Defined at:
   511 ;;		line 165 in file "afficheur.c"
   512 ;; Parameters:    Size  Location     Type
   513 ;;		None
   514 ;; Auto vars:     Size  Location     Type
   515 ;;  error_count     1    8[COMRAM] unsigned char 
   516 ;; Return value:  Size  Location     Type
   517 ;;                  1    wreg      void 
   518 ;; Registers used:
   519 ;;		wreg, status,2, status,0, cstack
   520 ;; Tracked objects:
   521 ;;		On entry : 0/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   526 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   528 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   529 ;;Total ram usage:        1 bytes
   530 ;; Hardware stack levels used: 1
   531 ;; Hardware stack levels required when called: 3
   532 ;; This function calls:
   533 ;;		_check_status_ok
   534 ;;		_command
   535 ;;		_d1command
   536 ;;		_d2command
   537 ;;		_delai_us_char
   538 ;; This function is called by:
   539 ;;		_main
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543                           	psect	text2
   544   00100E                     __ptext2:
   545                           	callstack 0
   546   00100E                     _initialisation_afficheur:
   547                           	callstack 27
   548   00100E                     
   549                           ;afficheur.c: 168:     unsigned char error_count;;afficheur.c: 170:     error_count=0;
   550   00100E  0E00               	movlw	0
   551   001010  6E09               	movwf	initialisation_afficheur@error_count^0,c
   552                           
   553                           ;afficheur.c: 173:     LATH=0;
   554   001012  0E00               	movlw	0
   555   001014  6E90               	movwf	144,c	;volatile
   556                           
   557                           ;afficheur.c: 174:     LATJ=0x1F;
   558   001016  0E1F               	movlw	31
   559   001018  6E91               	movwf	145,c	;volatile
   560                           
   561                           ;afficheur.c: 177:     TRISH=0;
   562   00101A  0E00               	movlw	0
   563   00101C  6E99               	movwf	153,c	;volatile
   564                           
   565                           ;afficheur.c: 178:     TRISJ=0;
   566   00101E  0E00               	movlw	0
   567   001020  6E9A               	movwf	154,c	;volatile
   568   001022                     
   569                           ;afficheur.c: 181:     LATJbits.LATJ5=0;
   570   001022  9A91               	bcf	145,5,c	;volatile
   571   001024                     
   572                           ;afficheur.c: 182:     LATJbits.LATJ6=1;
   573   001024  8C91               	bsf	145,6,c	;volatile
   574   001026                     
   575                           ;afficheur.c: 185:     LATJbits.LATJ4=0;
   576   001026  9891               	bcf	145,4,c	;volatile
   577   001028                     
   578                           ;afficheur.c: 186:     delai_us_char(4);
   579   001028  0E04               	movlw	4
   580   00102A  ECFE  F00A         	call	_delai_us_char
   581   00102E                     
   582                           ;afficheur.c: 187:     LATJbits.LATJ4=1;
   583   00102E  8891               	bsf	145,4,c	;volatile
   584   001030                     
   585                           ;afficheur.c: 191:     delai_us_char(12);
   586   001030  0E0C               	movlw	12
   587   001032  ECFE  F00A         	call	_delai_us_char
   588                           
   589                           ;afficheur.c: 192:     while(check_status_ok()==00)
   590   001036  EF2E  F008         	goto	l1686
   591   00103A                     l1676:
   592                           
   593                           ;afficheur.c: 193:     {;afficheur.c: 194:         error_count++;
   594   00103A  2A09               	incf	initialisation_afficheur@error_count^0,f,c
   595   00103C                     
   596                           ;afficheur.c: 195:         delai_us_char(12);
   597   00103C  0E0C               	movlw	12
   598   00103E  ECFE  F00A         	call	_delai_us_char
   599   001042                     
   600                           ;afficheur.c: 196:         if (error_count>200)
   601   001042  0EC8               	movlw	200
   602   001044  6409               	cpfsgt	initialisation_afficheur@error_count^0,c
   603   001046  EF27  F008         	goto	u661
   604   00104A  EF29  F008         	goto	u660
   605   00104E                     u661:
   606   00104E  EF2E  F008         	goto	l1686
   607   001052                     u660:
   608   001052                     
   609                           ;afficheur.c: 197:         {;afficheur.c: 198:             LATCbits.LATC1=1;LATGbits.LAT
      +                          G0=1;LATCbits.LATC2=0;
   610   001052  828B               	bsf	139,1,c	;volatile
   611   001054  808F               	bsf	143,0,c	;volatile
   612   001056  948B               	bcf	139,2,c	;volatile
   613   001058                     
   614                           ;afficheur.c: 201:             error_count=0;
   615   001058  0E00               	movlw	0
   616   00105A  6E09               	movwf	initialisation_afficheur@error_count^0,c
   617   00105C                     l1686:
   618                           
   619                           ;afficheur.c: 192:     while(check_status_ok()==00)
   620   00105C  ECA7  F00A         	call	_check_status_ok	;wreg free
   621   001060  0900               	iorlw	0
   622   001062  B4D8               	btfsc	status,2,c
   623   001064  EF36  F008         	goto	u671
   624   001068  EF38  F008         	goto	u670
   625   00106C                     u671:
   626   00106C  EF1D  F008         	goto	l1676
   627   001070                     u670:
   628   001070                     
   629                           ;afficheur.c: 206:     d2command(39,15,0x21);
   630   001070  0E0F               	movlw	15
   631   001072  6E05               	movwf	d2command@d2^0,c
   632   001074  0E21               	movlw	33
   633   001076  6E06               	movwf	d2command@cmd^0,c
   634   001078  0E27               	movlw	39
   635   00107A  ECD2  F009         	call	_d2command
   636                           
   637                           ;afficheur.c: 207:     d2command(0,0,0x22);
   638   00107E  0E00               	movlw	0
   639   001080  6E05               	movwf	d2command@d2^0,c
   640   001082  0E22               	movlw	34
   641   001084  6E06               	movwf	d2command@cmd^0,c
   642   001086  0E00               	movlw	0
   643   001088  ECD2  F009         	call	_d2command
   644                           
   645                           ;afficheur.c: 208:     d2command(0,0,0x24);
   646   00108C  0E00               	movlw	0
   647   00108E  6E05               	movwf	d2command@d2^0,c
   648   001090  0E24               	movlw	36
   649   001092  6E06               	movwf	d2command@cmd^0,c
   650   001094  0E00               	movlw	0
   651   001096  ECD2  F009         	call	_d2command
   652                           
   653                           ;afficheur.c: 211:     d2command(0,0x7B,0x40);
   654   00109A  0E7B               	movlw	123
   655   00109C  6E05               	movwf	d2command@d2^0,c
   656   00109E  0E40               	movlw	64
   657   0010A0  6E06               	movwf	d2command@cmd^0,c
   658   0010A2  0E00               	movlw	0
   659   0010A4  ECD2  F009         	call	_d2command
   660                           
   661                           ;afficheur.c: 212:     d2command(40,0,0x41);
   662   0010A8  0E00               	movlw	0
   663   0010AA  6E05               	movwf	d2command@d2^0,c
   664   0010AC  0E41               	movlw	65
   665   0010AE  6E06               	movwf	d2command@cmd^0,c
   666   0010B0  0E28               	movlw	40
   667   0010B2  ECD2  F009         	call	_d2command
   668                           
   669                           ;afficheur.c: 213:     d2command(0x00,0x80,0x42);
   670   0010B6  0E80               	movlw	128
   671   0010B8  6E05               	movwf	d2command@d2^0,c
   672   0010BA  0E42               	movlw	66
   673   0010BC  6E06               	movwf	d2command@cmd^0,c
   674   0010BE  0E00               	movlw	0
   675   0010C0  ECD2  F009         	call	_d2command
   676                           
   677                           ;afficheur.c: 214:     d2command(40,0,0x43);
   678   0010C4  0E00               	movlw	0
   679   0010C6  6E05               	movwf	d2command@d2^0,c
   680   0010C8  0E43               	movlw	67
   681   0010CA  6E06               	movwf	d2command@cmd^0,c
   682   0010CC  0E28               	movlw	40
   683   0010CE  ECD2  F009         	call	_d2command
   684                           
   685                           ;afficheur.c: 217:     command(0x80);
   686   0010D2  0E80               	movlw	128
   687   0010D4  EC2B  F00B         	call	_command
   688                           
   689                           ;afficheur.c: 220:     command(0x9C);
   690   0010D8  0E9C               	movlw	156
   691   0010DA  EC2B  F00B         	call	_command
   692                           
   693                           ;afficheur.c: 223:     command(0xA0);
   694   0010DE  0EA0               	movlw	160
   695   0010E0  EC2B  F00B         	call	_command
   696                           
   697                           ;afficheur.c: 226:     d1command(0x02,0x70);
   698   0010E4  0E70               	movlw	112
   699   0010E6  6E05               	movwf	d1command@cmd^0,c
   700   0010E8  0E02               	movlw	2
   701   0010EA  EC5D  F00A         	call	_d1command
   702   0010EE  0012               	return		;funcret
   703   0010F0                     __end_of_initialisation_afficheur:
   704                           	callstack 0
   705                           
   706 ;; *************** function _command *****************
   707 ;; Defined at:
   708 ;;		line 91 in file "afficheur.c"
   709 ;; Parameters:    Size  Location     Type
   710 ;;  cmd             1    wreg     unsigned char 
   711 ;; Auto vars:     Size  Location     Type
   712 ;;  cmd             1    4[COMRAM] unsigned char 
   713 ;;  res             1    0        unsigned char 
   714 ;; Return value:  Size  Location     Type
   715 ;;                  1    wreg      unsigned char 
   716 ;; Registers used:
   717 ;;		wreg, status,2, status,0, cstack
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   724 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   726 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   727 ;;Total ram usage:        1 bytes
   728 ;; Hardware stack levels used: 1
   729 ;; Hardware stack levels required when called: 2
   730 ;; This function calls:
   731 ;;		_delai_us_char
   732 ;;		_wait_status_ok
   733 ;;		_write_c_aff
   734 ;; This function is called by:
   735 ;;		_initialisation_afficheur
   736 ;;		_plot1
   737 ;;		_plot0
   738 ;; This function uses a non-reentrant model
   739 ;;
   740                           
   741                           	psect	text3
   742   001656                     __ptext3:
   743                           	callstack 0
   744   001656                     _command:
   745                           	callstack 27
   746                           
   747                           ;incstack = 0
   748                           ;command@cmd stored from wreg
   749   001656  6E05               	movwf	command@cmd^0,c
   750   001658                     
   751                           ;afficheur.c: 97:     if(wait_status_ok()==1)
   752   001658  EC97  F009         	call	_wait_status_ok	;wreg free
   753   00165C  06E8               	decf	wreg,f,c
   754   00165E  A4D8               	btfss	status,2,c
   755   001660  EF34  F00B         	goto	u61
   756   001664  EF36  F00B         	goto	u60
   757   001668                     u61:
   758   001668  EF3C  F00B         	goto	l93
   759   00166C                     u60:
   760   00166C                     
   761                           ;afficheur.c: 98:     {;afficheur.c: 99:         delai_us_char(12);
   762   00166C  0E0C               	movlw	12
   763   00166E  ECFE  F00A         	call	_delai_us_char
   764   001672                     
   765                           ;afficheur.c: 100:         write_c_aff(cmd);
   766   001672  5005               	movf	command@cmd^0,w,c
   767   001674  EC58  F00B         	call	_write_c_aff
   768   001678                     l93:
   769   001678  0012               	return		;funcret
   770   00167A                     __end_of_command:
   771                           	callstack 0
   772                           
   773 ;; *************** function _check_status_ok *****************
   774 ;; Defined at:
   775 ;;		line 31 in file "afficheur.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;		None
   778 ;; Auto vars:     Size  Location     Type
   779 ;;  res             1    0[COMRAM] unsigned char 
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      unsigned char 
   782 ;; Registers used:
   783 ;;		wreg, status,2, status,0
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   790 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   792 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   793 ;;Total ram usage:        1 bytes
   794 ;; Hardware stack levels used: 1
   795 ;; This function calls:
   796 ;;		Nothing
   797 ;; This function is called by:
   798 ;;		_initialisation_afficheur
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           	psect	text4
   803   00154E                     __ptext4:
   804                           	callstack 0
   805   00154E                     _check_status_ok:
   806                           	callstack 29
   807   00154E                     
   808                           ;afficheur.c: 33:     unsigned char res;;afficheur.c: 36:     TRISH=0xFF;
   809   00154E  6899               	setf	153,c	;volatile
   810                           
   811                           ;afficheur.c: 37:     LATJbits.LATJ0=1;
   812   001550  8091               	bsf	145,0,c	;volatile
   813                           
   814                           ;afficheur.c: 38:     LATJbits.LATJ3=0;
   815   001552  9691               	bcf	145,3,c	;volatile
   816                           
   817                           ;afficheur.c: 39:     LATJbits.LATJ1=0;
   818   001554  9291               	bcf	145,1,c	;volatile
   819                           
   820                           ;afficheur.c: 40:     __nop();
   821   001556  F000               	nop	
   822                           
   823                           ;afficheur.c: 41:     __nop();
   824   001558  F000               	nop	
   825                           
   826                           ;afficheur.c: 42:     __nop();
   827   00155A  F000               	nop	
   828                           
   829                           ;afficheur.c: 43:     res=PORTH;
   830   00155C  CF87 F001          	movff	3975,check_status_ok@res	;volatile
   831                           
   832                           ;afficheur.c: 44:     LATJbits.LATJ1=1;
   833   001560  8291               	bsf	145,1,c	;volatile
   834                           
   835                           ;afficheur.c: 45:     LATJbits.LATJ3=1;
   836   001562  8691               	bsf	145,3,c	;volatile
   837   001564                     
   838                           ;afficheur.c: 47:     if ((res&0x03)==0x03)
   839   001564  5001               	movf	check_status_ok@res^0,w,c
   840   001566  0B03               	andlw	3
   841   001568  0A03               	xorlw	3
   842   00156A  A4D8               	btfss	status,2,c
   843   00156C  EFBA  F00A         	goto	u51
   844   001570  EFBC  F00A         	goto	u50
   845   001574                     u51:
   846   001574  EFC0  F00A         	goto	l1170
   847   001578                     u50:
   848   001578                     
   849                           ;afficheur.c: 48:         res=1;
   850   001578  0E01               	movlw	1
   851   00157A  6E01               	movwf	check_status_ok@res^0,c
   852   00157C  EFC2  F00A         	goto	l79
   853   001580                     l1170:
   854                           
   855                           ;afficheur.c: 50:         res=0;
   856   001580  0E00               	movlw	0
   857   001582  6E01               	movwf	check_status_ok@res^0,c
   858   001584                     l79:
   859                           
   860                           ;afficheur.c: 51:     return res;
   861   001584  5001               	movf	check_status_ok@res^0,w,c
   862   001586  0012               	return		;funcret
   863   001588                     __end_of_check_status_ok:
   864                           	callstack 0
   865                           
   866 ;; *************** function _goto_lico *****************
   867 ;; Defined at:
   868 ;;		line 276 in file "afficheur.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;  ligne           1    wreg     unsigned char 
   871 ;;  colonne         1    8[COMRAM] unsigned char 
   872 ;; Auto vars:     Size  Location     Type
   873 ;;  ligne           1   11[COMRAM] unsigned char 
   874 ;;  adr             2   12[COMRAM] unsigned int 
   875 ;; Return value:  Size  Location     Type
   876 ;;                  1    wreg      void 
   877 ;; Registers used:
   878 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   884 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   885 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   886 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   887 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   888 ;;Total ram usage:        6 bytes
   889 ;; Hardware stack levels used: 1
   890 ;; Hardware stack levels required when called: 3
   891 ;; This function calls:
   892 ;;		_d2command
   893 ;; This function is called by:
   894 ;;		_main
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           	psect	text5
   899   0012B6                     __ptext5:
   900                           	callstack 0
   901   0012B6                     _goto_lico:
   902                           	callstack 27
   903                           
   904                           ;incstack = 0
   905                           ;goto_lico@ligne stored from wreg
   906   0012B6  6E0C               	movwf	goto_lico@ligne^0,c
   907   0012B8                     
   908                           ;afficheur.c: 276: void goto_lico(unsigned char ligne, unsigned char colonne);afficheur.
      +                          c: 277: {;afficheur.c: 278:     unsigned int adr;;afficheur.c: 280:     adr=0x7B00;
   909   0012B8  0E7B               	movlw	123
   910   0012BA  6E0E               	movwf	(goto_lico@adr+1)^0,c
   911   0012BC  0E00               	movlw	0
   912   0012BE  6E0D               	movwf	goto_lico@adr^0,c
   913   0012C0                     
   914                           ;afficheur.c: 281:     if (ligne>15) ligne=0;
   915   0012C0  0E0F               	movlw	15
   916   0012C2  640C               	cpfsgt	goto_lico@ligne^0,c
   917   0012C4  EF66  F009         	goto	u731
   918   0012C8  EF68  F009         	goto	u730
   919   0012CC                     u731:
   920   0012CC  EF6A  F009         	goto	l1716
   921   0012D0                     u730:
   922   0012D0  0E00               	movlw	0
   923   0012D2  6E0C               	movwf	goto_lico@ligne^0,c
   924   0012D4                     l1716:
   925                           
   926                           ;afficheur.c: 282:     if (colonne>39) colonne=0;
   927   0012D4  0E27               	movlw	39
   928   0012D6  6409               	cpfsgt	goto_lico@colonne^0,c
   929   0012D8  EF70  F009         	goto	u741
   930   0012DC  EF72  F009         	goto	u740
   931   0012E0                     u741:
   932   0012E0  EF74  F009         	goto	l1720
   933   0012E4                     u740:
   934   0012E4  0E00               	movlw	0
   935   0012E6  6E09               	movwf	goto_lico@colonne^0,c
   936   0012E8                     l1720:
   937                           
   938                           ;afficheur.c: 283:     adr=adr+40*ligne+colonne;
   939   0012E8  500C               	movf	goto_lico@ligne^0,w,c
   940   0012EA  0D28               	mullw	40
   941   0012EC  CFF3 F00A          	movff	prodl,??_goto_lico
   942   0012F0  CFF4 F00B          	movff	prodh,??_goto_lico+1
   943   0012F4  5009               	movf	goto_lico@colonne^0,w,c
   944   0012F6  260A               	addwf	??_goto_lico^0,f,c
   945   0012F8  0E00               	movlw	0
   946   0012FA  220B               	addwfc	(??_goto_lico+1)^0,f,c
   947   0012FC  500D               	movf	goto_lico@adr^0,w,c
   948   0012FE  240A               	addwf	??_goto_lico^0,w,c
   949   001300  6E0D               	movwf	goto_lico@adr^0,c
   950   001302  500E               	movf	(goto_lico@adr+1)^0,w,c
   951   001304  200B               	addwfc	(??_goto_lico+1)^0,w,c
   952   001306  6E0E               	movwf	(goto_lico@adr+1)^0,c
   953                           
   954                           ;afficheur.c: 284:     while(d2command((unsigned char)(adr&0x00FF),(unsigned char)(adr>>
      +                          8),0x24)==0)
   955   001308  EF87  F009         	goto	l1722
   956   00130C                     l153:
   957                           
   958                           ;afficheur.c: 285:         __nop();
   959   00130C  F000               	nop	
   960   00130E                     l1722:
   961                           
   962                           ;afficheur.c: 284:     while(d2command((unsigned char)(adr&0x00FF),(unsigned char)(adr>>
      +                          8),0x24)==0)
   963   00130E  500E               	movf	(goto_lico@adr+1)^0,w,c
   964   001310  6E05               	movwf	d2command@d2^0,c
   965   001312  0E24               	movlw	36
   966   001314  6E06               	movwf	d2command@cmd^0,c
   967   001316  500D               	movf	goto_lico@adr^0,w,c
   968   001318  ECD2  F009         	call	_d2command
   969   00131C  0900               	iorlw	0
   970   00131E  B4D8               	btfsc	status,2,c
   971   001320  EF94  F009         	goto	u751
   972   001324  EF96  F009         	goto	u750
   973   001328                     u751:
   974   001328  EF86  F009         	goto	l153
   975   00132C                     u750:
   976   00132C  0012               	return		;funcret
   977   00132E                     __end_of_goto_lico:
   978                           	callstack 0
   979                           
   980 ;; *************** function _draw_string *****************
   981 ;; Defined at:
   982 ;;		line 244 in file "afficheur.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;  tableau         2    7[COMRAM] PTR unsigned char 
   985 ;;		 -> STR_1(12), 
   986 ;; Auto vars:     Size  Location     Type
   987 ;;		None
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      void 
   990 ;; Registers used:
   991 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   997 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1000 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1001 ;;Total ram usage:        2 bytes
  1002 ;; Hardware stack levels used: 1
  1003 ;; Hardware stack levels required when called: 3
  1004 ;; This function calls:
  1005 ;;		_d1command
  1006 ;; This function is called by:
  1007 ;;		_main
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           	psect	text6
  1012   001412                     __ptext6:
  1013                           	callstack 0
  1014   001412                     _draw_string:
  1015                           	callstack 27
  1016   001412                     
  1017                           ;afficheur.c: 244: void draw_string(unsigned char * tableau);afficheur.c: 245: {;affiche
      +                          ur.c: 246:     while(tableau[0]!=0)
  1018   001412  EF23  F00A         	goto	l1708
  1019   001416                     l131:
  1020                           
  1021                           ;afficheur.c: 249:             __nop();
  1022   001416  F000               	nop	
  1023   001418                     l1704:
  1024                           
  1025                           ;afficheur.c: 248:         while(d1command(tableau[0]-32,0xC0)==0)
  1026   001418  0EC0               	movlw	192
  1027   00141A  6E05               	movwf	d1command@cmd^0,c
  1028   00141C  C008  FFF6         	movff	draw_string@tableau,tblptrl
  1029   001420  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  1030   001424                     	if	0	;tblptru may be non-zero
  1031   001424                     	endif
  1032   001424                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1033   001424  0E00               	movlw	low (__mediumconst shr (0+16))
  1034   001426  6EF8               	movwf	tblptru,c
  1035   001428                     	endif
  1036   001428  0008               	tblrd		*
  1037   00142A  50F5               	movf	tablat,w,c
  1038   00142C  0FE0               	addlw	224
  1039   00142E  EC5D  F00A         	call	_d1command
  1040   001432  0900               	iorlw	0
  1041   001434  B4D8               	btfsc	status,2,c
  1042   001436  EF1F  F00A         	goto	u711
  1043   00143A  EF21  F00A         	goto	u710
  1044   00143E                     u711:
  1045   00143E  EF0B  F00A         	goto	l131
  1046   001442                     u710:
  1047   001442                     
  1048                           ;afficheur.c: 250:         tableau++;
  1049   001442  4A08               	infsnz	draw_string@tableau^0,f,c
  1050   001444  2A09               	incf	(draw_string@tableau+1)^0,f,c
  1051   001446                     l1708:
  1052                           
  1053                           ;afficheur.c: 246:     while(tableau[0]!=0)
  1054   001446  C008  FFF6         	movff	draw_string@tableau,tblptrl
  1055   00144A  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  1056   00144E                     	if	0	;tblptru may be non-zero
  1057   00144E                     	endif
  1058   00144E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1059   00144E  0E00               	movlw	low (__mediumconst shr (0+16))
  1060   001450  6EF8               	movwf	tblptru,c
  1061   001452                     	endif
  1062   001452  0008               	tblrd		*
  1063   001454  50F5               	movf	tablat,w,c
  1064   001456  0900               	iorlw	0
  1065   001458  A4D8               	btfss	status,2,c
  1066   00145A  EF31  F00A         	goto	u721
  1067   00145E  EF33  F00A         	goto	u720
  1068   001462                     u721:
  1069   001462  EF0C  F00A         	goto	l1704
  1070   001466                     u720:
  1071   001466  0012               	return		;funcret
  1072   001468                     __end_of_draw_string:
  1073                           	callstack 0
  1074                           
  1075 ;; *************** function _draw_char *****************
  1076 ;; Defined at:
  1077 ;;		line 229 in file "afficheur.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;  dccar           1    wreg     unsigned char 
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;  dccar           1    7[COMRAM] unsigned char 
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      void 
  1084 ;; Registers used:
  1085 ;;		wreg, status,2, status,0, cstack
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1092 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1095 ;;Total ram usage:        1 bytes
  1096 ;; Hardware stack levels used: 1
  1097 ;; Hardware stack levels required when called: 3
  1098 ;; This function calls:
  1099 ;;		_d1command
  1100 ;; This function is called by:
  1101 ;;		_main
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text7
  1106   001468                     __ptext7:
  1107                           	callstack 0
  1108   001468                     _draw_char:
  1109                           	callstack 27
  1110                           
  1111                           ;incstack = 0
  1112                           ;draw_char@dccar stored from wreg
  1113   001468  6E08               	movwf	draw_char@dccar^0,c
  1114   00146A                     
  1115                           ;afficheur.c: 229: void draw_char(unsigned char dccar);afficheur.c: 230: {;afficheur.c: 
      +                          231:     if (dccar<32)
  1116   00146A  0E20               	movlw	32
  1117   00146C  6008               	cpfslt	draw_char@dccar^0,c
  1118   00146E  EF3B  F00A         	goto	u681
  1119   001472  EF3D  F00A         	goto	u680
  1120   001476                     u681:
  1121   001476  EF3F  F00A         	goto	l1694
  1122   00147A                     u680:
  1123   00147A                     
  1124                           ;afficheur.c: 232:     {;afficheur.c: 233:         dccar=0x3F;
  1125   00147A  0E3F               	movlw	63
  1126   00147C  6E08               	movwf	draw_char@dccar^0,c
  1127   00147E                     l1694:
  1128                           
  1129                           ;afficheur.c: 235:     if (dccar>0x9F)
  1130   00147E  0E9F               	movlw	159
  1131   001480  6408               	cpfsgt	draw_char@dccar^0,c
  1132   001482  EF45  F00A         	goto	u691
  1133   001486  EF47  F00A         	goto	u690
  1134   00148A                     u691:
  1135   00148A  EF49  F00A         	goto	l1698
  1136   00148E                     u690:
  1137   00148E                     
  1138                           ;afficheur.c: 236:     {;afficheur.c: 237:         dccar=0x3F;
  1139   00148E  0E3F               	movlw	63
  1140   001490  6E08               	movwf	draw_char@dccar^0,c
  1141   001492                     l1698:
  1142                           
  1143                           ;afficheur.c: 239:     dccar=dccar-32;
  1144   001492  5008               	movf	draw_char@dccar^0,w,c
  1145   001494  0FE0               	addlw	224
  1146   001496  6E08               	movwf	draw_char@dccar^0,c
  1147                           
  1148                           ;afficheur.c: 240:     while(d1command(dccar,0xC0)==0) __nop();
  1149   001498  EF4F  F00A         	goto	l1700
  1150   00149C                     l123:
  1151   00149C  F000               	nop	
  1152   00149E                     l1700:
  1153   00149E  0EC0               	movlw	192
  1154   0014A0  6E05               	movwf	d1command@cmd^0,c
  1155   0014A2  5008               	movf	draw_char@dccar^0,w,c
  1156   0014A4  EC5D  F00A         	call	_d1command
  1157   0014A8  0900               	iorlw	0
  1158   0014AA  B4D8               	btfsc	status,2,c
  1159   0014AC  EF5A  F00A         	goto	u701
  1160   0014B0  EF5C  F00A         	goto	u700
  1161   0014B4                     u701:
  1162   0014B4  EF4E  F00A         	goto	l123
  1163   0014B8                     u700:
  1164   0014B8  0012               	return		;funcret
  1165   0014BA                     __end_of_draw_char:
  1166                           	callstack 0
  1167                           
  1168 ;; *************** function _delai_ms *****************
  1169 ;; Defined at:
  1170 ;;		line 18 in file "main.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;  val             1    wreg     unsigned char 
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;  val             1    5[COMRAM] unsigned char 
  1175 ;;  j               2    3[COMRAM] int 
  1176 ;; Return value:  Size  Location     Type
  1177 ;;                  1    wreg      void 
  1178 ;; Registers used:
  1179 ;;		wreg, status,2, status,0
  1180 ;; Tracked objects:
  1181 ;;		On entry : 0/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1186 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1187 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1188 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1189 ;;Total ram usage:        6 bytes
  1190 ;; Hardware stack levels used: 1
  1191 ;; This function calls:
  1192 ;;		Nothing
  1193 ;; This function is called by:
  1194 ;;		_main
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           	psect	text8
  1199   001508                     __ptext8:
  1200                           	callstack 0
  1201   001508                     _delai_ms:
  1202                           	callstack 30
  1203                           
  1204                           ;incstack = 0
  1205                           ;delai_ms@val stored from wreg
  1206   001508  6E06               	movwf	delai_ms@val^0,c
  1207   00150A                     
  1208                           ;main.c: 22:     for (int j=0;j<val;j++) {
  1209   00150A  0E00               	movlw	0
  1210   00150C  6E05               	movwf	(delai_ms@j+1)^0,c
  1211   00150E  0E00               	movlw	0
  1212   001510  6E04               	movwf	delai_ms@j^0,c
  1213   001512  EF94  F00A         	goto	l1402
  1214   001516                     l1398:
  1215                           
  1216                           ;main.c: 23:         _delay((unsigned long)((1)*(11059200/4000.0)));
  1217   001516  0E04               	movlw	4
  1218   001518  6E01               	movwf	??_delai_ms^0,c
  1219   00151A  0E96               	movlw	150
  1220   00151C                     u1017:
  1221   00151C  2EE8               	decfsz	wreg,f,c
  1222   00151E  D7FE               	bra	u1017
  1223   001520  2E01               	decfsz	??_delai_ms^0,f,c
  1224   001522  D7FC               	bra	u1017
  1225   001524                     
  1226                           ;main.c: 24:     }
  1227   001524  4A04               	infsnz	delai_ms@j^0,f,c
  1228   001526  2A05               	incf	(delai_ms@j+1)^0,f,c
  1229   001528                     l1402:
  1230   001528  5006               	movf	delai_ms@val^0,w,c
  1231   00152A  6E01               	movwf	??_delai_ms^0,c
  1232   00152C  6A02               	clrf	(??_delai_ms+1)^0,c
  1233   00152E  5001               	movf	??_delai_ms^0,w,c
  1234   001530  5C04               	subwf	delai_ms@j^0,w,c
  1235   001532  5005               	movf	(delai_ms@j+1)^0,w,c
  1236   001534  0A80               	xorlw	128
  1237   001536  6E03               	movwf	(??_delai_ms+2)^0,c
  1238   001538  5002               	movf	(??_delai_ms+1)^0,w,c
  1239   00153A  0A80               	xorlw	128
  1240   00153C  5803               	subwfb	(??_delai_ms+2)^0,w,c
  1241   00153E  A0D8               	btfss	status,0,c
  1242   001540  EFA4  F00A         	goto	u291
  1243   001544  EFA6  F00A         	goto	u290
  1244   001548                     u291:
  1245   001548  EF8B  F00A         	goto	l1398
  1246   00154C                     u290:
  1247   00154C  0012               	return		;funcret
  1248   00154E                     __end_of_delai_ms:
  1249                           	callstack 0
  1250                           
  1251 ;; *************** function _clear_text *****************
  1252 ;; Defined at:
  1253 ;;		line 288 in file "afficheur.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;		None
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;  add             2    8[COMRAM] unsigned int 
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  1    wreg      void 
  1260 ;; Registers used:
  1261 ;;		wreg, status,2, status,0, cstack
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1268 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1270 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1271 ;;Total ram usage:        2 bytes
  1272 ;; Hardware stack levels used: 1
  1273 ;; Hardware stack levels required when called: 3
  1274 ;; This function calls:
  1275 ;;		_d1command
  1276 ;;		_d2command
  1277 ;; This function is called by:
  1278 ;;		_main
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282                           	psect	text9
  1283   001588                     __ptext9:
  1284                           	callstack 0
  1285   001588                     _clear_text:
  1286                           	callstack 27
  1287   001588                     
  1288                           ;afficheur.c: 290:     unsigned int add;;afficheur.c: 292:     d2command(0,0,0x24);
  1289   001588  0E00               	movlw	0
  1290   00158A  6E05               	movwf	d2command@d2^0,c
  1291   00158C  0E24               	movlw	36
  1292   00158E  6E06               	movwf	d2command@cmd^0,c
  1293   001590  0E00               	movlw	0
  1294   001592  ECD2  F009         	call	_d2command
  1295   001596                     
  1296                           ;afficheur.c: 293:     for (add=0;add!=0x8000;add++)
  1297   001596  0E00               	movlw	0
  1298   001598  6E0A               	movwf	(clear_text@add+1)^0,c
  1299   00159A  0E00               	movlw	0
  1300   00159C  6E09               	movwf	clear_text@add^0,c
  1301   00159E                     l1732:
  1302                           
  1303                           ;afficheur.c: 294:     {;afficheur.c: 295:             d1command(0x00,0xC0);
  1304   00159E  0EC0               	movlw	192
  1305   0015A0  6E05               	movwf	d1command@cmd^0,c
  1306   0015A2  0E00               	movlw	0
  1307   0015A4  EC5D  F00A         	call	_d1command
  1308   0015A8                     
  1309                           ;afficheur.c: 296:     }
  1310   0015A8  4A09               	infsnz	clear_text@add^0,f,c
  1311   0015AA  2A0A               	incf	(clear_text@add+1)^0,f,c
  1312   0015AC  0E80               	movlw	128
  1313   0015AE  180A               	xorwf	(clear_text@add+1)^0,w,c
  1314   0015B0  1009               	iorwf	clear_text@add^0,w,c
  1315   0015B2  A4D8               	btfss	status,2,c
  1316   0015B4  EFDE  F00A         	goto	u761
  1317   0015B8  EFE0  F00A         	goto	u760
  1318   0015BC                     u761:
  1319   0015BC  EFCF  F00A         	goto	l1732
  1320   0015C0                     u760:
  1321   0015C0  0012               	return		;funcret
  1322   0015C2                     __end_of_clear_text:
  1323                           	callstack 0
  1324                           
  1325 ;; *************** function _clear_graphics *****************
  1326 ;; Defined at:
  1327 ;;		line 299 in file "afficheur.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;		None
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;  add             2    8[COMRAM] unsigned int 
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  1    wreg      void 
  1334 ;; Registers used:
  1335 ;;		wreg, status,2, status,0, cstack
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1342 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1344 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1345 ;;Total ram usage:        2 bytes
  1346 ;; Hardware stack levels used: 1
  1347 ;; Hardware stack levels required when called: 3
  1348 ;; This function calls:
  1349 ;;		_d1command
  1350 ;;		_d2command
  1351 ;; This function is called by:
  1352 ;;		_main
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           	psect	text10
  1357   0015C2                     __ptext10:
  1358                           	callstack 0
  1359   0015C2                     _clear_graphics:
  1360                           	callstack 27
  1361   0015C2                     
  1362                           ;afficheur.c: 301:     unsigned int add;;afficheur.c: 303:     d2command(0,0x80,0x24);
  1363   0015C2  0E80               	movlw	128
  1364   0015C4  6E05               	movwf	d2command@d2^0,c
  1365   0015C6  0E24               	movlw	36
  1366   0015C8  6E06               	movwf	d2command@cmd^0,c
  1367   0015CA  0E00               	movlw	0
  1368   0015CC  ECD2  F009         	call	_d2command
  1369   0015D0                     
  1370                           ;afficheur.c: 304:     for (add=0x8000;add!=0xF800;add++)
  1371   0015D0  0E80               	movlw	128
  1372   0015D2  6E0A               	movwf	(clear_graphics@add+1)^0,c
  1373   0015D4  0E00               	movlw	0
  1374   0015D6  6E09               	movwf	clear_graphics@add^0,c
  1375   0015D8                     l1746:
  1376                           
  1377                           ;afficheur.c: 305:     {;afficheur.c: 306:             d1command(0x00,0xC0);
  1378   0015D8  0EC0               	movlw	192
  1379   0015DA  6E05               	movwf	d1command@cmd^0,c
  1380   0015DC  0E00               	movlw	0
  1381   0015DE  EC5D  F00A         	call	_d1command
  1382   0015E2                     
  1383                           ;afficheur.c: 307:     }
  1384   0015E2  4A09               	infsnz	clear_graphics@add^0,f,c
  1385   0015E4  2A0A               	incf	(clear_graphics@add+1)^0,f,c
  1386   0015E6  0EF8               	movlw	248
  1387   0015E8  180A               	xorwf	(clear_graphics@add+1)^0,w,c
  1388   0015EA  1009               	iorwf	clear_graphics@add^0,w,c
  1389   0015EC  A4D8               	btfss	status,2,c
  1390   0015EE  EFFB  F00A         	goto	u771
  1391   0015F2  EFFD  F00A         	goto	u770
  1392   0015F6                     u771:
  1393   0015F6  EFEC  F00A         	goto	l1746
  1394   0015FA                     u770:
  1395   0015FA  0012               	return		;funcret
  1396   0015FC                     __end_of_clear_graphics:
  1397                           	callstack 0
  1398                           
  1399 ;; *************** function _d2command *****************
  1400 ;; Defined at:
  1401 ;;		line 129 in file "afficheur.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;  d1              1    wreg     unsigned char 
  1404 ;;  d2              1    4[COMRAM] unsigned char 
  1405 ;;  cmd             1    5[COMRAM] unsigned char 
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;  d1              1    6[COMRAM] unsigned char 
  1408 ;;  res             1    7[COMRAM] unsigned char 
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  1    wreg      unsigned char 
  1411 ;; Registers used:
  1412 ;;		wreg, status,2, status,0, cstack
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1418 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1419 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1421 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1422 ;;Total ram usage:        4 bytes
  1423 ;; Hardware stack levels used: 1
  1424 ;; Hardware stack levels required when called: 2
  1425 ;; This function calls:
  1426 ;;		_delai_us_char
  1427 ;;		_wait_status_ok
  1428 ;;		_write_c_aff
  1429 ;;		_write_d_aff
  1430 ;; This function is called by:
  1431 ;;		_initialisation_afficheur
  1432 ;;		_goto_lico
  1433 ;;		_clear_text
  1434 ;;		_clear_graphics
  1435 ;;		_clear_cgram
  1436 ;;		_plot1
  1437 ;;		_plot0
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           	psect	text11
  1442   0013A4                     __ptext11:
  1443                           	callstack 0
  1444   0013A4                     _d2command:
  1445                           	callstack 27
  1446                           
  1447                           ;incstack = 0
  1448                           ;d2command@d1 stored from wreg
  1449   0013A4  6E07               	movwf	d2command@d1^0,c
  1450   0013A6                     
  1451                           ;afficheur.c: 129: unsigned char d2command(unsigned char d1, unsigned char d2, unsigned 
      +                          char cmd);afficheur.c: 130: {;afficheur.c: 131:     unsigned char res;;afficheur.c: 133:
      +                               res=0;
  1452   0013A6  0E00               	movlw	0
  1453   0013A8  6E08               	movwf	d2command@res^0,c
  1454   0013AA                     
  1455                           ;afficheur.c: 135:     if (wait_status_ok()==1)
  1456   0013AA  EC97  F009         	call	_wait_status_ok	;wreg free
  1457   0013AE  06E8               	decf	wreg,f,c
  1458   0013B0  A4D8               	btfss	status,2,c
  1459   0013B2  EFDD  F009         	goto	u631
  1460   0013B6  EFDF  F009         	goto	u630
  1461   0013BA                     u631:
  1462   0013BA  EF07  F00A         	goto	l1658
  1463   0013BE                     u630:
  1464   0013BE                     
  1465                           ;afficheur.c: 136:     {;afficheur.c: 137:         delai_us_char(12);
  1466   0013BE  0E0C               	movlw	12
  1467   0013C0  ECFE  F00A         	call	_delai_us_char
  1468   0013C4                     
  1469                           ;afficheur.c: 138:         write_d_aff(d1);
  1470   0013C4  5007               	movf	d2command@d1^0,w,c
  1471   0013C6  EC4B  F00B         	call	_write_d_aff
  1472   0013CA                     
  1473                           ;afficheur.c: 139:         if (wait_status_ok()==1)
  1474   0013CA  EC97  F009         	call	_wait_status_ok	;wreg free
  1475   0013CE  06E8               	decf	wreg,f,c
  1476   0013D0  A4D8               	btfss	status,2,c
  1477   0013D2  EFED  F009         	goto	u641
  1478   0013D6  EFEF  F009         	goto	u640
  1479   0013DA                     u641:
  1480   0013DA  EF07  F00A         	goto	l1658
  1481   0013DE                     u640:
  1482   0013DE                     
  1483                           ;afficheur.c: 140:         {;afficheur.c: 141:             delai_us_char(12);
  1484   0013DE  0E0C               	movlw	12
  1485   0013E0  ECFE  F00A         	call	_delai_us_char
  1486   0013E4                     
  1487                           ;afficheur.c: 142:             write_d_aff(d2);
  1488   0013E4  5005               	movf	d2command@d2^0,w,c
  1489   0013E6  EC4B  F00B         	call	_write_d_aff
  1490   0013EA                     
  1491                           ;afficheur.c: 143:             if (wait_status_ok()==1)
  1492   0013EA  EC97  F009         	call	_wait_status_ok	;wreg free
  1493   0013EE  06E8               	decf	wreg,f,c
  1494   0013F0  A4D8               	btfss	status,2,c
  1495   0013F2  EFFD  F009         	goto	u651
  1496   0013F6  EFFF  F009         	goto	u650
  1497   0013FA                     u651:
  1498   0013FA  EF07  F00A         	goto	l1658
  1499   0013FE                     u650:
  1500   0013FE                     
  1501                           ;afficheur.c: 144:             {;afficheur.c: 145:                 delai_us_char(12);
  1502   0013FE  0E0C               	movlw	12
  1503   001400  ECFE  F00A         	call	_delai_us_char
  1504   001404                     
  1505                           ;afficheur.c: 146:                 write_c_aff(cmd);
  1506   001404  5006               	movf	d2command@cmd^0,w,c
  1507   001406  EC58  F00B         	call	_write_c_aff
  1508   00140A                     
  1509                           ;afficheur.c: 148:                     res=1;
  1510   00140A  0E01               	movlw	1
  1511   00140C  6E08               	movwf	d2command@res^0,c
  1512   00140E                     l1658:
  1513                           
  1514                           ;afficheur.c: 152:     return res;
  1515   00140E  5008               	movf	d2command@res^0,w,c
  1516   001410  0012               	return		;funcret
  1517   001412                     __end_of_d2command:
  1518                           	callstack 0
  1519                           
  1520 ;; *************** function _d1command *****************
  1521 ;; Defined at:
  1522 ;;		line 107 in file "afficheur.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;  d1              1    wreg     unsigned char 
  1525 ;;  cmd             1    4[COMRAM] unsigned char 
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;  d1              1    5[COMRAM] unsigned char 
  1528 ;;  res             1    6[COMRAM] unsigned char 
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      unsigned char 
  1531 ;; Registers used:
  1532 ;;		wreg, status,2, status,0, cstack
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1538 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1539 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1541 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1542 ;;Total ram usage:        3 bytes
  1543 ;; Hardware stack levels used: 1
  1544 ;; Hardware stack levels required when called: 2
  1545 ;; This function calls:
  1546 ;;		_delai_us_char
  1547 ;;		_wait_status_ok
  1548 ;;		_write_c_aff
  1549 ;;		_write_d_aff
  1550 ;; This function is called by:
  1551 ;;		_initialisation_afficheur
  1552 ;;		_draw_char
  1553 ;;		_draw_string
  1554 ;;		_clear_text
  1555 ;;		_clear_graphics
  1556 ;;		_draw_hex8
  1557 ;;		_clear_cgram
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           	psect	text12
  1562   0014BA                     __ptext12:
  1563                           	callstack 0
  1564   0014BA                     _d1command:
  1565                           	callstack 27
  1566                           
  1567                           ;incstack = 0
  1568                           ;d1command@d1 stored from wreg
  1569   0014BA  6E06               	movwf	d1command@d1^0,c
  1570   0014BC                     
  1571                           ;afficheur.c: 107: unsigned char d1command(unsigned char d1, unsigned char cmd);afficheu
      +                          r.c: 108: {;afficheur.c: 109:     unsigned char res;;afficheur.c: 111:     res=0;
  1572   0014BC  0E00               	movlw	0
  1573   0014BE  6E07               	movwf	d1command@res^0,c
  1574   0014C0                     
  1575                           ;afficheur.c: 113:     if (wait_status_ok()==1)
  1576   0014C0  EC97  F009         	call	_wait_status_ok	;wreg free
  1577   0014C4  06E8               	decf	wreg,f,c
  1578   0014C6  A4D8               	btfss	status,2,c
  1579   0014C8  EF68  F00A         	goto	u611
  1580   0014CC  EF6A  F00A         	goto	u610
  1581   0014D0                     u611:
  1582   0014D0  EF82  F00A         	goto	l1632
  1583   0014D4                     u610:
  1584   0014D4                     
  1585                           ;afficheur.c: 114:     {;afficheur.c: 115:         delai_us_char(12);
  1586   0014D4  0E0C               	movlw	12
  1587   0014D6  ECFE  F00A         	call	_delai_us_char
  1588   0014DA                     
  1589                           ;afficheur.c: 116:         write_d_aff(d1);
  1590   0014DA  5006               	movf	d1command@d1^0,w,c
  1591   0014DC  EC4B  F00B         	call	_write_d_aff
  1592   0014E0                     
  1593                           ;afficheur.c: 117:         if (wait_status_ok()==1)
  1594   0014E0  EC97  F009         	call	_wait_status_ok	;wreg free
  1595   0014E4  06E8               	decf	wreg,f,c
  1596   0014E6  A4D8               	btfss	status,2,c
  1597   0014E8  EF78  F00A         	goto	u621
  1598   0014EC  EF7A  F00A         	goto	u620
  1599   0014F0                     u621:
  1600   0014F0  EF82  F00A         	goto	l1632
  1601   0014F4                     u620:
  1602   0014F4                     
  1603                           ;afficheur.c: 118:         {;afficheur.c: 119:             delai_us_char(12);
  1604   0014F4  0E0C               	movlw	12
  1605   0014F6  ECFE  F00A         	call	_delai_us_char
  1606   0014FA                     
  1607                           ;afficheur.c: 120:             write_c_aff(cmd);
  1608   0014FA  5005               	movf	d1command@cmd^0,w,c
  1609   0014FC  EC58  F00B         	call	_write_c_aff
  1610   001500                     
  1611                           ;afficheur.c: 122:                 res=1;
  1612   001500  0E01               	movlw	1
  1613   001502  6E07               	movwf	d1command@res^0,c
  1614   001504                     l1632:
  1615                           
  1616                           ;afficheur.c: 126:     return res;
  1617   001504  5007               	movf	d1command@res^0,w,c
  1618   001506  0012               	return		;funcret
  1619   001508                     __end_of_d1command:
  1620                           	callstack 0
  1621                           
  1622 ;; *************** function _write_d_aff *****************
  1623 ;; Defined at:
  1624 ;;		line 5 in file "afficheur.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;  data            1    wreg     unsigned char 
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;  data            1    0[COMRAM] unsigned char 
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  1    wreg      void 
  1631 ;; Registers used:
  1632 ;;		wreg, status,2
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1639 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1641 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1642 ;;Total ram usage:        1 bytes
  1643 ;; Hardware stack levels used: 1
  1644 ;; This function calls:
  1645 ;;		Nothing
  1646 ;; This function is called by:
  1647 ;;		_d1command
  1648 ;;		_d2command
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           	psect	text13
  1653   001696                     __ptext13:
  1654                           	callstack 0
  1655   001696                     _write_d_aff:
  1656                           	callstack 28
  1657                           
  1658                           ;incstack = 0
  1659                           ;write_d_aff@data stored from wreg
  1660   001696  6E01               	movwf	write_d_aff@data^0,c
  1661   001698                     
  1662                           ;afficheur.c: 5: void write_d_aff(unsigned char data);afficheur.c: 6: {;afficheur.c: 7: 
      +                              LATH=data;
  1663   001698  C001  FF90         	movff	write_d_aff@data,3984	;volatile
  1664   00169C                     
  1665                           ;afficheur.c: 8:     TRISH=0x00;
  1666   00169C  0E00               	movlw	0
  1667   00169E  6E99               	movwf	153,c	;volatile
  1668   0016A0                     
  1669                           ;afficheur.c: 9:     LATJbits.LATJ0=0;
  1670   0016A0  9091               	bcf	145,0,c	;volatile
  1671   0016A2                     
  1672                           ;afficheur.c: 10:     LATJbits.LATJ3=0;
  1673   0016A2  9691               	bcf	145,3,c	;volatile
  1674   0016A4                     
  1675                           ;afficheur.c: 11:     LATJbits.LATJ2=0;
  1676   0016A4  9491               	bcf	145,2,c	;volatile
  1677   0016A6                     
  1678                           ;afficheur.c: 12:     __nop();
  1679   0016A6  F000               	nop	
  1680   0016A8                     
  1681                           ;afficheur.c: 13:     __nop();
  1682   0016A8  F000               	nop	
  1683   0016AA                     
  1684                           ;afficheur.c: 14:     LATJbits.LATJ2=1;
  1685   0016AA  8491               	bsf	145,2,c	;volatile
  1686   0016AC                     
  1687                           ;afficheur.c: 15:     LATJbits.LATJ3=1;
  1688   0016AC  8691               	bsf	145,3,c	;volatile
  1689   0016AE  0012               	return		;funcret
  1690   0016B0                     __end_of_write_d_aff:
  1691                           	callstack 0
  1692                           
  1693 ;; *************** function _write_c_aff *****************
  1694 ;; Defined at:
  1695 ;;		line 18 in file "afficheur.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;  command         1    wreg     unsigned char 
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;  command         1    0[COMRAM] unsigned char 
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  1    wreg      void 
  1702 ;; Registers used:
  1703 ;;		wreg, status,2
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1710 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1712 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;Total ram usage:        1 bytes
  1714 ;; Hardware stack levels used: 1
  1715 ;; This function calls:
  1716 ;;		Nothing
  1717 ;; This function is called by:
  1718 ;;		_command
  1719 ;;		_d1command
  1720 ;;		_d2command
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           	psect	text14
  1725   0016B0                     __ptext14:
  1726                           	callstack 0
  1727   0016B0                     _write_c_aff:
  1728                           	callstack 28
  1729                           
  1730                           ;incstack = 0
  1731                           ;write_c_aff@command stored from wreg
  1732   0016B0  6E01               	movwf	write_c_aff@command^0,c
  1733   0016B2                     
  1734                           ;afficheur.c: 18: void write_c_aff(unsigned char command);afficheur.c: 19: {;afficheur.c
      +                          : 20:     LATH=command;
  1735   0016B2  C001  FF90         	movff	write_c_aff@command,3984	;volatile
  1736   0016B6                     
  1737                           ;afficheur.c: 21:     TRISH=0x00;
  1738   0016B6  0E00               	movlw	0
  1739   0016B8  6E99               	movwf	153,c	;volatile
  1740   0016BA                     
  1741                           ;afficheur.c: 22:     LATJbits.LATJ0=1;
  1742   0016BA  8091               	bsf	145,0,c	;volatile
  1743   0016BC                     
  1744                           ;afficheur.c: 23:     LATJbits.LATJ3=0;
  1745   0016BC  9691               	bcf	145,3,c	;volatile
  1746   0016BE                     
  1747                           ;afficheur.c: 24:     LATJbits.LATJ2=0;
  1748   0016BE  9491               	bcf	145,2,c	;volatile
  1749   0016C0                     
  1750                           ;afficheur.c: 25:     __nop();
  1751   0016C0  F000               	nop	
  1752   0016C2                     
  1753                           ;afficheur.c: 26:     __nop();
  1754   0016C2  F000               	nop	
  1755   0016C4                     
  1756                           ;afficheur.c: 27:     LATJbits.LATJ2=1;
  1757   0016C4  8491               	bsf	145,2,c	;volatile
  1758   0016C6                     
  1759                           ;afficheur.c: 28:     LATJbits.LATJ3=1;
  1760   0016C6  8691               	bsf	145,3,c	;volatile
  1761   0016C8  0012               	return		;funcret
  1762   0016CA                     __end_of_write_c_aff:
  1763                           	callstack 0
  1764                           
  1765 ;; *************** function _wait_status_ok *****************
  1766 ;; Defined at:
  1767 ;;		line 54 in file "afficheur.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;		None
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;  res             1    3[COMRAM] unsigned char 
  1772 ;;  status          1    2[COMRAM] unsigned char 
  1773 ;;  err             1    1[COMRAM] unsigned char 
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      unsigned char 
  1776 ;; Registers used:
  1777 ;;		wreg, status,2, status,0, cstack
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1784 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1786 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1787 ;;Total ram usage:        3 bytes
  1788 ;; Hardware stack levels used: 1
  1789 ;; Hardware stack levels required when called: 1
  1790 ;; This function calls:
  1791 ;;		_delai_us_char
  1792 ;; This function is called by:
  1793 ;;		_command
  1794 ;;		_d1command
  1795 ;;		_d2command
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	text15
  1800   00132E                     __ptext15:
  1801                           	callstack 0
  1802   00132E                     _wait_status_ok:
  1803                           	callstack 27
  1804   00132E                     
  1805                           ;afficheur.c: 56:     unsigned char err,res,status;;afficheur.c: 58:     err=0;
  1806   00132E  0E00               	movlw	0
  1807   001330  6E02               	movwf	wait_status_ok@err^0,c
  1808                           
  1809                           ;afficheur.c: 59:     res=2;
  1810   001332  0E02               	movlw	2
  1811   001334  6E04               	movwf	wait_status_ok@res^0,c
  1812                           
  1813                           ;afficheur.c: 60:     while (res==2)
  1814   001336  EFC7  F009         	goto	l1158
  1815   00133A                     l84:
  1816                           
  1817                           ;afficheur.c: 61:     {;afficheur.c: 62:         TRISH=0xFF;
  1818   00133A  6899               	setf	153,c	;volatile
  1819                           
  1820                           ;afficheur.c: 63:         LATJbits.LATJ0=1;
  1821   00133C  8091               	bsf	145,0,c	;volatile
  1822                           
  1823                           ;afficheur.c: 64:         LATJbits.LATJ3=0;
  1824   00133E  9691               	bcf	145,3,c	;volatile
  1825                           
  1826                           ;afficheur.c: 65:         LATJbits.LATJ1=0;
  1827   001340  9291               	bcf	145,1,c	;volatile
  1828                           
  1829                           ;afficheur.c: 66:         __nop();
  1830   001342  F000               	nop	
  1831                           
  1832                           ;afficheur.c: 67:         status=PORTH;
  1833   001344  CF87 F003          	movff	3975,wait_status_ok@status	;volatile
  1834                           
  1835                           ;afficheur.c: 68:         LATJbits.LATJ1=1;
  1836   001348  8291               	bsf	145,1,c	;volatile
  1837                           
  1838                           ;afficheur.c: 69:         LATJbits.LATJ3=1;
  1839   00134A  8691               	bsf	145,3,c	;volatile
  1840   00134C                     
  1841                           ;afficheur.c: 71:         status=(status&0x03);
  1842   00134C  5003               	movf	wait_status_ok@status^0,w,c
  1843   00134E  0B03               	andlw	3
  1844   001350  6E03               	movwf	wait_status_ok@status^0,c
  1845                           
  1846                           ;afficheur.c: 72:         if (status!=0x03)
  1847   001352  0E03               	movlw	3
  1848   001354  1803               	xorwf	wait_status_ok@status^0,w,c
  1849   001356  B4D8               	btfsc	status,2,c
  1850   001358  EFB0  F009         	goto	u21
  1851   00135C  EFB2  F009         	goto	u20
  1852   001360                     u21:
  1853   001360  EFC5  F009         	goto	l1156
  1854   001364                     u20:
  1855   001364                     
  1856                           ;afficheur.c: 73:         {;afficheur.c: 74:             err++;
  1857   001364  2A02               	incf	wait_status_ok@err^0,f,c
  1858   001366                     
  1859                           ;afficheur.c: 75:             delai_us_char(12);
  1860   001366  0E0C               	movlw	12
  1861   001368  ECFE  F00A         	call	_delai_us_char
  1862   00136C                     
  1863                           ;afficheur.c: 76:             if (err>=250)
  1864   00136C  0EF9               	movlw	249
  1865   00136E  6402               	cpfsgt	wait_status_ok@err^0,c
  1866   001370  EFBC  F009         	goto	u31
  1867   001374  EFBE  F009         	goto	u30
  1868   001378                     u31:
  1869   001378  EFC7  F009         	goto	l1158
  1870   00137C                     u30:
  1871   00137C                     
  1872                           ;afficheur.c: 77:             {;afficheur.c: 79:                 LATCbits.LATC2=0;LATCbi
      +                          ts.LATC1=1;LATGbits.LATG0=1;
  1873   00137C  948B               	bcf	139,2,c	;volatile
  1874   00137E  828B               	bsf	139,1,c	;volatile
  1875   001380  808F               	bsf	143,0,c	;volatile
  1876   001382                     
  1877                           ;afficheur.c: 80:                 res=0;
  1878   001382  0E00               	movlw	0
  1879   001384  6E04               	movwf	wait_status_ok@res^0,c
  1880   001386  EFC7  F009         	goto	l1158
  1881   00138A                     l1156:
  1882                           
  1883                           ;afficheur.c: 84:         {;afficheur.c: 85:             res=1;
  1884   00138A  0E01               	movlw	1
  1885   00138C  6E04               	movwf	wait_status_ok@res^0,c
  1886   00138E                     l1158:
  1887                           
  1888                           ;afficheur.c: 60:     while (res==2)
  1889   00138E  0E02               	movlw	2
  1890   001390  1804               	xorwf	wait_status_ok@res^0,w,c
  1891   001392  B4D8               	btfsc	status,2,c
  1892   001394  EFCE  F009         	goto	u41
  1893   001398  EFD0  F009         	goto	u40
  1894   00139C                     u41:
  1895   00139C  EF9D  F009         	goto	l84
  1896   0013A0                     u40:
  1897   0013A0                     
  1898                           ;afficheur.c: 88:     return res;
  1899   0013A0  5004               	movf	wait_status_ok@res^0,w,c
  1900   0013A2  0012               	return		;funcret
  1901   0013A4                     __end_of_wait_status_ok:
  1902                           	callstack 0
  1903                           
  1904 ;; *************** function _delai_us_char *****************
  1905 ;; Defined at:
  1906 ;;		line 155 in file "afficheur.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  ucdelai         1    wreg     unsigned char 
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;  ucdelai         1    0[COMRAM] unsigned char 
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      void 
  1913 ;; Registers used:
  1914 ;;		wreg, status,2, status,0
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1921 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1923 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1924 ;;Total ram usage:        1 bytes
  1925 ;; Hardware stack levels used: 1
  1926 ;; This function calls:
  1927 ;;		Nothing
  1928 ;; This function is called by:
  1929 ;;		_wait_status_ok
  1930 ;;		_command
  1931 ;;		_d1command
  1932 ;;		_d2command
  1933 ;;		_initialisation_afficheur
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           	psect	text16
  1938   0015FC                     __ptext16:
  1939                           	callstack 0
  1940   0015FC                     _delai_us_char:
  1941                           	callstack 29
  1942                           
  1943                           ;incstack = 0
  1944                           ;delai_us_char@ucdelai stored from wreg
  1945   0015FC  6E01               	movwf	delai_us_char@ucdelai^0,c
  1946   0015FE                     
  1947                           ;afficheur.c: 155: void delai_us_char(unsigned char ucdelai);afficheur.c: 156: {;affiche
      +                          ur.c: 158:     while (ucdelai>0)
  1948   0015FE  EF0C  F00B         	goto	l1104
  1949   001602                     l108:
  1950                           
  1951                           ;afficheur.c: 159:     {;afficheur.c: 160:         __nop();__nop();__nop();__nop();__nop
      +                          ();__nop();__nop();__nop();__nop();__nop();
  1952   001602  F000               	nop	
  1953   001604  F000               	nop	
  1954   001606  F000               	nop	
  1955   001608  F000               	nop	
  1956   00160A  F000               	nop	
  1957   00160C  F000               	nop	
  1958   00160E  F000               	nop	
  1959   001610  F000               	nop	
  1960   001612  F000               	nop	
  1961   001614  F000               	nop	
  1962   001616                     
  1963                           ;afficheur.c: 161:         ucdelai--;
  1964   001616  0601               	decf	delai_us_char@ucdelai^0,f,c
  1965   001618                     l1104:
  1966                           
  1967                           ;afficheur.c: 158:     while (ucdelai>0)
  1968   001618  5001               	movf	delai_us_char@ucdelai^0,w,c
  1969   00161A  A4D8               	btfss	status,2,c
  1970   00161C  EF12  F00B         	goto	u11
  1971   001620  EF14  F00B         	goto	u10
  1972   001624                     u11:
  1973   001624  EF01  F00B         	goto	l108
  1974   001628                     u10:
  1975   001628  0012               	return		;funcret
  1976   00162A                     __end_of_delai_us_char:
  1977                           	callstack 0
  1978                           
  1979 ;; *************** function _I2C_Write_Register *****************
  1980 ;; Defined at:
  1981 ;;		line 44 in file "I2C.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;  u8Address       1    wreg     unsigned char 
  1984 ;;  u8Register      1    0[COMRAM] unsigned char 
  1985 ;;  u8Value         1    1[COMRAM] unsigned char 
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;  u8Address       1    2[COMRAM] unsigned char 
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  1    wreg      void 
  1990 ;; Registers used:
  1991 ;;		wreg
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1997 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1998 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2000 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2001 ;;Total ram usage:        3 bytes
  2002 ;; Hardware stack levels used: 1
  2003 ;; This function calls:
  2004 ;;		Nothing
  2005 ;; This function is called by:
  2006 ;;		_main
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010                           	psect	text17
  2011   00122A                     __ptext17:
  2012                           	callstack 0
  2013   00122A                     _I2C_Write_Register:
  2014                           	callstack 30
  2015                           
  2016                           ;incstack = 0
  2017                           ;I2C_Write_Register@u8Address stored from wreg
  2018   00122A  6E03               	movwf	I2C_Write_Register@u8Address^0,c
  2019   00122C                     
  2020                           ;I2C.c: 46:     SSP1CON2bits.SEN = 1;
  2021   00122C  80C5               	bsf	197,0,c	;volatile
  2022   00122E                     l370:
  2023   00122E  B0C5               	btfsc	197,0,c	;volatile
  2024   001230  EF1C  F009         	goto	u781
  2025   001234  EF1E  F009         	goto	u780
  2026   001238                     u781:
  2027   001238  EF17  F009         	goto	l370
  2028   00123C                     u780:
  2029   00123C                     
  2030                           ;I2C.c: 49:     SSP1BUF = u8Address;
  2031   00123C  C003  FFC9         	movff	I2C_Write_Register@u8Address,4041	;volatile
  2032   001240                     
  2033                           ;I2C.c: 51:     PIR1bits.SSP1IF = 0;
  2034   001240  969E               	bcf	158,3,c	;volatile
  2035   001242                     l373:
  2036   001242  A69E               	btfss	158,3,c	;volatile
  2037   001244  EF26  F009         	goto	u791
  2038   001248  EF28  F009         	goto	u790
  2039   00124C                     u791:
  2040   00124C  EF21  F009         	goto	l373
  2041   001250                     u790:
  2042   001250                     l376:
  2043   001250  BCC5               	btfsc	197,6,c	;volatile
  2044   001252  EF2D  F009         	goto	u801
  2045   001256  EF2F  F009         	goto	u800
  2046   00125A                     u801:
  2047   00125A  EF28  F009         	goto	l376
  2048   00125E                     u800:
  2049   00125E                     
  2050                           ;I2C.c: 56:     SSP1BUF = u8Register;
  2051   00125E  C001  FFC9         	movff	I2C_Write_Register@u8Register,4041	;volatile
  2052                           
  2053                           ;I2C.c: 58:     PIR1bits.SSP1IF = 0;
  2054   001262  969E               	bcf	158,3,c	;volatile
  2055   001264                     l379:
  2056   001264  A69E               	btfss	158,3,c	;volatile
  2057   001266  EF37  F009         	goto	u811
  2058   00126A  EF39  F009         	goto	u810
  2059   00126E                     u811:
  2060   00126E  EF32  F009         	goto	l379
  2061   001272                     u810:
  2062   001272                     l382:
  2063   001272  BCC5               	btfsc	197,6,c	;volatile
  2064   001274  EF3E  F009         	goto	u821
  2065   001278  EF40  F009         	goto	u820
  2066   00127C                     u821:
  2067   00127C  EF39  F009         	goto	l382
  2068   001280                     u820:
  2069   001280                     
  2070                           ;I2C.c: 63:     SSP1BUF = u8Value;
  2071   001280  C002  FFC9         	movff	I2C_Write_Register@u8Value,4041	;volatile
  2072   001284                     l385:
  2073   001284  BCC5               	btfsc	197,6,c	;volatile
  2074   001286  EF47  F009         	goto	u831
  2075   00128A  EF49  F009         	goto	u830
  2076   00128E                     u831:
  2077   00128E  EF42  F009         	goto	l385
  2078   001292                     u830:
  2079   001292                     l388:
  2080   001292  A69E               	btfss	158,3,c	;volatile
  2081   001294  EF4E  F009         	goto	u841
  2082   001298  EF50  F009         	goto	u840
  2083   00129C                     u841:
  2084   00129C  EF49  F009         	goto	l388
  2085   0012A0                     u840:
  2086   0012A0                     
  2087                           ;I2C.c: 66:     PIR1bits.SSP1IF = 0;
  2088   0012A0  969E               	bcf	158,3,c	;volatile
  2089                           
  2090                           ;I2C.c: 68:     SSP1CON2bits.PEN = 1;
  2091   0012A2  84C5               	bsf	197,2,c	;volatile
  2092   0012A4                     l391:
  2093   0012A4  A69E               	btfss	158,3,c	;volatile
  2094   0012A6  EF57  F009         	goto	u851
  2095   0012AA  EF59  F009         	goto	u850
  2096   0012AE                     u851:
  2097   0012AE  EF52  F009         	goto	l391
  2098   0012B2                     u850:
  2099   0012B2                     
  2100                           ;I2C.c: 70:     PIR1bits.SSP1IF = 0;
  2101   0012B2  969E               	bcf	158,3,c	;volatile
  2102   0012B4  0012               	return		;funcret
  2103   0012B6                     __end_of_I2C_Write_Register:
  2104                           	callstack 0
  2105                           
  2106 ;; *************** function _I2C_Read *****************
  2107 ;; Defined at:
  2108 ;;		line 72 in file "I2C.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;  Address         1    wreg     unsigned char 
  2111 ;;  Register        1    0[COMRAM] unsigned char 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  Address         1    2[COMRAM] unsigned char 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  2    0[COMRAM] int 
  2116 ;; Registers used:
  2117 ;;		wreg, status,2, status,0
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2123 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2124 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2126 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2127 ;;Total ram usage:        3 bytes
  2128 ;; Hardware stack levels used: 1
  2129 ;; This function calls:
  2130 ;;		Nothing
  2131 ;; This function is called by:
  2132 ;;		_main
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           	psect	text18
  2137   0010F0                     __ptext18:
  2138                           	callstack 0
  2139   0010F0                     _I2C_Read:
  2140                           	callstack 30
  2141                           
  2142                           ;incstack = 0
  2143                           ;I2C_Read@Address stored from wreg
  2144   0010F0  6E03               	movwf	I2C_Read@Address^0,c
  2145   0010F2                     
  2146                           ;I2C.c: 73:     SSP1CON2bits.SEN = 1;
  2147   0010F2  80C5               	bsf	197,0,c	;volatile
  2148   0010F4                     l397:
  2149   0010F4  B0C5               	btfsc	197,0,c	;volatile
  2150   0010F6  EF7F  F008         	goto	u861
  2151   0010FA  EF81  F008         	goto	u860
  2152   0010FE                     u861:
  2153   0010FE  EF7A  F008         	goto	l397
  2154   001102                     u860:
  2155   001102                     
  2156                           ;I2C.c: 76:     SSP1BUF = (Address - 1);
  2157   001102  0403               	decf	I2C_Read@Address^0,w,c
  2158   001104  6EC9               	movwf	201,c	;volatile
  2159   001106                     
  2160                           ;I2C.c: 77:     PIR1bits.SSP1IF = 0;
  2161   001106  969E               	bcf	158,3,c	;volatile
  2162   001108                     l400:
  2163   001108  A69E               	btfss	158,3,c	;volatile
  2164   00110A  EF89  F008         	goto	u871
  2165   00110E  EF8B  F008         	goto	u870
  2166   001112                     u871:
  2167   001112  EF84  F008         	goto	l400
  2168   001116                     u870:
  2169   001116                     l403:
  2170   001116  BCC5               	btfsc	197,6,c	;volatile
  2171   001118  EF90  F008         	goto	u881
  2172   00111C  EF92  F008         	goto	u880
  2173   001120                     u881:
  2174   001120  EF8B  F008         	goto	l403
  2175   001124                     u880:
  2176   001124                     
  2177                           ;I2C.c: 81:     SSP1BUF = Register;
  2178   001124  C001  FFC9         	movff	I2C_Read@Register,4041	;volatile
  2179                           
  2180                           ;I2C.c: 82:     PIR1bits.SSP1IF = 0;
  2181   001128  969E               	bcf	158,3,c	;volatile
  2182   00112A                     l406:
  2183   00112A  A69E               	btfss	158,3,c	;volatile
  2184   00112C  EF9A  F008         	goto	u891
  2185   001130  EF9C  F008         	goto	u890
  2186   001134                     u891:
  2187   001134  EF95  F008         	goto	l406
  2188   001138                     u890:
  2189   001138                     l409:
  2190   001138  BCC5               	btfsc	197,6,c	;volatile
  2191   00113A  EFA1  F008         	goto	u901
  2192   00113E  EFA3  F008         	goto	u900
  2193   001142                     u901:
  2194   001142  EF9C  F008         	goto	l409
  2195   001146                     u900:
  2196   001146                     
  2197                           ;I2C.c: 86:     SSP1CON2bits.SEN = 1;
  2198   001146  80C5               	bsf	197,0,c	;volatile
  2199   001148                     l412:
  2200   001148  B0C5               	btfsc	197,0,c	;volatile
  2201   00114A  EFA9  F008         	goto	u911
  2202   00114E  EFAB  F008         	goto	u910
  2203   001152                     u911:
  2204   001152  EFA4  F008         	goto	l412
  2205   001156                     u910:
  2206   001156                     
  2207                           ;I2C.c: 89:     SSP1BUF = (Address - 1);
  2208   001156  0403               	decf	I2C_Read@Address^0,w,c
  2209   001158  6EC9               	movwf	201,c	;volatile
  2210   00115A                     
  2211                           ;I2C.c: 90:     PIR1bits.SSP1IF = 0;
  2212   00115A  969E               	bcf	158,3,c	;volatile
  2213   00115C                     l415:
  2214   00115C  A69E               	btfss	158,3,c	;volatile
  2215   00115E  EFB3  F008         	goto	u921
  2216   001162  EFB5  F008         	goto	u920
  2217   001166                     u921:
  2218   001166  EFAE  F008         	goto	l415
  2219   00116A                     u920:
  2220   00116A                     l418:
  2221   00116A  BCC5               	btfsc	197,6,c	;volatile
  2222   00116C  EFBA  F008         	goto	u931
  2223   001170  EFBC  F008         	goto	u930
  2224   001174                     u931:
  2225   001174  EFB5  F008         	goto	l418
  2226   001178                     u930:
  2227   001178                     
  2228                           ;I2C.c: 96:     SSP1CON2bits.PEN = 1;
  2229   001178  84C5               	bsf	197,2,c	;volatile
  2230   00117A                     l421:
  2231   00117A  A69E               	btfss	158,3,c	;volatile
  2232   00117C  EFC2  F008         	goto	u941
  2233   001180  EFC4  F008         	goto	u940
  2234   001184                     u941:
  2235   001184  EFBD  F008         	goto	l421
  2236   001188                     u940:
  2237   001188                     
  2238                           ;I2C.c: 98:     PIR1bits.SSP1IF = 0;
  2239   001188  969E               	bcf	158,3,c	;volatile
  2240                           
  2241                           ;I2C.c: 100:     return SSP1BUF;
  2242   00118A  CFC9 F001          	movff	4041,?_I2C_Read	;volatile
  2243   00118E  6A02               	clrf	(?_I2C_Read+1)^0,c
  2244   001190  0012               	return		;funcret
  2245   001192                     __end_of_I2C_Read:
  2246                           	callstack 0
  2247                           
  2248 ;; *************** function _I2C_Init *****************
  2249 ;; Defined at:
  2250 ;;		line 12 in file "I2C.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;		None
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;		None
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  1    wreg      void 
  2257 ;; Registers used:
  2258 ;;		wreg, status,2
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2268 ;;Total ram usage:        0 bytes
  2269 ;; Hardware stack levels used: 1
  2270 ;; This function calls:
  2271 ;;		Nothing
  2272 ;; This function is called by:
  2273 ;;		_main
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           	psect	text19
  2278   00167A                     __ptext19:
  2279                           	callstack 0
  2280   00167A                     _I2C_Init:
  2281                           	callstack 30
  2282   00167A                     
  2283                           ;I2C.c: 14:     SSP1STAT = 0x00;
  2284   00167A  0E00               	movlw	0
  2285   00167C  6EC7               	movwf	199,c	;volatile
  2286                           
  2287                           ;I2C.c: 15:     SSP1CON1 = 0x00;
  2288   00167E  0E00               	movlw	0
  2289   001680  6EC6               	movwf	198,c	;volatile
  2290   001682                     
  2291                           ;I2C.c: 16:     SSP1CON1bits.SSPEN = 1;
  2292   001682  8AC6               	bsf	198,5,c	;volatile
  2293                           
  2294                           ;I2C.c: 17:     SSP1CON1bits.SSPM = 0x08;
  2295   001684  50C6               	movf	198,w,c	;volatile
  2296   001686  0BF0               	andlw	-16
  2297   001688  0908               	iorlw	8
  2298   00168A  6EC6               	movwf	198,c	;volatile
  2299                           
  2300                           ;I2C.c: 18:     SSP1CON2 = 0x00;
  2301   00168C  0E00               	movlw	0
  2302   00168E  6EC5               	movwf	197,c	;volatile
  2303                           
  2304                           ;I2C.c: 19:     SSP1ADD = 0x77;
  2305   001690  0E77               	movlw	119
  2306   001692  6EC8               	movwf	200,c	;volatile
  2307   001694  0012               	return		;funcret
  2308   001696                     __end_of_I2C_Init:
  2309                           	callstack 0
  2310                           
  2311                           	psect	rparam
  2312   000000                     
  2313                           	psect	idloc
  2314                           
  2315                           ;Config register IDLOC0 @ 0x200000
  2316                           ;	unspecified, using default values
  2317   200000                     	org	2097152
  2318   200000  FF                 	db	255
  2319                           
  2320                           ;Config register IDLOC1 @ 0x200001
  2321                           ;	unspecified, using default values
  2322   200001                     	org	2097153
  2323   200001  FF                 	db	255
  2324                           
  2325                           ;Config register IDLOC2 @ 0x200002
  2326                           ;	unspecified, using default values
  2327   200002                     	org	2097154
  2328   200002  FF                 	db	255
  2329                           
  2330                           ;Config register IDLOC3 @ 0x200003
  2331                           ;	unspecified, using default values
  2332   200003                     	org	2097155
  2333   200003  FF                 	db	255
  2334                           
  2335                           ;Config register IDLOC4 @ 0x200004
  2336                           ;	unspecified, using default values
  2337   200004                     	org	2097156
  2338   200004  FF                 	db	255
  2339                           
  2340                           ;Config register IDLOC5 @ 0x200005
  2341                           ;	unspecified, using default values
  2342   200005                     	org	2097157
  2343   200005  FF                 	db	255
  2344                           
  2345                           ;Config register IDLOC6 @ 0x200006
  2346                           ;	unspecified, using default values
  2347   200006                     	org	2097158
  2348   200006  FF                 	db	255
  2349                           
  2350                           ;Config register IDLOC7 @ 0x200007
  2351                           ;	unspecified, using default values
  2352   200007                     	org	2097159
  2353   200007  FF                 	db	255
  2354                           
  2355                           	psect	config
  2356                           
  2357                           ;Config register CONFIG1L @ 0x300000
  2358                           ;	VREG Sleep Enable bit
  2359                           ;	RETEN = ON, Enabled
  2360                           ;	LF-INTOSC Low-power Enable bit
  2361                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
  2362                           ;	SOSC Power Selection and mode Configuration bits
  2363                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
  2364                           ;	Extended Instruction Set
  2365                           ;	XINST = OFF, Disabled
  2366   300000                     	org	3145728
  2367   300000  15                 	db	21
  2368                           
  2369                           ;Config register CONFIG1H @ 0x300001
  2370                           ;	Oscillator
  2371                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
  2372                           ;	PLL x4 Enable bit
  2373                           ;	PLLCFG = ON, Enabled
  2374                           ;	Fail-Safe Clock Monitor
  2375                           ;	FCMEN = OFF, Disabled
  2376                           ;	Internal External Oscillator Switch Over Mode
  2377                           ;	IESO = OFF, Disabled
  2378   300001                     	org	3145729
  2379   300001  13                 	db	19
  2380                           
  2381                           ;Config register CONFIG2L @ 0x300002
  2382                           ;	Power Up Timer
  2383                           ;	PWRTEN = OFF, Disabled
  2384                           ;	Brown Out Detect
  2385                           ;	BOREN = OFF, Disabled in hardware, SBOREN disabled
  2386                           ;	Brown-out Reset Voltage bits
  2387                           ;	BORV = 0, 3.0V
  2388                           ;	BORMV Power level
  2389                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
  2390   300002                     	org	3145730
  2391   300002  61                 	db	97
  2392                           
  2393                           ;Config register CONFIG2H @ 0x300003
  2394                           ;	Watchdog Timer
  2395                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
  2396                           ;	Watchdog Postscaler
  2397                           ;	WDTPS = 1, 1:1
  2398   300003                     	org	3145731
  2399   300003  00                 	db	0
  2400                           
  2401                           ;Config register CONFIG3L @ 0x300004
  2402                           ;	RTCC Clock Select
  2403                           ;	RTCOSC = INTOSCREF, RTCC uses INTRC
  2404                           ;	External Address Shift bit
  2405                           ;	EASHFT = OFF, Address Shifting disabled
  2406                           ;	Address Bus Width Select bits
  2407                           ;	ABW = MM, 8-bit address bus
  2408                           ;	Data Bus Width
  2409                           ;	BW = 8, 8-bit external bus mode
  2410                           ;	External Bus Wait
  2411                           ;	WAIT = ON, Enabled
  2412   300004                     	org	3145732
  2413   300004  30                 	db	48
  2414                           
  2415                           ;Config register CONFIG3H @ 0x300005
  2416                           ;	CCP2 Mux
  2417                           ;	CCP2MX = PORTBE, RE7-Microcontroller Mode/RB3-All other modes
  2418                           ;	ECCP Mux
  2419                           ;	ECCPMX = PORTH, Enhanced CCP1/3 [P1B/P1C/P3B/P3C] muxed with RH7/RH6/RH5/RH4
  2420                           ;	MSSP address masking
  2421                           ;	MSSPMSK = MSK5, 5 bit address masking mode
  2422                           ;	Master Clear Enable
  2423                           ;	MCLRE = ON, MCLR Enabled, RG5 Disabled
  2424   300005                     	org	3145733
  2425   300005  80                 	db	128
  2426                           
  2427                           ;Config register CONFIG4L @ 0x300006
  2428                           ;	Stack Overflow Reset
  2429                           ;	STVREN = ON, Enabled
  2430                           ;	Boot Block Size
  2431                           ;	BBSIZ = BB1K, 1K word Boot Block size
  2432                           ;	Background Debug
  2433                           ;	DEBUG = OFF, Disabled
  2434   300006                     	org	3145734
  2435   300006  81                 	db	129
  2436                           
  2437                           ; Padding undefined space
  2438   300007                     	org	3145735
  2439   300007  FF                 	db	255
  2440                           
  2441                           ;Config register CONFIG5L @ 0x300008
  2442                           ;	Code Protect 00800-03FFF
  2443                           ;	CP0 = OFF, Disabled
  2444                           ;	Code Protect 04000-07FFF
  2445                           ;	CP1 = OFF, Disabled
  2446                           ;	Code Protect 08000-0BFFF
  2447                           ;	CP2 = OFF, Disabled
  2448                           ;	Code Protect 0C000-0FFFF
  2449                           ;	CP3 = OFF, Disabled
  2450                           ;	Code Protect 10000-13FFF
  2451                           ;	CP4 = OFF, Disabled
  2452                           ;	Code Protect 14000-17FFF
  2453                           ;	CP5 = OFF, Disabled
  2454                           ;	Code Protect 18000-1BFFF
  2455                           ;	CP6 = OFF, Disabled
  2456                           ;	Code Protect 1C000-1FFFF
  2457                           ;	CP7 = OFF, Disabled
  2458   300008                     	org	3145736
  2459   300008  FF                 	db	255
  2460                           
  2461                           ;Config register CONFIG5H @ 0x300009
  2462                           ;	Code Protect Boot
  2463                           ;	CPB = OFF, Disabled
  2464                           ;	Data EE Read Protect
  2465                           ;	CPD = OFF, Disabled
  2466   300009                     	org	3145737
  2467   300009  C0                 	db	192
  2468                           
  2469                           ;Config register CONFIG6L @ 0x30000A
  2470                           ;	Table Write Protect 00800-03FFF
  2471                           ;	WRT0 = OFF, Disabled
  2472                           ;	Table Write Protect 04000-07FFF
  2473                           ;	WRT1 = OFF, Disabled
  2474                           ;	Table Write Protect 08000-0BFFF
  2475                           ;	WRT2 = OFF, Disabled
  2476                           ;	Table Write Protect 0C000-0FFFF
  2477                           ;	WRT3 = OFF, Disabled
  2478                           ;	Table Write Protect 10000-13FFF
  2479                           ;	WRT4 = OFF, Disabled
  2480                           ;	Table Write Protect 14000-17FFF
  2481                           ;	WRT5 = OFF, Disabled
  2482                           ;	Table Write Protect 18000-1BFFF
  2483                           ;	WRT6 = OFF, Disabled
  2484                           ;	Table Write Protect 1C000-1FFFF
  2485                           ;	WRT7 = OFF, Disabled
  2486   30000A                     	org	3145738
  2487   30000A  FF                 	db	255
  2488                           
  2489                           ;Config register CONFIG6H @ 0x30000B
  2490                           ;	Config. Write Protect
  2491                           ;	WRTC = OFF, Disabled
  2492                           ;	Table Write Protect Boot
  2493                           ;	WRTB = OFF, Disabled
  2494                           ;	Data EE Write Protect
  2495                           ;	WRTD = OFF, Disabled
  2496   30000B                     	org	3145739
  2497   30000B  E0                 	db	224
  2498                           
  2499                           ;Config register CONFIG7L @ 0x30000C
  2500                           ;	Table Read Protect 00800-03FFF
  2501                           ;	EBRT0 = OFF, Disabled
  2502                           ;	Table Read Protect 04000-07FFF
  2503                           ;	EBRT1 = OFF, Disabled
  2504                           ;	Table Read Protect 08000-0BFFF
  2505                           ;	EBRT2 = OFF, Disabled
  2506                           ;	Table Read Protect 0C000-0FFFF
  2507                           ;	EBRT3 = OFF, Disabled
  2508                           ;	Table Read Protect 10000-13FFF
  2509                           ;	EBRT4 = OFF, Disabled
  2510                           ;	Table Read Protect 14000-17FFF
  2511                           ;	EBRT5 = OFF, Disabled
  2512                           ;	Table Read Protect 18000-1BFFF
  2513                           ;	EBRT6 = OFF, Disabled
  2514                           ;	Table Read Protect 1C000-1FFFF
  2515                           ;	EBRT7 = OFF, Disabled
  2516   30000C                     	org	3145740
  2517   30000C  FF                 	db	255
  2518                           
  2519                           ;Config register CONFIG7H @ 0x30000D
  2520                           ;	Table Read Protect Boot
  2521                           ;	EBRTB = OFF, Disabled
  2522   30000D                     	org	3145741
  2523   30000D  40                 	db	64
  2524                           tosu	equ	0xFFF
  2525                           tosh	equ	0xFFE
  2526                           tosl	equ	0xFFD
  2527                           stkptr	equ	0xFFC
  2528                           pclatu	equ	0xFFB
  2529                           pclath	equ	0xFFA
  2530                           pcl	equ	0xFF9
  2531                           tblptru	equ	0xFF8
  2532                           tblptrh	equ	0xFF7
  2533                           tblptrl	equ	0xFF6
  2534                           tablat	equ	0xFF5
  2535                           prodh	equ	0xFF4
  2536                           prodl	equ	0xFF3
  2537                           indf0	equ	0xFEF
  2538                           postinc0	equ	0xFEE
  2539                           postdec0	equ	0xFED
  2540                           preinc0	equ	0xFEC
  2541                           plusw0	equ	0xFEB
  2542                           fsr0h	equ	0xFEA
  2543                           fsr0l	equ	0xFE9
  2544                           wreg	equ	0xFE8
  2545                           indf1	equ	0xFE7
  2546                           postinc1	equ	0xFE6
  2547                           postdec1	equ	0xFE5
  2548                           preinc1	equ	0xFE4
  2549                           plusw1	equ	0xFE3
  2550                           fsr1h	equ	0xFE2
  2551                           fsr1l	equ	0xFE1
  2552                           bsr	equ	0xFE0
  2553                           indf2	equ	0xFDF
  2554                           postinc2	equ	0xFDE
  2555                           postdec2	equ	0xFDD
  2556                           preinc2	equ	0xFDC
  2557                           plusw2	equ	0xFDB
  2558                           fsr2h	equ	0xFDA
  2559                           fsr2l	equ	0xFD9
  2560                           status	equ	0xFD8

Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      17
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    draw_string@tableau	PTR unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_goto_lico
    _initialisation_afficheur->_d2command
    _command->_wait_status_ok
    _goto_lico->_d2command
    _draw_string->_d1command
    _draw_char->_d1command
    _clear_text->_d2command
    _clear_graphics->_d2command
    _d2command->_wait_status_ok
    _d1command->_wait_status_ok
    _wait_status_ok->_delai_us_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   14681
                           _I2C_Init
                           _I2C_Read
                 _I2C_Write_Register
                     _clear_graphics
                         _clear_text
                           _delai_ms
                          _draw_char
                        _draw_string
                          _goto_lico
           _initialisation_afficheur
           _initialisation_des_ports
 ---------------------------------------------------------------------------------
 (1) _initialisation_des_ports                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialisation_afficheur                             1     1      0    3222
                                              8 COMRAM     1     1      0
                    _check_status_ok
                            _command
                          _d1command
                          _d2command
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (2) _command                                              2     2      0     140
                                              4 COMRAM     1     1      0
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
 ---------------------------------------------------------------------------------
 (2) _check_status_ok                                      1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _goto_lico                                            6     5      1    2511
                                              8 COMRAM     6     5      1
                          _d2command
 ---------------------------------------------------------------------------------
 (1) _draw_string                                          2     0      2     932
                                              7 COMRAM     2     0      2
                          _d1command
 ---------------------------------------------------------------------------------
 (1) _draw_char                                            1     1      0     902
                                              7 COMRAM     1     1      0
                          _d1command
 ---------------------------------------------------------------------------------
 (1) _delai_ms                                             6     6      0      30
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _clear_text                                           2     2      0    3058
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (1) _clear_graphics                                       2     2      0    3058
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (2) _d2command                                            4     2      2    2201
                                              4 COMRAM     4     2      2
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (2) _d1command                                            3     2      1     811
                                              4 COMRAM     3     2      1
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (3) _write_d_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _write_c_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _wait_status_ok                                       3     3      0      90
                                              1 COMRAM     3     3      0
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (2) _delai_us_char                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Write_Register                                   3     1      2     826
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Read                                             3     1      2     142
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _I2C_Read
   _I2C_Write_Register
   _clear_graphics
     _d1command
       _delai_us_char
       _wait_status_ok
         _delai_us_char
       _write_c_aff
       _write_d_aff
     _d2command
       _delai_us_char
       _wait_status_ok
       _write_c_aff
       _write_d_aff
   _clear_text
     _d1command
     _d2command
   _delai_ms
   _draw_char
     _d1command
   _draw_string
     _d1command
   _goto_lico
     _d2command
   _initialisation_afficheur
     _check_status_ok
     _command
       _delai_us_char
       _wait_status_ok
       _write_c_aff
     _d1command
     _d2command
     _delai_us_char
   _initialisation_des_ports

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      56        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      E      11       1       17.9%
BITBIGSFRhllhl      2C      0       0      52        0.0%
BITBIGSFRhlhlll     1C      0       0      48        0.0%
BITBIGSFRhhhl       1C      0       0      37        0.0%
BITBANK15           16      0       0      34        0.0%
BANK15              16      0       0      35        0.0%
BITBIGSFRhhlhl      15      0       0      39        0.0%
BITBIGSFRhllhh      11      0       0      51        0.0%
BITBIGSFRhhhh        B      0       0      36        0.0%
BITBIGSFRhhlhh       A      0       0      38        0.0%
BITBIGSFRhlhhh       9      0       0      41        0.0%
BITBIGSFRll          6      0       0      54        0.0%
BITBIGSFRhlhllh      3      0       0      47        0.0%
BITBIGSFRhlhlhh      3      0       0      43        0.0%
BITBIGSFRhlhllh      2      0       0      46        0.0%
BITBIGSFRhlhhl       2      0       0      42        0.0%
BITBIGSFRhlhlll      1      0       0      49        0.0%
BITBIGSFRhlhlhl      1      0       0      44        0.0%
BITBIGSFRhlhlhl      1      0       0      45        0.0%
BITBIGSFRlh          1      0       0      53        0.0%
BITBIGSFRhlhlll      1      0       0      50        0.0%
BITBIGSFRhhll        1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      11      55        0.0%
DATA                 0      0      11       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Jan 17 09:19:14 2023

          ?_initialisation_des_ports 0001                                   l72 16AE  
                                 l80 1586                                   l75 16C8  
                                 l84 133A                                   l93 1678  
                                 l79 1584                                   l89 13A2  
                                 l98 1506                                   u10 1628  
                                 u11 1624                                   u20 1364  
                                 u21 1360                                   u30 137C  
                                 u31 1378                                   u40 13A0  
                                 u41 139C                                   u50 1578  
                                 u51 1574                                   u60 166C  
                                 u61 1668                                  l110 1628  
                                l104 1410                                  l123 149C  
                                l131 1416                                  l108 1602  
                                l125 14B8                                  l117 10EE  
                                l134 1466                                  l400 1108  
                                l160 15C0                                  l153 130C  
                                l411 1146                                  l403 1116  
                                l155 132C                                  l420 1178  
                                l412 1148                                  l421 117A  
                                l405 1124                                  l165 15FA  
                                l406 112A                                  l423 1188  
                                l415 115C                                  l424 1190  
                                l409 1138                                  l418 116A  
                                l370 122E                                  l373 1242  
                                l285 154C                                  l390 12A0  
                                l382 1272                                  l367 1694  
                                l391 12A4                                  l384 1280  
                                l376 1250                                  l288 1654  
                                l393 12B2                                  l385 1284  
                                l394 12B4                                  l378 125E  
                                l379 1264                                  l388 1292  
                                l397 10F4                         ?_draw_string 0008  
                                u610 14D4                                  u290 154C  
                                u611 14D0                                  u291 1548  
                                u620 14F4                                  u700 14B8  
                                u621 14F0                                  u701 14B4  
                                u630 13BE                                  u710 1442  
                                u631 13BA                                  u711 143E  
                                u800 125E                                  u640 13DE  
                                u720 1466                                  u801 125A  
                                u641 13DA                                  u721 1462  
                                u810 1272                                  u650 13FE  
                                u730 12D0                                  u811 126E  
                                u651 13FA                                  u731 12CC  
                                u900 1146                                  u820 1280  
                                u740 12E4                                  u660 1052  
                                u901 1142                                  u821 127C  
                                u741 12E0                                  u661 104E  
                                u910 1156                                  u830 1292  
                                u750 132C                                  u670 1070  
                                u911 1152                                  u831 128E  
                                u751 1328                                  u671 106C  
                                u920 116A                                  u840 12A0  
                                u760 15C0                                  u680 147A  
                                u921 1166                                  u841 129C  
                                u761 15BC                                  u681 1476  
                                u930 1178                                  u850 12B2  
                                u770 15FA                                  u690 148E  
                                u931 1174                                  u851 12AE  
                                u771 15F6                                  u691 148A  
                                u940 1188                                  u860 1102  
                                u780 123C                                  u941 1184  
                                u861 10FE                                  u781 1238  
                                u870 1116                                  u790 1250  
                                u871 1112                                  u791 124C  
                                u880 1124                                  u881 1120  
                                u890 1138                                  u891 1134  
                                wreg 000FE8                                 l1100 15FE  
                               l1102 1616                                 l1110 16A0  
                               l1104 1618                                 l1120 16AA  
                               l1112 16A2                                 l1130 16BC  
                               l1122 16AC                                 l1114 16A4  
                               l1106 1698                                 l1140 16C6  
                               l1132 16BE                                 l1124 16B2  
                               l1116 16A6                                 l1108 169C  
                               l1150 136C                                 l1142 132E  
                               l1134 16C0                                 l1126 16B6  
                               l1118 16A8                                 l1160 13A0  
                               l1152 137C                                 l1144 134C  
                               l1136 16C2                                 l1128 16BA  
                               l1400 1524                                 l1154 1382  
                               l1146 1364                                 l1138 16C4  
                               l1402 1528                                 l1170 1580  
                               l1410 1640                                 l1148 1366  
                               l1156 138A                                 l1164 154E  
                               l1180 1672                                 l1420 164A  
                               l1412 1642                                 l1404 162A  
                               l1430 167A                                 l1158 138E  
                               l1166 1564                                 l1182 1678  
                               l1174 1658                                 l1422 164C  
                               l1414 1644                                 l1406 163C  
                               l1432 1682                                 l1168 1578  
                               l1176 1658                                 l1424 164E  
                               l1416 1646                                 l1408 163E  
                               l1178 166C                                 l1426 1650  
                               l1418 1648                                 l1620 14D4  
                               l1700 149E                                 l1428 1652  
                               l1630 1500                                 l1622 14DA  
                               l1702 1412                                 l1710 12B8  
                               l1624 14E0                                 l1632 1504  
                               l1616 14BC                                 l1640 13BE  
                               l1704 1418                                 l1720 12E8  
                               l1712 12C0                                 l1626 14F4  
                               l1618 14C0                                 l1650 13EA  
                               l1642 13C4                                 l1706 1442  
                               l1722 130E                                 l1714 12D0  
                               l1628 14FA                                 l1652 13FE  
                               l1644 13CA                                 l1636 13A6  
                               l1740 15D0                                 l1732 159E  
                               l1724 1588                                 l1396 150A  
                               l1708 1446                                 l1716 12D4  
                               l1654 1404                                 l1646 13DE  
                               l1638 13AA                                 l1750 15E6  
                               l1734 15A8                                 l1726 1596  
                               l1398 1516                                 l1718 12E4  
                               l1670 1028                                 l1662 100E  
                               l1656 140A                                 l1648 13E4  
                               l1736 15AC                                 l1680 1042  
                               l1672 102E                                 l1664 1022  
                               l1658 140E                                 l1746 15D8  
                               l1738 15C2                                 l1690 146A  
                               l1682 1052                                 l1674 1030  
                               l1666 1024                                 l1780 1240  
                               l1748 15E2                                 l1692 147A  
                               l1684 1058                                 l1676 103A  
                               l1668 1026                                 l1860 119E  
                               l1790 115A                                 l1782 10F2  
                               l1694 147E                                 l1678 103C  
                               l1686 105C                                 l1870 11CA  
                               l1862 11A2                                 l1854 1192  
                               l1784 1102                                 l1776 122C  
                               l1696 148E                                 l1688 1070  
                               l1880 1212                                 l1872 11D8  
                               l1864 11AC                                 l1856 1196  
                               l1786 1106                                 l1778 123C  
                               l1698 1492                                 l1882 1218  
                               l1874 11E6                                 l1866 11B8  
                               l1858 119A                                 l1788 1156  
                               l1876 11F4                                 l1868 11BC  
                               l1878 1202                                 STR_1 1001  
                               u1017 151C                                 _LATH 000F90  
                               _LATJ 000F91                                 _main 1192  
                   __end_of_I2C_Init 1696                     __end_of_I2C_Read 1192  
                               prodh 000FF4                                 prodl 000FF3  
                               start 0002                         ___param_bank 000000  
                   ??_wait_status_ok 0002               EEP_SPI_WriteByte@F6879 000F  
                              ?_main 0001                                _TX1IF 007CF4  
                              _PORTH 000F87                                _TRISH 000F99  
                              _TRISJ 000F9A                          _write_c_aff 16B0  
                        _write_d_aff 1696                      write_d_aff@data 0001  
                    __end_of_command 167A                                tablat 000FF5  
              __end_of_delai_us_char 162A                      _check_status_ok 154E  
                              status 000FD8          I2C_Write_Register@u8Address 0003  
                    __initialization 16CA                         __end_of_main 122A  
                             ??_main 000F                        __activetblptr 000003  
                             _ANCON0 000F25                               _ANCON1 000F24  
                             _ANCON2 000F23                               _MEMCON 000F26  
                             _RCSTA1 000FAB                               _RCSTA2 000F22  
                             _SPBRG1 000FAF                               _SPBRG2 000F1E  
                             _TXREG1 000FAD                               _TXREG2 000F1C  
                             _TXSTA1 000FAC                               _TXSTA2 000F21  
                   __end_of_delai_ms 154E                               isa$std 000001  
                          ??_command 0005                            ?_I2C_Init 0001  
                          ?_I2C_Read 0001                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8              __end_of_check_status_ok 1588  
                         __accesstop 0060              __end_of__initialization 16D0  
                      ___rparam_used 000001                       __pcstackCOMRAM 0001  
                  __end_of_d1command 1508                    __end_of_d2command 1412  
          I2C_Write_Register@u8Value 0002                           ??_I2C_Init 0001  
                         ??_I2C_Read 0003         I2C_Write_Register@u8Register 0001  
                   I2C_Read@Register 0001                       _clear_graphics 15C2  
                         _clear_text 1588                         ?_write_c_aff 0001  
                       ?_write_d_aff 0001                            ?_delai_ms 0001  
           _initialisation_afficheur 100E                              _SPBRGH1 000FD4  
                            _SPBRGH2 000F1F                              _SSP1ADD 000FC8  
                   ?_check_status_ok 0001                              _SSP1BUF 000FC9  
                            _SSP2BUF 000F6A                    wait_status_ok@err 0002  
                  wait_status_ok@res 0004               __end_of_clear_graphics 15FC  
           _initialisation_des_ports 162A                              __Hparam 0000  
                            __Lparam 0000                    __end_of_draw_char 14BA  
                       __psmallconst 1000                              __pcinit 16CA  
         __end_of_I2C_Write_Register 12B6                              __ramtop 1000  
                     draw_char@dccar 0008                              __ptext0 1192  
                            __ptext1 162A                              __ptext2 100E  
                            __ptext3 1656                              __ptext4 154E  
                            __ptext5 12B6                              __ptext6 1412  
                            __ptext7 1468                              __ptext8 1508  
                            __ptext9 1588                              _command 1656  
                 draw_string@tableau 0008                    __end_of_goto_lico 132E  
                         ??_delai_ms 0001                 end_of_initialization 16D0  
                    ?_clear_graphics 0001                          ?_clear_text 0001  
                       goto_lico@adr 000D                            _TRISAbits 000F92  
                          _TRISCbits 000F94                            _TRISDbits 000F95  
                          _TRISFbits 000F97                            _TRISGbits 000F98  
                  clear_graphics@add 0009                           command@cmd 0005  
                 check_status_ok@res 0001                            _d1command 14BA  
                          _d2command 13A4                        ??_draw_string 000A  
                start_initialization 16CA                        _delai_us_char 15FC  
         ??_initialisation_afficheur 0009                        clear_text@add 0009  
                         ?_d1command 0005                 delai_us_char@ucdelai 0001  
                         ?_d2command 0005                          __pbssCOMRAM 000F  
                    I2C_Read@Address 0003           ??_initialisation_des_ports 0001  
                __end_of_draw_string 1468                       ?_delai_us_char 0001  
                          _draw_char 1468                             ?_command 0001  
                     _wait_status_ok 132E                          __smallconst 1000  
                           _BAUDCON1 000F65                             _BAUDCON2 000F20  
                   goto_lico@colonne 0009                             _I2C_Init 167A  
                           _I2C_Read 10F0                          _PADCFG1bits 000F53  
                   ??_clear_graphics 0009                   _I2C_Write_Register 122A  
                 write_c_aff@command 0001                            _goto_lico 12B6  
                          delai_ms@j 0004                             _LATCbits 000F8B  
                           _LATFbits 000F8E                             _LATGbits 000F8F  
                           _LATJbits 000F91                  ?_I2C_Write_Register 0001  
                           _PIR1bits 000F9E                             _PIR2bits 000FA1  
                       ??_clear_text 0009                             _SSP1CON1 000FC6  
                           _SSP1CON2 000FC5                             _SSP2CON1 000F67  
                           _SSP1STAT 000FC7                             _SSP2STAT 000F68  
             __end_of_wait_status_ok 13A4                          ??_d1command 0006  
                         ?_draw_char 0001                          ??_d2command 0007  
               ??_I2C_Write_Register 0003                          _draw_string 1412  
                        _INTCON2bits 000FF1                      ??_delai_us_char 0001  
                 __end_of_clear_text 15C2                           ?_goto_lico 0009  
                           __Hrparam 0000                             __Lrparam 0000  
   __end_of_initialisation_afficheur 10F0                      ?_wait_status_ok 0001  
initialisation_afficheur@error_count 0009                             _delai_ms 1508  
   __end_of_initialisation_des_ports 1656                             __ptext10 15C2  
                           __ptext11 13A4                             __ptext12 14BA  
                           __ptext13 1696                             __ptext14 16B0  
                           __ptext15 132E                             __ptext16 15FC  
                           __ptext17 122A                             __ptext18 10F0  
                           __ptext19 167A                         _SSP1CON1bits 000FC6  
                       _SSP1CON2bits 000FC5                         _SSP2CON1bits 000F67  
                        delai_ms@val 0006                             isa$xinst 000000  
                  ??_check_status_ok 0001                          ??_draw_char 0008  
                      ??_write_c_aff 0001                        ??_write_d_aff 0001  
                        ??_goto_lico 000A                       goto_lico@ligne 000C  
                       d1command@cmd 0005                         d1command@res 0007  
                        d1command@d1 0006                  __end_of_write_c_aff 16CA  
                __end_of_write_d_aff 16B0                         d2command@cmd 0006  
          ?_initialisation_afficheur 0001                         d2command@res 0008  
               wait_status_ok@status 0003                          d2command@d1 0007  
                        d2command@d2 0005  
