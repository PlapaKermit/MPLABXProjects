

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Jan 11 10:15:42 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F87K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    32   000000                     
    33                           ; Generated 06/04/2022 GMT
    34                           ; 
    35                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F87K22 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67   000000                     _RCREG2	set	3869
    68   000000                     _RCSTA2	set	3874
    69   000000                     _SSP2CON1bits	set	3943
    70   000000                     _LATJ	set	3985
    71   000000                     _TX1IF	set	31988
    72   000000                     _TXREG2	set	3868
    73   000000                     _SPBRG2	set	3870
    74   000000                     _SPBRGH2	set	3871
    75   000000                     _BAUDCON2	set	3872
    76   000000                     _TXSTA2	set	3873
    77   000000                     _ANCON2	set	3875
    78   000000                     _ANCON1	set	3876
    79   000000                     _ANCON0	set	3877
    80   000000                     _MEMCON	set	3878
    81   000000                     _PORTH	set	3975
    82   000000                     _LATH	set	3984
    83   000000                     _TRISCbits	set	3988
    84   000000                     _TRISAbits	set	3986
    85   000000                     _LATJbits	set	3985
    86   000000                     _TRISH	set	3993
    87   000000                     _TXREG1	set	4013
    88   000000                     _INTCON2bits	set	4081
    89   000000                     _TRISJ	set	3994
    90   000000                     _RC1IF	set	31989
    91   000000                     _LATCbits	set	3979
    92   000000                     _LATFbits	set	3982
    93   000000                     _LATGbits	set	3983
    94   000000                     _PADCFG1bits	set	3923
    95   000000                     _TRISFbits	set	3991
    96   000000                     _TRISDbits	set	3989
    97   000000                     _TRISGbits	set	3992
    98   000000                     _BAUDCON1	set	3941
    99   000000                     _SSP2CON1	set	3943
   100   000000                     _SSP2STAT	set	3944
   101   000000                     _SPBRG1	set	4015
   102   000000                     _SPBRGH1	set	4052
   103   000000                     _RCREG1	set	4014
   104   000000                     _PIR2bits	set	4001
   105   000000                     _RCSTA1	set	4011
   106   000000                     _TXSTA1	set	4012
   107   000000                     _TX2IF	set	32036
   108                           
   109                           	psect	smallconst
   110   001000                     __psmallconst:
   111                           	callstack 0
   112   001000  00                 	db	0
   113   001001                     STR_2:
   114                           
   115                           ; BSR set to: 15
   116   001001  31                 	db	49	;'1'
   117   001002  00                 	db	0
   118   001003                     STR_1:
   119                           
   120                           ; BSR set to: 15
   121   001003  56                 	db	86	;'V'
   122   001004  00                 	db	0
   123   001005  00                 	db	0	; dummy byte at the end
   124   000000                     
   125                           ; #config settings
   126                           
   127                           	psect	cinit
   128   0017B2                     __pcinit:
   129                           	callstack 0
   130   0017B2                     start_initialization:
   131                           	callstack 0
   132   0017B2                     __initialization:
   133                           	callstack 0
   134   0017B2                     end_of_initialization:
   135                           	callstack 0
   136   0017B2                     __end_of__initialization:
   137                           	callstack 0
   138   0017B2  0100               	movlb	0
   139   0017B4  EF97  F009         	goto	_main	;jump to C main() function
   140                           
   141                           	psect	cstackCOMRAM
   142   000001                     __pcstackCOMRAM:
   143                           	callstack 0
   144   000001                     ?___awdiv:
   145                           	callstack 0
   146   000001                     ?___awmod:
   147                           	callstack 0
   148   000001                     write_d_aff@data:
   149                           	callstack 0
   150   000001                     write_c_aff@command:
   151                           	callstack 0
   152   000001                     check_status_ok@res:
   153                           	callstack 0
   154   000001                     delai_us_char@ucdelai:
   155                           	callstack 0
   156   000001                     ___awdiv@dividend:
   157                           	callstack 0
   158   000001                     ___awmod@dividend:
   159                           	callstack 0
   160                           
   161                           ; 2 bytes @ 0x0
   162   000001                     	ds	1
   163   000002                     wait_status_ok@err:
   164                           	callstack 0
   165                           
   166                           ; 1 bytes @ 0x1
   167   000002                     	ds	1
   168   000003                     wait_status_ok@status:
   169                           	callstack 0
   170   000003                     ___awdiv@divisor:
   171                           	callstack 0
   172   000003                     ___awmod@divisor:
   173                           	callstack 0
   174                           
   175                           ; 2 bytes @ 0x2
   176   000003                     	ds	1
   177   000004                     wait_status_ok@res:
   178                           	callstack 0
   179                           
   180                           ; 1 bytes @ 0x3
   181   000004                     	ds	1
   182   000005                     command@cmd:
   183                           	callstack 0
   184   000005                     d1command@cmd:
   185                           	callstack 0
   186   000005                     d2command@d2:
   187                           	callstack 0
   188   000005                     ___awdiv@counter:
   189                           	callstack 0
   190   000005                     ___awmod@counter:
   191                           	callstack 0
   192                           
   193                           ; 1 bytes @ 0x4
   194   000005                     	ds	1
   195   000006                     d1command@d1:
   196                           	callstack 0
   197   000006                     d2command@cmd:
   198                           	callstack 0
   199   000006                     ___awdiv@sign:
   200                           	callstack 0
   201   000006                     ___awmod@sign:
   202                           	callstack 0
   203                           
   204                           ; 1 bytes @ 0x5
   205   000006                     	ds	1
   206   000007                     d1command@res:
   207                           	callstack 0
   208   000007                     d2command@d1:
   209                           	callstack 0
   210   000007                     ___awdiv@quotient:
   211                           	callstack 0
   212                           
   213                           ; 2 bytes @ 0x6
   214   000007                     	ds	1
   215   000008                     d2command@res:
   216                           	callstack 0
   217   000008                     draw_char@dccar:
   218                           	callstack 0
   219   000008                     draw_string@tableau:
   220                           	callstack 0
   221                           
   222                           ; 2 bytes @ 0x7
   223   000008                     	ds	1
   224   000009                     initialisation_afficheur@error_count:
   225                           	callstack 0
   226   000009                     goto_lico@colonne:
   227                           	callstack 0
   228   000009                     plot1@y:
   229                           	callstack 0
   230   000009                     clear_text@add:
   231                           	callstack 0
   232   000009                     clear_graphics@add:
   233                           	callstack 0
   234                           
   235                           ; 2 bytes @ 0x8
   236   000009                     	ds	1
   237   00000A                     ??_goto_lico:
   238   00000A                     ??_plot1:
   239                           
   240                           ; 1 bytes @ 0x9
   241   00000A                     	ds	2
   242   00000C                     goto_lico@ligne:
   243                           	callstack 0
   244   00000C                     plot1@add:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0xB
   248   00000C                     	ds	1
   249   00000D                     goto_lico@adr:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0xC
   253   00000D                     	ds	1
   254   00000E                     plot1@x:
   255                           	callstack 0
   256                           
   257                           ; 1 bytes @ 0xD
   258   00000E                     	ds	1
   259   00000F                     main@j:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0xE
   263   00000F                     	ds	2
   264   000011                     main@i:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x10
   268   000011                     	ds	2
   269                           
   270 ;;
   271 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   272 ;;
   273 ;; *************** function _main *****************
   274 ;; Defined at:
   275 ;;		line 38 in file "main.c"
   276 ;; Parameters:    Size  Location     Type
   277 ;;		None
   278 ;; Auto vars:     Size  Location     Type
   279 ;;  i               2   16[COMRAM] int 
   280 ;;  j               2   14[COMRAM] int 
   281 ;; Return value:  Size  Location     Type
   282 ;;                  1    wreg      void 
   283 ;; Registers used:
   284 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   285 ;; Tracked objects:
   286 ;;		On entry : 0/0
   287 ;;		On exit  : 0/0
   288 ;;		Unchanged: 0/0
   289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   291 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   293 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   294 ;;Total ram usage:        4 bytes
   295 ;; Hardware stack levels required when called: 4
   296 ;; This function calls:
   297 ;;		_UART_init
   298 ;;		_clear_graphics
   299 ;;		_clear_text
   300 ;;		_draw_char
   301 ;;		_draw_string
   302 ;;		_goto_lico
   303 ;;		_initialisation_afficheur
   304 ;;		_initialisation_des_ports
   305 ;;		_plot1
   306 ;; This function is called by:
   307 ;;		Startup code after reset
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311                           	psect	text0
   312   00132E                     __ptext0:
   313                           	callstack 0
   314   00132E                     _main:
   315                           	callstack 27
   316   00132E                     
   317                           ;main.c: 40:     initialisation_des_ports();
   318   00132E  EC81  F00B         	call	_initialisation_des_ports	;wreg free
   319   001332                     
   320                           ;main.c: 41:     initialisation_afficheur();
   321   001332  EC03  F008         	call	_initialisation_afficheur	;wreg free
   322   001336                     
   323                           ;main.c: 42:     clear_text();
   324   001336  EC30  F00B         	call	_clear_text	;wreg free
   325   00133A                     
   326                           ;main.c: 43:     clear_graphics();
   327   00133A  EC4D  F00B         	call	_clear_graphics	;wreg free
   328   00133E                     
   329                           ;main.c: 44:     UART_init();
   330   00133E  EC97  F00B         	call	_UART_init	;wreg free
   331   001342                     
   332                           ;main.c: 46:     goto_lico(0,0);
   333   001342  0E00               	movlw	0
   334   001344  6E09               	movwf	goto_lico@colonne^0,c
   335   001346  0E00               	movlw	0
   336   001348  ECEA  F009         	call	_goto_lico
   337   00134C                     
   338                           ;main.c: 48:     draw_string("V");
   339   00134C  0E03               	movlw	low STR_1
   340   00134E  6E08               	movwf	draw_string@tableau^0,c
   341   001350  0E10               	movlw	high STR_1
   342   001352  6E09               	movwf	(draw_string@tableau+1)^0,c
   343   001354  EC98  F00A         	call	_draw_string	;wreg free
   344   001358                     
   345                           ;main.c: 49:     for (int i =10; i<80;i++) {
   346   001358  0E00               	movlw	0
   347   00135A  6E12               	movwf	(main@i+1)^0,c
   348   00135C  0E0A               	movlw	10
   349   00135E  6E11               	movwf	main@i^0,c
   350   001360                     l1768:
   351                           
   352                           ;main.c: 51:         plot1(i,i);
   353   001360  C011  F009         	movff	main@i,plot1@y
   354   001364  5011               	movf	main@i^0,w,c
   355   001366  EC74  F008         	call	_plot1
   356                           
   357                           ;main.c: 52:         plot1(i+2,i+2);
   358   00136A  5011               	movf	main@i^0,w,c
   359   00136C  0F02               	addlw	2
   360   00136E  6E09               	movwf	plot1@y^0,c
   361   001370  5011               	movf	main@i^0,w,c
   362   001372  0F02               	addlw	2
   363   001374  EC74  F008         	call	_plot1
   364   001378                     
   365                           ;main.c: 54:     }
   366   001378  4A11               	infsnz	main@i^0,f,c
   367   00137A  2A12               	incf	(main@i+1)^0,f,c
   368   00137C  BE12               	btfsc	(main@i+1)^0,7,c
   369   00137E  EFCA  F009         	goto	u811
   370   001382  5012               	movf	(main@i+1)^0,w,c
   371   001384  E109               	bnz	u810
   372   001386  0E50               	movlw	80
   373   001388  5C11               	subwf	main@i^0,w,c
   374   00138A  A0D8               	btfss	status,0,c
   375   00138C  EFCA  F009         	goto	u811
   376   001390  EFCC  F009         	goto	u810
   377   001394                     u811:
   378   001394  EFB0  F009         	goto	l1768
   379   001398                     u810:
   380   001398                     
   381                           ;main.c: 56:     int j=1;
   382   001398  0E00               	movlw	0
   383   00139A  6E10               	movwf	(main@j+1)^0,c
   384   00139C  0E01               	movlw	1
   385   00139E  6E0F               	movwf	main@j^0,c
   386                           
   387                           ;main.c: 57:     TXREG1 = "1";
   388   0013A0  0E01               	movlw	low (low STR_2)
   389   0013A2  6EAD               	movwf	173,c	;volatile
   390   0013A4                     l200:
   391   0013A4  AA9E               	btfss	3998,5,c	;volatile
   392   0013A6  EFD7  F009         	goto	u821
   393   0013AA  EFD9  F009         	goto	u820
   394   0013AE                     u821:
   395   0013AE  EFD2  F009         	goto	l200
   396   0013B2                     u820:
   397   0013B2                     
   398                           ;main.c: 63:         goto_lico(0,j);
   399   0013B2  C00F  F009         	movff	main@j,goto_lico@colonne
   400   0013B6  0E00               	movlw	0
   401   0013B8  ECEA  F009         	call	_goto_lico
   402   0013BC                     
   403                           ;main.c: 64:         draw_char(RCREG1);
   404   0013BC  50AE               	movf	174,w,c	;volatile
   405   0013BE  ECC3  F00A         	call	_draw_char
   406   0013C2                     
   407                           ;main.c: 65:         TXREG1 = RCREG1;
   408   0013C2  CFAE FFAD          	movff	4014,4013	;volatile
   409   0013C6                     
   410                           ;main.c: 66:         j++;
   411   0013C6  4A0F               	infsnz	main@j^0,f,c
   412   0013C8  2A10               	incf	(main@j+1)^0,f,c
   413   0013CA                     
   414                           ;main.c: 67:         RC1IF=0;
   415   0013CA  9A9E               	bcf	3998,5,c	;volatile
   416   0013CC  EFD2  F009         	goto	l200
   417   0013D0  EF00  F000         	goto	start
   418   0013D4                     __end_of_main:
   419                           	callstack 0
   420                           
   421 ;; *************** function _plot1 *****************
   422 ;; Defined at:
   423 ;;		line 321 in file "afficheur.c"
   424 ;; Parameters:    Size  Location     Type
   425 ;;  x               1    wreg     unsigned char 
   426 ;;  y               1    8[COMRAM] unsigned char 
   427 ;; Auto vars:     Size  Location     Type
   428 ;;  x               1   13[COMRAM] unsigned char 
   429 ;;  add             2   11[COMRAM] unsigned int 
   430 ;; Return value:  Size  Location     Type
   431 ;;                  1    wreg      void 
   432 ;; Registers used:
   433 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   434 ;; Tracked objects:
   435 ;;		On entry : 0/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   439 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   440 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   441 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   442 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   443 ;;Total ram usage:        6 bytes
   444 ;; Hardware stack levels used: 1
   445 ;; Hardware stack levels required when called: 3
   446 ;; This function calls:
   447 ;;		___awdiv
   448 ;;		___awmod
   449 ;;		_command
   450 ;;		_d2command
   451 ;; This function is called by:
   452 ;;		_main
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456                           	psect	text1
   457   0010E8                     __ptext1:
   458                           	callstack 0
   459   0010E8                     _plot1:
   460                           	callstack 27
   461                           
   462                           ;incstack = 0
   463                           ;plot1@x stored from wreg
   464   0010E8  6E0E               	movwf	plot1@x^0,c
   465   0010EA                     
   466                           ;afficheur.c: 321: void plot1(unsigned char x, unsigned char y);afficheur.c: 322: {;affi
      +                          cheur.c: 323:     unsigned int add;;afficheur.c: 325:     add=40*y+x/6;
   467   0010EA  C00E  F001         	movff	plot1@x,___awdiv@dividend
   468   0010EE  6A02               	clrf	(___awdiv@dividend+1)^0,c
   469   0010F0  0E00               	movlw	0
   470   0010F2  6E04               	movwf	(___awdiv@divisor+1)^0,c
   471   0010F4  0E06               	movlw	6
   472   0010F6  6E03               	movwf	___awdiv@divisor^0,c
   473   0010F8  ECDD  F008         	call	___awdiv	;wreg free
   474   0010FC  5009               	movf	plot1@y^0,w,c
   475   0010FE  0D28               	mullw	40
   476   001100  CFF3 F00A          	movff	prodl,??_plot1
   477   001104  CFF4 F00B          	movff	prodh,??_plot1+1
   478   001108  5001               	movf	?___awdiv^0,w,c
   479   00110A  240A               	addwf	??_plot1^0,w,c
   480   00110C  6E0C               	movwf	plot1@add^0,c
   481   00110E  5002               	movf	(?___awdiv+1)^0,w,c
   482   001110  200B               	addwfc	(??_plot1+1)^0,w,c
   483   001112  6E0D               	movwf	(plot1@add+1)^0,c
   484   001114                     
   485                           ;afficheur.c: 326:     d2command((char)(add&0xff),(char)(add>>8),0x24);
   486   001114  500D               	movf	(plot1@add+1)^0,w,c
   487   001116  6E05               	movwf	d2command@d2^0,c
   488   001118  0E24               	movlw	36
   489   00111A  6E06               	movwf	d2command@cmd^0,c
   490   00111C  500C               	movf	plot1@add^0,w,c
   491   00111E  EC61  F00A         	call	_d2command
   492                           
   493                           ;afficheur.c: 328:     switch(x%6)
   494   001122  EFB1  F008         	goto	l1688
   495   001126                     l1674:
   496   001126  0EFD               	movlw	253
   497   001128  ECAD  F00B         	call	_command
   498   00112C  EFDC  F008         	goto	l133
   499   001130                     l1676:
   500   001130  0EFC               	movlw	252
   501   001132  ECAD  F00B         	call	_command
   502   001136  EFDC  F008         	goto	l133
   503   00113A                     l1678:
   504   00113A  0EFB               	movlw	251
   505   00113C  ECAD  F00B         	call	_command
   506   001140  EFDC  F008         	goto	l133
   507   001144                     l1680:
   508   001144  0EFA               	movlw	250
   509   001146  ECAD  F00B         	call	_command
   510   00114A  EFDC  F008         	goto	l133
   511   00114E                     l1682:
   512   00114E  0EF9               	movlw	249
   513   001150  ECAD  F00B         	call	_command
   514   001154  EFDC  F008         	goto	l133
   515   001158                     l1684:
   516   001158  0EF8               	movlw	248
   517   00115A  ECAD  F00B         	call	_command
   518   00115E  EFDC  F008         	goto	l133
   519   001162                     l1688:
   520   001162  C00E  F001         	movff	plot1@x,___awmod@dividend
   521   001166  6A02               	clrf	(___awmod@dividend+1)^0,c
   522   001168  0E00               	movlw	0
   523   00116A  6E04               	movwf	(___awmod@divisor+1)^0,c
   524   00116C  0E06               	movlw	6
   525   00116E  6E03               	movwf	___awmod@divisor^0,c
   526   001170  EC3F  F009         	call	___awmod	;wreg free
   527                           
   528                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   529                           ; Switch size 1, requested type "simple"
   530                           ; Number of cases is 1, Range of values is 0 to 0
   531                           ; switch strategies available:
   532                           ; Name         Instructions Cycles
   533                           ; simple_byte            4     3 (average)
   534                           ;	Chosen strategy is simple_byte
   535   001174  5002               	movf	(?___awmod+1)^0,w,c
   536   001176  0A00               	xorlw	0	; case 0
   537   001178  B4D8               	btfsc	status,2,c
   538   00117A  EFC1  F008         	goto	l1806
   539   00117E  EFDC  F008         	goto	l133
   540   001182                     l1806:
   541                           
   542                           ; Switch size 1, requested type "simple"
   543                           ; Number of cases is 6, Range of values is 0 to 5
   544                           ; switch strategies available:
   545                           ; Name         Instructions Cycles
   546                           ; simple_byte           19    10 (average)
   547                           ;	Chosen strategy is simple_byte
   548   001182  5001               	movf	?___awmod^0,w,c
   549   001184  0A00               	xorlw	0	; case 0
   550   001186  B4D8               	btfsc	status,2,c
   551   001188  EF93  F008         	goto	l1674
   552   00118C  0A01               	xorlw	1	; case 1
   553   00118E  B4D8               	btfsc	status,2,c
   554   001190  EF98  F008         	goto	l1676
   555   001194  0A03               	xorlw	3	; case 2
   556   001196  B4D8               	btfsc	status,2,c
   557   001198  EF9D  F008         	goto	l1678
   558   00119C  0A01               	xorlw	1	; case 3
   559   00119E  B4D8               	btfsc	status,2,c
   560   0011A0  EFA2  F008         	goto	l1680
   561   0011A4  0A07               	xorlw	7	; case 4
   562   0011A6  B4D8               	btfsc	status,2,c
   563   0011A8  EFA7  F008         	goto	l1682
   564   0011AC  0A01               	xorlw	1	; case 5
   565   0011AE  B4D8               	btfsc	status,2,c
   566   0011B0  EFAC  F008         	goto	l1684
   567   0011B4  EFDC  F008         	goto	l133
   568   0011B8                     l133:
   569   0011B8  0012               	return		;funcret
   570   0011BA                     __end_of_plot1:
   571                           	callstack 0
   572                           
   573 ;; *************** function ___awmod *****************
   574 ;; Defined at:
   575 ;;		line 7 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/awmod.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;  dividend        2    0[COMRAM] int 
   578 ;;  divisor         2    2[COMRAM] int 
   579 ;; Auto vars:     Size  Location     Type
   580 ;;  sign            1    5[COMRAM] unsigned char 
   581 ;;  counter         1    4[COMRAM] unsigned char 
   582 ;; Return value:  Size  Location     Type
   583 ;;                  2    0[COMRAM] int 
   584 ;; Registers used:
   585 ;;		wreg, status,2, status,0
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   591 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   592 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   594 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   595 ;;Total ram usage:        6 bytes
   596 ;; Hardware stack levels used: 1
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_plot1
   601 ;;		_plot0
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605                           	psect	text2
   606   00127E                     __ptext2:
   607                           	callstack 0
   608   00127E                     ___awmod:
   609                           	callstack 29
   610   00127E  0E00               	movlw	0
   611   001280  6E06               	movwf	___awmod@sign^0,c
   612   001282  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
   613   001284  EF48  F009         	goto	u580
   614   001288  EF46  F009         	goto	u581
   615   00128C                     u581:
   616   00128C  EF4E  F009         	goto	l1552
   617   001290                     u580:
   618   001290  6C01               	negf	___awmod@dividend^0,c
   619   001292  1E02               	comf	(___awmod@dividend+1)^0,f,c
   620   001294  B0D8               	btfsc	status,0,c
   621   001296  2A02               	incf	(___awmod@dividend+1)^0,f,c
   622   001298  0E01               	movlw	1
   623   00129A  6E06               	movwf	___awmod@sign^0,c
   624   00129C                     l1552:
   625   00129C  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
   626   00129E  EF55  F009         	goto	u590
   627   0012A2  EF53  F009         	goto	u591
   628   0012A6                     u591:
   629   0012A6  EF59  F009         	goto	l1556
   630   0012AA                     u590:
   631   0012AA  6C03               	negf	___awmod@divisor^0,c
   632   0012AC  1E04               	comf	(___awmod@divisor+1)^0,f,c
   633   0012AE  B0D8               	btfsc	status,0,c
   634   0012B0  2A04               	incf	(___awmod@divisor+1)^0,f,c
   635   0012B2                     l1556:
   636   0012B2  5003               	movf	___awmod@divisor^0,w,c
   637   0012B4  1004               	iorwf	(___awmod@divisor+1)^0,w,c
   638   0012B6  B4D8               	btfsc	status,2,c
   639   0012B8  EF60  F009         	goto	u601
   640   0012BC  EF62  F009         	goto	u600
   641   0012C0                     u601:
   642   0012C0  EF86  F009         	goto	l1572
   643   0012C4                     u600:
   644   0012C4  0E01               	movlw	1
   645   0012C6  6E05               	movwf	___awmod@counter^0,c
   646   0012C8  EF6A  F009         	goto	l1562
   647   0012CC                     l1560:
   648   0012CC  90D8               	bcf	status,0,c
   649   0012CE  3603               	rlcf	___awmod@divisor^0,f,c
   650   0012D0  3604               	rlcf	(___awmod@divisor+1)^0,f,c
   651   0012D2  2A05               	incf	___awmod@counter^0,f,c
   652   0012D4                     l1562:
   653   0012D4  AE04               	btfss	(___awmod@divisor+1)^0,7,c
   654   0012D6  EF6F  F009         	goto	u611
   655   0012DA  EF71  F009         	goto	u610
   656   0012DE                     u611:
   657   0012DE  EF66  F009         	goto	l1560
   658   0012E2                     u610:
   659   0012E2                     l1564:
   660   0012E2  5003               	movf	___awmod@divisor^0,w,c
   661   0012E4  5C01               	subwf	___awmod@dividend^0,w,c
   662   0012E6  5004               	movf	(___awmod@divisor+1)^0,w,c
   663   0012E8  5802               	subwfb	(___awmod@dividend+1)^0,w,c
   664   0012EA  A0D8               	btfss	status,0,c
   665   0012EC  EF7A  F009         	goto	u621
   666   0012F0  EF7C  F009         	goto	u620
   667   0012F4                     u621:
   668   0012F4  EF80  F009         	goto	l1568
   669   0012F8                     u620:
   670   0012F8  5003               	movf	___awmod@divisor^0,w,c
   671   0012FA  5E01               	subwf	___awmod@dividend^0,f,c
   672   0012FC  5004               	movf	(___awmod@divisor+1)^0,w,c
   673   0012FE  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
   674   001300                     l1568:
   675   001300  90D8               	bcf	status,0,c
   676   001302  3204               	rrcf	(___awmod@divisor+1)^0,f,c
   677   001304  3203               	rrcf	___awmod@divisor^0,f,c
   678   001306  2E05               	decfsz	___awmod@counter^0,f,c
   679   001308  EF71  F009         	goto	l1564
   680   00130C                     l1572:
   681   00130C  5006               	movf	___awmod@sign^0,w,c
   682   00130E  B4D8               	btfsc	status,2,c
   683   001310  EF8C  F009         	goto	u631
   684   001314  EF8E  F009         	goto	u630
   685   001318                     u631:
   686   001318  EF92  F009         	goto	l1576
   687   00131C                     u630:
   688   00131C  6C01               	negf	___awmod@dividend^0,c
   689   00131E  1E02               	comf	(___awmod@dividend+1)^0,f,c
   690   001320  B0D8               	btfsc	status,0,c
   691   001322  2A02               	incf	(___awmod@dividend+1)^0,f,c
   692   001324                     l1576:
   693   001324  C001  F001         	movff	___awmod@dividend,?___awmod
   694   001328  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
   695   00132C  0012               	return		;funcret
   696   00132E                     __end_of___awmod:
   697                           	callstack 0
   698                           
   699 ;; *************** function ___awdiv *****************
   700 ;; Defined at:
   701 ;;		line 7 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/awdiv.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;  dividend        2    0[COMRAM] int 
   704 ;;  divisor         2    2[COMRAM] int 
   705 ;; Auto vars:     Size  Location     Type
   706 ;;  quotient        2    6[COMRAM] int 
   707 ;;  sign            1    5[COMRAM] unsigned char 
   708 ;;  counter         1    4[COMRAM] unsigned char 
   709 ;; Return value:  Size  Location     Type
   710 ;;                  2    0[COMRAM] int 
   711 ;; Registers used:
   712 ;;		wreg, status,2, status,0
   713 ;; Tracked objects:
   714 ;;		On entry : 0/0
   715 ;;		On exit  : 0/0
   716 ;;		Unchanged: 0/0
   717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   718 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   719 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   721 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   722 ;;Total ram usage:        8 bytes
   723 ;; Hardware stack levels used: 1
   724 ;; This function calls:
   725 ;;		Nothing
   726 ;; This function is called by:
   727 ;;		_plot1
   728 ;;		_plot0
   729 ;; This function uses a non-reentrant model
   730 ;;
   731                           
   732                           	psect	text3
   733   0011BA                     __ptext3:
   734                           	callstack 0
   735   0011BA                     ___awdiv:
   736                           	callstack 29
   737   0011BA  0E00               	movlw	0
   738   0011BC  6E06               	movwf	___awdiv@sign^0,c
   739   0011BE  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   740   0011C0  EFE6  F008         	goto	u520
   741   0011C4  EFE4  F008         	goto	u521
   742   0011C8                     u521:
   743   0011C8  EFEC  F008         	goto	l1508
   744   0011CC                     u520:
   745   0011CC  6C03               	negf	___awdiv@divisor^0,c
   746   0011CE  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   747   0011D0  B0D8               	btfsc	status,0,c
   748   0011D2  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   749   0011D4  0E01               	movlw	1
   750   0011D6  6E06               	movwf	___awdiv@sign^0,c
   751   0011D8                     l1508:
   752   0011D8  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   753   0011DA  EFF3  F008         	goto	u530
   754   0011DE  EFF1  F008         	goto	u531
   755   0011E2                     u531:
   756   0011E2  EFF9  F008         	goto	l1514
   757   0011E6                     u530:
   758   0011E6  6C01               	negf	___awdiv@dividend^0,c
   759   0011E8  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   760   0011EA  B0D8               	btfsc	status,0,c
   761   0011EC  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   762   0011EE  0E01               	movlw	1
   763   0011F0  1A06               	xorwf	___awdiv@sign^0,f,c
   764   0011F2                     l1514:
   765   0011F2  0E00               	movlw	0
   766   0011F4  6E08               	movwf	(___awdiv@quotient+1)^0,c
   767   0011F6  0E00               	movlw	0
   768   0011F8  6E07               	movwf	___awdiv@quotient^0,c
   769   0011FA  5003               	movf	___awdiv@divisor^0,w,c
   770   0011FC  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   771   0011FE  B4D8               	btfsc	status,2,c
   772   001200  EF04  F009         	goto	u541
   773   001204  EF06  F009         	goto	u540
   774   001208                     u541:
   775   001208  EF2E  F009         	goto	l1536
   776   00120C                     u540:
   777   00120C  0E01               	movlw	1
   778   00120E  6E05               	movwf	___awdiv@counter^0,c
   779   001210  EF0E  F009         	goto	l1522
   780   001214                     l1520:
   781   001214  90D8               	bcf	status,0,c
   782   001216  3603               	rlcf	___awdiv@divisor^0,f,c
   783   001218  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   784   00121A  2A05               	incf	___awdiv@counter^0,f,c
   785   00121C                     l1522:
   786   00121C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   787   00121E  EF13  F009         	goto	u551
   788   001222  EF15  F009         	goto	u550
   789   001226                     u551:
   790   001226  EF0A  F009         	goto	l1520
   791   00122A                     u550:
   792   00122A                     l1524:
   793   00122A  90D8               	bcf	status,0,c
   794   00122C  3607               	rlcf	___awdiv@quotient^0,f,c
   795   00122E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   796   001230  5003               	movf	___awdiv@divisor^0,w,c
   797   001232  5C01               	subwf	___awdiv@dividend^0,w,c
   798   001234  5004               	movf	(___awdiv@divisor+1)^0,w,c
   799   001236  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   800   001238  A0D8               	btfss	status,0,c
   801   00123A  EF21  F009         	goto	u561
   802   00123E  EF23  F009         	goto	u560
   803   001242                     u561:
   804   001242  EF28  F009         	goto	l1532
   805   001246                     u560:
   806   001246  5003               	movf	___awdiv@divisor^0,w,c
   807   001248  5E01               	subwf	___awdiv@dividend^0,f,c
   808   00124A  5004               	movf	(___awdiv@divisor+1)^0,w,c
   809   00124C  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   810   00124E  8007               	bsf	___awdiv@quotient^0,0,c
   811   001250                     l1532:
   812   001250  90D8               	bcf	status,0,c
   813   001252  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   814   001254  3203               	rrcf	___awdiv@divisor^0,f,c
   815   001256  2E05               	decfsz	___awdiv@counter^0,f,c
   816   001258  EF15  F009         	goto	l1524
   817   00125C                     l1536:
   818   00125C  5006               	movf	___awdiv@sign^0,w,c
   819   00125E  B4D8               	btfsc	status,2,c
   820   001260  EF34  F009         	goto	u571
   821   001264  EF36  F009         	goto	u570
   822   001268                     u571:
   823   001268  EF3A  F009         	goto	l1540
   824   00126C                     u570:
   825   00126C  6C07               	negf	___awdiv@quotient^0,c
   826   00126E  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   827   001270  B0D8               	btfsc	status,0,c
   828   001272  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   829   001274                     l1540:
   830   001274  C007  F001         	movff	___awdiv@quotient,?___awdiv
   831   001278  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   832   00127C  0012               	return		;funcret
   833   00127E                     __end_of___awdiv:
   834                           	callstack 0
   835                           
   836 ;; *************** function _initialisation_des_ports *****************
   837 ;; Defined at:
   838 ;;		line 5 in file "main.c"
   839 ;; Parameters:    Size  Location     Type
   840 ;;		None
   841 ;; Auto vars:     Size  Location     Type
   842 ;;		None
   843 ;; Return value:  Size  Location     Type
   844 ;;                  1    wreg      void 
   845 ;; Registers used:
   846 ;;		wreg, status,2
   847 ;; Tracked objects:
   848 ;;		On entry : 0/0
   849 ;;		On exit  : 0/0
   850 ;;		Unchanged: 0/0
   851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   856 ;;Total ram usage:        0 bytes
   857 ;; Hardware stack levels used: 1
   858 ;; This function calls:
   859 ;;		Nothing
   860 ;; This function is called by:
   861 ;;		_main
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           	psect	text4
   866   001702                     __ptext4:
   867                           	callstack 0
   868   001702                     _initialisation_des_ports:
   869                           	callstack 30
   870   001702                     
   871                           ;main.c: 8:     MEMCON=0xA0;
   872   001702  0EA0               	movlw	160
   873   001704  010F               	movlb	15	; () banked
   874   001706  6F26               	movwf	38,b	;volatile
   875                           
   876                           ;main.c: 11:     ANCON0=0x03;
   877   001708  0E03               	movlw	3
   878   00170A  6F25               	movwf	37,b	;volatile
   879                           
   880                           ;main.c: 12:     ANCON1=0x08;
   881   00170C  0E08               	movlw	8
   882   00170E  6F24               	movwf	36,b	;volatile
   883                           
   884                           ;main.c: 13:     ANCON2=0x00;
   885   001710  0E00               	movlw	0
   886   001712  6F23               	movwf	35,b	;volatile
   887   001714                     
   888                           ; BSR set to: 15
   889                           ;main.c: 17:     LATCbits.LATC2=0;
   890   001714  948B               	bcf	139,2,c	;volatile
   891   001716                     
   892                           ; BSR set to: 15
   893                           ;main.c: 18:     LATCbits.LATC1=0;
   894   001716  928B               	bcf	139,1,c	;volatile
   895   001718                     
   896                           ; BSR set to: 15
   897                           ;main.c: 19:     LATGbits.LATG0=0;
   898   001718  908F               	bcf	143,0,c	;volatile
   899   00171A                     
   900                           ; BSR set to: 15
   901                           ;main.c: 22:     TRISAbits.TRISA2=0;
   902   00171A  9492               	bcf	146,2,c	;volatile
   903   00171C                     
   904                           ; BSR set to: 15
   905                           ;main.c: 23:     TRISAbits.TRISA3=0;
   906   00171C  9692               	bcf	146,3,c	;volatile
   907   00171E                     
   908                           ; BSR set to: 15
   909                           ;main.c: 24:     TRISAbits.TRISA4=0;
   910   00171E  9892               	bcf	146,4,c	;volatile
   911   001720                     
   912                           ; BSR set to: 15
   913                           ;main.c: 25:     TRISAbits.TRISA5=0;
   914   001720  9A92               	bcf	146,5,c	;volatile
   915   001722                     
   916                           ; BSR set to: 15
   917                           ;main.c: 26:     TRISCbits.TRISC2=0;
   918   001722  9494               	bcf	148,2,c	;volatile
   919   001724                     
   920                           ; BSR set to: 15
   921                           ;main.c: 27:     TRISCbits.TRISC1=0;
   922   001724  9294               	bcf	148,1,c	;volatile
   923   001726                     
   924                           ; BSR set to: 15
   925                           ;main.c: 28:     TRISGbits.TRISG0=0;
   926   001726  9098               	bcf	152,0,c	;volatile
   927   001728                     
   928                           ; BSR set to: 15
   929                           ;main.c: 32:     INTCON2bits.RBPU=0;
   930   001728  9EF1               	bcf	241,7,c	;volatile
   931   00172A                     
   932                           ; BSR set to: 15
   933                           ;main.c: 33:     PADCFG1bits.REPU=1;
   934   00172A  8D53               	bsf	83,6,b	;volatile
   935   00172C                     
   936                           ; BSR set to: 15
   937   00172C  0012               	return		;funcret
   938   00172E                     __end_of_initialisation_des_ports:
   939                           	callstack 0
   940                           
   941 ;; *************** function _initialisation_afficheur *****************
   942 ;; Defined at:
   943 ;;		line 165 in file "afficheur.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;		None
   946 ;; Auto vars:     Size  Location     Type
   947 ;;  error_count     1    8[COMRAM] unsigned char 
   948 ;; Return value:  Size  Location     Type
   949 ;;                  1    wreg      void 
   950 ;; Registers used:
   951 ;;		wreg, status,2, status,0, cstack
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   958 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   960 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   961 ;;Total ram usage:        1 bytes
   962 ;; Hardware stack levels used: 1
   963 ;; Hardware stack levels required when called: 3
   964 ;; This function calls:
   965 ;;		_check_status_ok
   966 ;;		_command
   967 ;;		_d1command
   968 ;;		_d2command
   969 ;;		_delai_us_char
   970 ;; This function is called by:
   971 ;;		_main
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           	psect	text5
   976   001006                     __ptext5:
   977                           	callstack 0
   978   001006                     _initialisation_afficheur:
   979                           	callstack 27
   980   001006                     
   981                           ;afficheur.c: 168:     unsigned char error_count;;afficheur.c: 170:     error_count=0;
   982   001006  0E00               	movlw	0
   983   001008  6E09               	movwf	initialisation_afficheur@error_count^0,c
   984                           
   985                           ;afficheur.c: 173:     LATH=0;
   986   00100A  0E00               	movlw	0
   987   00100C  6E90               	movwf	144,c	;volatile
   988                           
   989                           ;afficheur.c: 174:     LATJ=0x1F;
   990   00100E  0E1F               	movlw	31
   991   001010  6E91               	movwf	145,c	;volatile
   992                           
   993                           ;afficheur.c: 177:     TRISH=0;
   994   001012  0E00               	movlw	0
   995   001014  6E99               	movwf	153,c	;volatile
   996                           
   997                           ;afficheur.c: 178:     TRISJ=0;
   998   001016  0E00               	movlw	0
   999   001018  6E9A               	movwf	154,c	;volatile
  1000   00101A                     
  1001                           ;afficheur.c: 181:     LATJbits.LATJ5=0;
  1002   00101A  9A91               	bcf	145,5,c	;volatile
  1003   00101C                     
  1004                           ;afficheur.c: 182:     LATJbits.LATJ6=1;
  1005   00101C  8C91               	bsf	145,6,c	;volatile
  1006   00101E                     
  1007                           ;afficheur.c: 185:     LATJbits.LATJ4=0;
  1008   00101E  9891               	bcf	145,4,c	;volatile
  1009   001020                     
  1010                           ;afficheur.c: 186:     delai_us_char(4);
  1011   001020  0E04               	movlw	4
  1012   001022  EC6A  F00B         	call	_delai_us_char
  1013   001026                     
  1014                           ;afficheur.c: 187:     LATJbits.LATJ4=1;
  1015   001026  8891               	bsf	145,4,c	;volatile
  1016   001028                     
  1017                           ;afficheur.c: 191:     delai_us_char(12);
  1018   001028  0E0C               	movlw	12
  1019   00102A  EC6A  F00B         	call	_delai_us_char
  1020                           
  1021                           ;afficheur.c: 192:     while(check_status_ok()==00)
  1022   00102E  EF2A  F008         	goto	l1604
  1023   001032                     l1594:
  1024                           
  1025                           ;afficheur.c: 193:     {;afficheur.c: 194:         error_count++;
  1026   001032  2A09               	incf	initialisation_afficheur@error_count^0,f,c
  1027   001034                     
  1028                           ;afficheur.c: 195:         delai_us_char(12);
  1029   001034  0E0C               	movlw	12
  1030   001036  EC6A  F00B         	call	_delai_us_char
  1031   00103A                     
  1032                           ;afficheur.c: 196:         if (error_count>200)
  1033   00103A  0EC8               	movlw	200
  1034   00103C  6409               	cpfsgt	initialisation_afficheur@error_count^0,c
  1035   00103E  EF23  F008         	goto	u641
  1036   001042  EF25  F008         	goto	u640
  1037   001046                     u641:
  1038   001046  EF2A  F008         	goto	l1604
  1039   00104A                     u640:
  1040   00104A                     
  1041                           ;afficheur.c: 197:         {;afficheur.c: 198:             LATCbits.LATC1=1;LATGbits.LAT
      +                          G0=1;LATCbits.LATC2=0;
  1042   00104A  828B               	bsf	139,1,c	;volatile
  1043   00104C  808F               	bsf	143,0,c	;volatile
  1044   00104E  948B               	bcf	139,2,c	;volatile
  1045   001050                     
  1046                           ;afficheur.c: 201:             error_count=0;
  1047   001050  0E00               	movlw	0
  1048   001052  6E09               	movwf	initialisation_afficheur@error_count^0,c
  1049   001054                     l1604:
  1050                           
  1051                           ;afficheur.c: 192:     while(check_status_ok()==00)
  1052   001054  EC13  F00B         	call	_check_status_ok	;wreg free
  1053   001058  0900               	iorlw	0
  1054   00105A  B4D8               	btfsc	status,2,c
  1055   00105C  EF32  F008         	goto	u651
  1056   001060  EF34  F008         	goto	u650
  1057   001064                     u651:
  1058   001064  EF19  F008         	goto	l1594
  1059   001068                     u650:
  1060   001068                     
  1061                           ;afficheur.c: 206:     d2command(39,15,0x21);
  1062   001068  0E0F               	movlw	15
  1063   00106A  6E05               	movwf	d2command@d2^0,c
  1064   00106C  0E21               	movlw	33
  1065   00106E  6E06               	movwf	d2command@cmd^0,c
  1066   001070  0E27               	movlw	39
  1067   001072  EC61  F00A         	call	_d2command
  1068                           
  1069                           ;afficheur.c: 207:     d2command(0,0,0x22);
  1070   001076  0E00               	movlw	0
  1071   001078  6E05               	movwf	d2command@d2^0,c
  1072   00107A  0E22               	movlw	34
  1073   00107C  6E06               	movwf	d2command@cmd^0,c
  1074   00107E  0E00               	movlw	0
  1075   001080  EC61  F00A         	call	_d2command
  1076                           
  1077                           ;afficheur.c: 208:     d2command(0,0,0x24);
  1078   001084  0E00               	movlw	0
  1079   001086  6E05               	movwf	d2command@d2^0,c
  1080   001088  0E24               	movlw	36
  1081   00108A  6E06               	movwf	d2command@cmd^0,c
  1082   00108C  0E00               	movlw	0
  1083   00108E  EC61  F00A         	call	_d2command
  1084                           
  1085                           ;afficheur.c: 211:     d2command(0,0x7B,0x40);
  1086   001092  0E7B               	movlw	123
  1087   001094  6E05               	movwf	d2command@d2^0,c
  1088   001096  0E40               	movlw	64
  1089   001098  6E06               	movwf	d2command@cmd^0,c
  1090   00109A  0E00               	movlw	0
  1091   00109C  EC61  F00A         	call	_d2command
  1092                           
  1093                           ;afficheur.c: 212:     d2command(40,0,0x41);
  1094   0010A0  0E00               	movlw	0
  1095   0010A2  6E05               	movwf	d2command@d2^0,c
  1096   0010A4  0E41               	movlw	65
  1097   0010A6  6E06               	movwf	d2command@cmd^0,c
  1098   0010A8  0E28               	movlw	40
  1099   0010AA  EC61  F00A         	call	_d2command
  1100                           
  1101                           ;afficheur.c: 213:     d2command(0x00,0x80,0x42);
  1102   0010AE  0E80               	movlw	128
  1103   0010B0  6E05               	movwf	d2command@d2^0,c
  1104   0010B2  0E42               	movlw	66
  1105   0010B4  6E06               	movwf	d2command@cmd^0,c
  1106   0010B6  0E00               	movlw	0
  1107   0010B8  EC61  F00A         	call	_d2command
  1108                           
  1109                           ;afficheur.c: 214:     d2command(40,0,0x43);
  1110   0010BC  0E00               	movlw	0
  1111   0010BE  6E05               	movwf	d2command@d2^0,c
  1112   0010C0  0E43               	movlw	67
  1113   0010C2  6E06               	movwf	d2command@cmd^0,c
  1114   0010C4  0E28               	movlw	40
  1115   0010C6  EC61  F00A         	call	_d2command
  1116                           
  1117                           ;afficheur.c: 217:     command(0x80);
  1118   0010CA  0E80               	movlw	128
  1119   0010CC  ECAD  F00B         	call	_command
  1120                           
  1121                           ;afficheur.c: 220:     command(0x9C);
  1122   0010D0  0E9C               	movlw	156
  1123   0010D2  ECAD  F00B         	call	_command
  1124                           
  1125                           ;afficheur.c: 223:     command(0xA0);
  1126   0010D6  0EA0               	movlw	160
  1127   0010D8  ECAD  F00B         	call	_command
  1128                           
  1129                           ;afficheur.c: 226:     d1command(0x02,0x70);
  1130   0010DC  0E70               	movlw	112
  1131   0010DE  6E05               	movwf	d1command@cmd^0,c
  1132   0010E0  0E02               	movlw	2
  1133   0010E2  ECEC  F00A         	call	_d1command
  1134   0010E6  0012               	return		;funcret
  1135   0010E8                     __end_of_initialisation_afficheur:
  1136                           	callstack 0
  1137                           
  1138 ;; *************** function _command *****************
  1139 ;; Defined at:
  1140 ;;		line 91 in file "afficheur.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;  cmd             1    wreg     unsigned char 
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;  cmd             1    4[COMRAM] unsigned char 
  1145 ;;  res             1    0        unsigned char 
  1146 ;; Return value:  Size  Location     Type
  1147 ;;                  1    wreg      unsigned char 
  1148 ;; Registers used:
  1149 ;;		wreg, status,2, status,0, cstack
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1156 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1158 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1159 ;;Total ram usage:        1 bytes
  1160 ;; Hardware stack levels used: 1
  1161 ;; Hardware stack levels required when called: 2
  1162 ;; This function calls:
  1163 ;;		_delai_us_char
  1164 ;;		_wait_status_ok
  1165 ;;		_write_c_aff
  1166 ;; This function is called by:
  1167 ;;		_initialisation_afficheur
  1168 ;;		_plot1
  1169 ;;		_plot0
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           	psect	text6
  1174   00175A                     __ptext6:
  1175                           	callstack 0
  1176   00175A                     _command:
  1177                           	callstack 27
  1178                           
  1179                           ;incstack = 0
  1180                           ;command@cmd stored from wreg
  1181   00175A  6E05               	movwf	command@cmd^0,c
  1182   00175C                     
  1183                           ;afficheur.c: 97:     if(wait_status_ok()==1)
  1184   00175C  EC26  F00A         	call	_wait_status_ok	;wreg free
  1185   001760  06E8               	decf	wreg,f,c
  1186   001762  A4D8               	btfss	status,2,c
  1187   001764  EFB6  F00B         	goto	u61
  1188   001768  EFB8  F00B         	goto	u60
  1189   00176C                     u61:
  1190   00176C  EFBE  F00B         	goto	l44
  1191   001770                     u60:
  1192   001770                     
  1193                           ;afficheur.c: 98:     {;afficheur.c: 99:         delai_us_char(12);
  1194   001770  0E0C               	movlw	12
  1195   001772  EC6A  F00B         	call	_delai_us_char
  1196   001776                     
  1197                           ;afficheur.c: 100:         write_c_aff(cmd);
  1198   001776  5005               	movf	command@cmd^0,w,c
  1199   001778  ECCC  F00B         	call	_write_c_aff
  1200   00177C                     l44:
  1201   00177C  0012               	return		;funcret
  1202   00177E                     __end_of_command:
  1203                           	callstack 0
  1204                           
  1205 ;; *************** function _check_status_ok *****************
  1206 ;; Defined at:
  1207 ;;		line 31 in file "afficheur.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;		None
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;  res             1    0[COMRAM] unsigned char 
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      unsigned char 
  1214 ;; Registers used:
  1215 ;;		wreg, status,2, status,0
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1222 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1224 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1225 ;;Total ram usage:        1 bytes
  1226 ;; Hardware stack levels used: 1
  1227 ;; This function calls:
  1228 ;;		Nothing
  1229 ;; This function is called by:
  1230 ;;		_initialisation_afficheur
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           	psect	text7
  1235   001626                     __ptext7:
  1236                           	callstack 0
  1237   001626                     _check_status_ok:
  1238                           	callstack 29
  1239   001626                     
  1240                           ;afficheur.c: 33:     unsigned char res;;afficheur.c: 36:     TRISH=0xFF;
  1241   001626  6899               	setf	153,c	;volatile
  1242                           
  1243                           ;afficheur.c: 37:     LATJbits.LATJ0=1;
  1244   001628  8091               	bsf	145,0,c	;volatile
  1245                           
  1246                           ;afficheur.c: 38:     LATJbits.LATJ3=0;
  1247   00162A  9691               	bcf	145,3,c	;volatile
  1248                           
  1249                           ;afficheur.c: 39:     LATJbits.LATJ1=0;
  1250   00162C  9291               	bcf	145,1,c	;volatile
  1251                           
  1252                           ;afficheur.c: 40:     __nop();
  1253   00162E  F000               	nop	
  1254                           
  1255                           ;afficheur.c: 41:     __nop();
  1256   001630  F000               	nop	
  1257                           
  1258                           ;afficheur.c: 42:     __nop();
  1259   001632  F000               	nop	
  1260                           
  1261                           ;afficheur.c: 43:     res=PORTH;
  1262   001634  CF87 F001          	movff	3975,check_status_ok@res	;volatile
  1263                           
  1264                           ;afficheur.c: 44:     LATJbits.LATJ1=1;
  1265   001638  8291               	bsf	145,1,c	;volatile
  1266                           
  1267                           ;afficheur.c: 45:     LATJbits.LATJ3=1;
  1268   00163A  8691               	bsf	145,3,c	;volatile
  1269   00163C                     
  1270                           ;afficheur.c: 47:     if ((res&0x03)==0x03)
  1271   00163C  5001               	movf	check_status_ok@res^0,w,c
  1272   00163E  0B03               	andlw	3
  1273   001640  0A03               	xorlw	3
  1274   001642  A4D8               	btfss	status,2,c
  1275   001644  EF26  F00B         	goto	u51
  1276   001648  EF28  F00B         	goto	u50
  1277   00164C                     u51:
  1278   00164C  EF2C  F00B         	goto	l1024
  1279   001650                     u50:
  1280   001650                     
  1281                           ;afficheur.c: 48:         res=1;
  1282   001650  0E01               	movlw	1
  1283   001652  6E01               	movwf	check_status_ok@res^0,c
  1284   001654  EF2E  F00B         	goto	l30
  1285   001658                     l1024:
  1286                           
  1287                           ;afficheur.c: 50:         res=0;
  1288   001658  0E00               	movlw	0
  1289   00165A  6E01               	movwf	check_status_ok@res^0,c
  1290   00165C                     l30:
  1291                           
  1292                           ;afficheur.c: 51:     return res;
  1293   00165C  5001               	movf	check_status_ok@res^0,w,c
  1294   00165E  0012               	return		;funcret
  1295   001660                     __end_of_check_status_ok:
  1296                           	callstack 0
  1297                           
  1298 ;; *************** function _goto_lico *****************
  1299 ;; Defined at:
  1300 ;;		line 276 in file "afficheur.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;  ligne           1    wreg     unsigned char 
  1303 ;;  colonne         1    8[COMRAM] unsigned char 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  ligne           1   11[COMRAM] unsigned char 
  1306 ;;  adr             2   12[COMRAM] unsigned int 
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  1    wreg      void 
  1309 ;; Registers used:
  1310 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1316 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1317 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1318 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1319 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;Total ram usage:        6 bytes
  1321 ;; Hardware stack levels used: 1
  1322 ;; Hardware stack levels required when called: 3
  1323 ;; This function calls:
  1324 ;;		_d2command
  1325 ;; This function is called by:
  1326 ;;		_main
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text8
  1331   0013D4                     __ptext8:
  1332                           	callstack 0
  1333   0013D4                     _goto_lico:
  1334                           	callstack 27
  1335                           
  1336                           ;incstack = 0
  1337                           ;goto_lico@ligne stored from wreg
  1338   0013D4  6E0C               	movwf	goto_lico@ligne^0,c
  1339   0013D6                     
  1340                           ;afficheur.c: 276: void goto_lico(unsigned char ligne, unsigned char colonne);afficheur.
      +                          c: 277: {;afficheur.c: 278:     unsigned int adr;;afficheur.c: 280:     adr=0x7B00;
  1341   0013D6  0E7B               	movlw	123
  1342   0013D8  6E0E               	movwf	(goto_lico@adr+1)^0,c
  1343   0013DA  0E00               	movlw	0
  1344   0013DC  6E0D               	movwf	goto_lico@adr^0,c
  1345   0013DE                     
  1346                           ;afficheur.c: 281:     if (ligne>15) ligne=0;
  1347   0013DE  0E0F               	movlw	15
  1348   0013E0  640C               	cpfsgt	goto_lico@ligne^0,c
  1349   0013E2  EFF5  F009         	goto	u711
  1350   0013E6  EFF7  F009         	goto	u710
  1351   0013EA                     u711:
  1352   0013EA  EFF9  F009         	goto	l1634
  1353   0013EE                     u710:
  1354   0013EE  0E00               	movlw	0
  1355   0013F0  6E0C               	movwf	goto_lico@ligne^0,c
  1356   0013F2                     l1634:
  1357                           
  1358                           ;afficheur.c: 282:     if (colonne>39) colonne=0;
  1359   0013F2  0E27               	movlw	39
  1360   0013F4  6409               	cpfsgt	goto_lico@colonne^0,c
  1361   0013F6  EFFF  F009         	goto	u721
  1362   0013FA  EF01  F00A         	goto	u720
  1363   0013FE                     u721:
  1364   0013FE  EF03  F00A         	goto	l1638
  1365   001402                     u720:
  1366   001402  0E00               	movlw	0
  1367   001404  6E09               	movwf	goto_lico@colonne^0,c
  1368   001406                     l1638:
  1369                           
  1370                           ;afficheur.c: 283:     adr=adr+40*ligne+colonne;
  1371   001406  500C               	movf	goto_lico@ligne^0,w,c
  1372   001408  0D28               	mullw	40
  1373   00140A  CFF3 F00A          	movff	prodl,??_goto_lico
  1374   00140E  CFF4 F00B          	movff	prodh,??_goto_lico+1
  1375   001412  5009               	movf	goto_lico@colonne^0,w,c
  1376   001414  260A               	addwf	??_goto_lico^0,f,c
  1377   001416  0E00               	movlw	0
  1378   001418  220B               	addwfc	(??_goto_lico+1)^0,f,c
  1379   00141A  500D               	movf	goto_lico@adr^0,w,c
  1380   00141C  240A               	addwf	??_goto_lico^0,w,c
  1381   00141E  6E0D               	movwf	goto_lico@adr^0,c
  1382   001420  500E               	movf	(goto_lico@adr+1)^0,w,c
  1383   001422  200B               	addwfc	(??_goto_lico+1)^0,w,c
  1384   001424  6E0E               	movwf	(goto_lico@adr+1)^0,c
  1385                           
  1386                           ;afficheur.c: 284:     while(d2command((unsigned char)(adr&0x00FF),(unsigned char)(adr>>
      +                          8),0x24)==0)
  1387   001426  EF16  F00A         	goto	l1640
  1388   00142A                     l104:
  1389                           
  1390                           ;afficheur.c: 285:         __nop();
  1391   00142A  F000               	nop	
  1392   00142C                     l1640:
  1393                           
  1394                           ;afficheur.c: 284:     while(d2command((unsigned char)(adr&0x00FF),(unsigned char)(adr>>
      +                          8),0x24)==0)
  1395   00142C  500E               	movf	(goto_lico@adr+1)^0,w,c
  1396   00142E  6E05               	movwf	d2command@d2^0,c
  1397   001430  0E24               	movlw	36
  1398   001432  6E06               	movwf	d2command@cmd^0,c
  1399   001434  500D               	movf	goto_lico@adr^0,w,c
  1400   001436  EC61  F00A         	call	_d2command
  1401   00143A  0900               	iorlw	0
  1402   00143C  B4D8               	btfsc	status,2,c
  1403   00143E  EF23  F00A         	goto	u731
  1404   001442  EF25  F00A         	goto	u730
  1405   001446                     u731:
  1406   001446  EF15  F00A         	goto	l104
  1407   00144A                     u730:
  1408   00144A  0012               	return		;funcret
  1409   00144C                     __end_of_goto_lico:
  1410                           	callstack 0
  1411                           
  1412 ;; *************** function _draw_string *****************
  1413 ;; Defined at:
  1414 ;;		line 244 in file "afficheur.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;  tableau         2    7[COMRAM] PTR unsigned char 
  1417 ;;		 -> STR_1(2), 
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;		None
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      void 
  1422 ;; Registers used:
  1423 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1429 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1432 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1433 ;;Total ram usage:        2 bytes
  1434 ;; Hardware stack levels used: 1
  1435 ;; Hardware stack levels required when called: 3
  1436 ;; This function calls:
  1437 ;;		_d1command
  1438 ;; This function is called by:
  1439 ;;		_main
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           	psect	text9
  1444   001530                     __ptext9:
  1445                           	callstack 0
  1446   001530                     _draw_string:
  1447                           	callstack 27
  1448   001530                     
  1449                           ;afficheur.c: 244: void draw_string(unsigned char * tableau);afficheur.c: 245: {;affiche
      +                          ur.c: 246:     while(tableau[0]!=0)
  1450   001530  EFB2  F00A         	goto	l1626
  1451   001534                     l82:
  1452                           
  1453                           ;afficheur.c: 249:             __nop();
  1454   001534  F000               	nop	
  1455   001536                     l1622:
  1456                           
  1457                           ;afficheur.c: 248:         while(d1command(tableau[0]-32,0xC0)==0)
  1458   001536  0EC0               	movlw	192
  1459   001538  6E05               	movwf	d1command@cmd^0,c
  1460   00153A  C008  FFF6         	movff	draw_string@tableau,tblptrl
  1461   00153E  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  1462   001542                     	if	0	;tblptru may be non-zero
  1463   001542                     	endif
  1464   001542                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1465   001542  0E00               	movlw	low (__mediumconst shr (0+16))
  1466   001544  6EF8               	movwf	tblptru,c
  1467   001546                     	endif
  1468   001546  0008               	tblrd		*
  1469   001548  50F5               	movf	tablat,w,c
  1470   00154A  0FE0               	addlw	224
  1471   00154C  ECEC  F00A         	call	_d1command
  1472   001550  0900               	iorlw	0
  1473   001552  B4D8               	btfsc	status,2,c
  1474   001554  EFAE  F00A         	goto	u691
  1475   001558  EFB0  F00A         	goto	u690
  1476   00155C                     u691:
  1477   00155C  EF9A  F00A         	goto	l82
  1478   001560                     u690:
  1479   001560                     
  1480                           ;afficheur.c: 250:         tableau++;
  1481   001560  4A08               	infsnz	draw_string@tableau^0,f,c
  1482   001562  2A09               	incf	(draw_string@tableau+1)^0,f,c
  1483   001564                     l1626:
  1484                           
  1485                           ;afficheur.c: 246:     while(tableau[0]!=0)
  1486   001564  C008  FFF6         	movff	draw_string@tableau,tblptrl
  1487   001568  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  1488   00156C                     	if	0	;tblptru may be non-zero
  1489   00156C                     	endif
  1490   00156C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1491   00156C  0E00               	movlw	low (__mediumconst shr (0+16))
  1492   00156E  6EF8               	movwf	tblptru,c
  1493   001570                     	endif
  1494   001570  0008               	tblrd		*
  1495   001572  50F5               	movf	tablat,w,c
  1496   001574  0900               	iorlw	0
  1497   001576  A4D8               	btfss	status,2,c
  1498   001578  EFC0  F00A         	goto	u701
  1499   00157C  EFC2  F00A         	goto	u700
  1500   001580                     u701:
  1501   001580  EF9B  F00A         	goto	l1622
  1502   001584                     u700:
  1503   001584  0012               	return		;funcret
  1504   001586                     __end_of_draw_string:
  1505                           	callstack 0
  1506                           
  1507 ;; *************** function _draw_char *****************
  1508 ;; Defined at:
  1509 ;;		line 229 in file "afficheur.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;  dccar           1    wreg     unsigned char 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;  dccar           1    7[COMRAM] unsigned char 
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  1    wreg      void 
  1516 ;; Registers used:
  1517 ;;		wreg, status,2, status,0, cstack
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1524 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1526 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1527 ;;Total ram usage:        1 bytes
  1528 ;; Hardware stack levels used: 1
  1529 ;; Hardware stack levels required when called: 3
  1530 ;; This function calls:
  1531 ;;		_d1command
  1532 ;; This function is called by:
  1533 ;;		_main
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537                           	psect	text10
  1538   001586                     __ptext10:
  1539                           	callstack 0
  1540   001586                     _draw_char:
  1541                           	callstack 27
  1542                           
  1543                           ;incstack = 0
  1544                           ;draw_char@dccar stored from wreg
  1545   001586  6E08               	movwf	draw_char@dccar^0,c
  1546   001588                     
  1547                           ;afficheur.c: 229: void draw_char(unsigned char dccar);afficheur.c: 230: {;afficheur.c: 
      +                          231:     if (dccar<32)
  1548   001588  0E20               	movlw	32
  1549   00158A  6008               	cpfslt	draw_char@dccar^0,c
  1550   00158C  EFCA  F00A         	goto	u661
  1551   001590  EFCC  F00A         	goto	u660
  1552   001594                     u661:
  1553   001594  EFCE  F00A         	goto	l1612
  1554   001598                     u660:
  1555   001598                     
  1556                           ;afficheur.c: 232:     {;afficheur.c: 233:         dccar=0x3F;
  1557   001598  0E3F               	movlw	63
  1558   00159A  6E08               	movwf	draw_char@dccar^0,c
  1559   00159C                     l1612:
  1560                           
  1561                           ;afficheur.c: 235:     if (dccar>0x9F)
  1562   00159C  0E9F               	movlw	159
  1563   00159E  6408               	cpfsgt	draw_char@dccar^0,c
  1564   0015A0  EFD4  F00A         	goto	u671
  1565   0015A4  EFD6  F00A         	goto	u670
  1566   0015A8                     u671:
  1567   0015A8  EFD8  F00A         	goto	l1616
  1568   0015AC                     u670:
  1569   0015AC                     
  1570                           ;afficheur.c: 236:     {;afficheur.c: 237:         dccar=0x3F;
  1571   0015AC  0E3F               	movlw	63
  1572   0015AE  6E08               	movwf	draw_char@dccar^0,c
  1573   0015B0                     l1616:
  1574                           
  1575                           ;afficheur.c: 239:     dccar=dccar-32;
  1576   0015B0  5008               	movf	draw_char@dccar^0,w,c
  1577   0015B2  0FE0               	addlw	224
  1578   0015B4  6E08               	movwf	draw_char@dccar^0,c
  1579                           
  1580                           ;afficheur.c: 240:     while(d1command(dccar,0xC0)==0) __nop();
  1581   0015B6  EFDE  F00A         	goto	l1618
  1582   0015BA                     l74:
  1583   0015BA  F000               	nop	
  1584   0015BC                     l1618:
  1585   0015BC  0EC0               	movlw	192
  1586   0015BE  6E05               	movwf	d1command@cmd^0,c
  1587   0015C0  5008               	movf	draw_char@dccar^0,w,c
  1588   0015C2  ECEC  F00A         	call	_d1command
  1589   0015C6  0900               	iorlw	0
  1590   0015C8  B4D8               	btfsc	status,2,c
  1591   0015CA  EFE9  F00A         	goto	u681
  1592   0015CE  EFEB  F00A         	goto	u680
  1593   0015D2                     u681:
  1594   0015D2  EFDD  F00A         	goto	l74
  1595   0015D6                     u680:
  1596   0015D6  0012               	return		;funcret
  1597   0015D8                     __end_of_draw_char:
  1598                           	callstack 0
  1599                           
  1600 ;; *************** function _clear_text *****************
  1601 ;; Defined at:
  1602 ;;		line 288 in file "afficheur.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;		None
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;  add             2    8[COMRAM] unsigned int 
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  1    wreg      void 
  1609 ;; Registers used:
  1610 ;;		wreg, status,2, status,0, cstack
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1617 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1619 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1620 ;;Total ram usage:        2 bytes
  1621 ;; Hardware stack levels used: 1
  1622 ;; Hardware stack levels required when called: 3
  1623 ;; This function calls:
  1624 ;;		_d1command
  1625 ;;		_d2command
  1626 ;; This function is called by:
  1627 ;;		_main
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           
  1631                           	psect	text11
  1632   001660                     __ptext11:
  1633                           	callstack 0
  1634   001660                     _clear_text:
  1635                           	callstack 27
  1636   001660                     
  1637                           ;afficheur.c: 290:     unsigned int add;;afficheur.c: 292:     d2command(0,0,0x24);
  1638   001660  0E00               	movlw	0
  1639   001662  6E05               	movwf	d2command@d2^0,c
  1640   001664  0E24               	movlw	36
  1641   001666  6E06               	movwf	d2command@cmd^0,c
  1642   001668  0E00               	movlw	0
  1643   00166A  EC61  F00A         	call	_d2command
  1644   00166E                     
  1645                           ;afficheur.c: 293:     for (add=0;add!=0x8000;add++)
  1646   00166E  0E00               	movlw	0
  1647   001670  6E0A               	movwf	(clear_text@add+1)^0,c
  1648   001672  0E00               	movlw	0
  1649   001674  6E09               	movwf	clear_text@add^0,c
  1650   001676                     l1650:
  1651                           
  1652                           ;afficheur.c: 294:     {;afficheur.c: 295:             d1command(0x00,0xC0);
  1653   001676  0EC0               	movlw	192
  1654   001678  6E05               	movwf	d1command@cmd^0,c
  1655   00167A  0E00               	movlw	0
  1656   00167C  ECEC  F00A         	call	_d1command
  1657   001680                     
  1658                           ;afficheur.c: 296:     }
  1659   001680  4A09               	infsnz	clear_text@add^0,f,c
  1660   001682  2A0A               	incf	(clear_text@add+1)^0,f,c
  1661   001684  0E80               	movlw	128
  1662   001686  180A               	xorwf	(clear_text@add+1)^0,w,c
  1663   001688  1009               	iorwf	clear_text@add^0,w,c
  1664   00168A  A4D8               	btfss	status,2,c
  1665   00168C  EF4A  F00B         	goto	u741
  1666   001690  EF4C  F00B         	goto	u740
  1667   001694                     u741:
  1668   001694  EF3B  F00B         	goto	l1650
  1669   001698                     u740:
  1670   001698  0012               	return		;funcret
  1671   00169A                     __end_of_clear_text:
  1672                           	callstack 0
  1673                           
  1674 ;; *************** function _clear_graphics *****************
  1675 ;; Defined at:
  1676 ;;		line 299 in file "afficheur.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;		None
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;  add             2    8[COMRAM] unsigned int 
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  1    wreg      void 
  1683 ;; Registers used:
  1684 ;;		wreg, status,2, status,0, cstack
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1691 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1694 ;;Total ram usage:        2 bytes
  1695 ;; Hardware stack levels used: 1
  1696 ;; Hardware stack levels required when called: 3
  1697 ;; This function calls:
  1698 ;;		_d1command
  1699 ;;		_d2command
  1700 ;; This function is called by:
  1701 ;;		_main
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           	psect	text12
  1706   00169A                     __ptext12:
  1707                           	callstack 0
  1708   00169A                     _clear_graphics:
  1709                           	callstack 27
  1710   00169A                     
  1711                           ;afficheur.c: 301:     unsigned int add;;afficheur.c: 303:     d2command(0,0x80,0x24);
  1712   00169A  0E80               	movlw	128
  1713   00169C  6E05               	movwf	d2command@d2^0,c
  1714   00169E  0E24               	movlw	36
  1715   0016A0  6E06               	movwf	d2command@cmd^0,c
  1716   0016A2  0E00               	movlw	0
  1717   0016A4  EC61  F00A         	call	_d2command
  1718   0016A8                     
  1719                           ;afficheur.c: 304:     for (add=0x8000;add!=0xF800;add++)
  1720   0016A8  0E80               	movlw	128
  1721   0016AA  6E0A               	movwf	(clear_graphics@add+1)^0,c
  1722   0016AC  0E00               	movlw	0
  1723   0016AE  6E09               	movwf	clear_graphics@add^0,c
  1724   0016B0                     l1664:
  1725                           
  1726                           ;afficheur.c: 305:     {;afficheur.c: 306:             d1command(0x00,0xC0);
  1727   0016B0  0EC0               	movlw	192
  1728   0016B2  6E05               	movwf	d1command@cmd^0,c
  1729   0016B4  0E00               	movlw	0
  1730   0016B6  ECEC  F00A         	call	_d1command
  1731   0016BA                     
  1732                           ;afficheur.c: 307:     }
  1733   0016BA  4A09               	infsnz	clear_graphics@add^0,f,c
  1734   0016BC  2A0A               	incf	(clear_graphics@add+1)^0,f,c
  1735   0016BE  0EF8               	movlw	248
  1736   0016C0  180A               	xorwf	(clear_graphics@add+1)^0,w,c
  1737   0016C2  1009               	iorwf	clear_graphics@add^0,w,c
  1738   0016C4  A4D8               	btfss	status,2,c
  1739   0016C6  EF67  F00B         	goto	u751
  1740   0016CA  EF69  F00B         	goto	u750
  1741   0016CE                     u751:
  1742   0016CE  EF58  F00B         	goto	l1664
  1743   0016D2                     u750:
  1744   0016D2  0012               	return		;funcret
  1745   0016D4                     __end_of_clear_graphics:
  1746                           	callstack 0
  1747                           
  1748 ;; *************** function _d2command *****************
  1749 ;; Defined at:
  1750 ;;		line 129 in file "afficheur.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;  d1              1    wreg     unsigned char 
  1753 ;;  d2              1    4[COMRAM] unsigned char 
  1754 ;;  cmd             1    5[COMRAM] unsigned char 
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;  d1              1    6[COMRAM] unsigned char 
  1757 ;;  res             1    7[COMRAM] unsigned char 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      unsigned char 
  1760 ;; Registers used:
  1761 ;;		wreg, status,2, status,0, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1767 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1768 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1770 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1771 ;;Total ram usage:        4 bytes
  1772 ;; Hardware stack levels used: 1
  1773 ;; Hardware stack levels required when called: 2
  1774 ;; This function calls:
  1775 ;;		_delai_us_char
  1776 ;;		_wait_status_ok
  1777 ;;		_write_c_aff
  1778 ;;		_write_d_aff
  1779 ;; This function is called by:
  1780 ;;		_initialisation_afficheur
  1781 ;;		_goto_lico
  1782 ;;		_clear_text
  1783 ;;		_clear_graphics
  1784 ;;		_plot1
  1785 ;;		_clear_cgram
  1786 ;;		_plot0
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           	psect	text13
  1791   0014C2                     __ptext13:
  1792                           	callstack 0
  1793   0014C2                     _d2command:
  1794                           	callstack 27
  1795                           
  1796                           ;incstack = 0
  1797                           ;d2command@d1 stored from wreg
  1798   0014C2  6E07               	movwf	d2command@d1^0,c
  1799   0014C4                     
  1800                           ;afficheur.c: 129: unsigned char d2command(unsigned char d1, unsigned char d2, unsigned 
      +                          char cmd);afficheur.c: 130: {;afficheur.c: 131:     unsigned char res;;afficheur.c: 133:
      +                               res=0;
  1801   0014C4  0E00               	movlw	0
  1802   0014C6  6E08               	movwf	d2command@res^0,c
  1803   0014C8                     
  1804                           ;afficheur.c: 135:     if (wait_status_ok()==1)
  1805   0014C8  EC26  F00A         	call	_wait_status_ok	;wreg free
  1806   0014CC  06E8               	decf	wreg,f,c
  1807   0014CE  A4D8               	btfss	status,2,c
  1808   0014D0  EF6C  F00A         	goto	u491
  1809   0014D4  EF6E  F00A         	goto	u490
  1810   0014D8                     u491:
  1811   0014D8  EF96  F00A         	goto	l1496
  1812   0014DC                     u490:
  1813   0014DC                     
  1814                           ;afficheur.c: 136:     {;afficheur.c: 137:         delai_us_char(12);
  1815   0014DC  0E0C               	movlw	12
  1816   0014DE  EC6A  F00B         	call	_delai_us_char
  1817   0014E2                     
  1818                           ;afficheur.c: 138:         write_d_aff(d1);
  1819   0014E2  5007               	movf	d2command@d1^0,w,c
  1820   0014E4  ECBF  F00B         	call	_write_d_aff
  1821   0014E8                     
  1822                           ;afficheur.c: 139:         if (wait_status_ok()==1)
  1823   0014E8  EC26  F00A         	call	_wait_status_ok	;wreg free
  1824   0014EC  06E8               	decf	wreg,f,c
  1825   0014EE  A4D8               	btfss	status,2,c
  1826   0014F0  EF7C  F00A         	goto	u501
  1827   0014F4  EF7E  F00A         	goto	u500
  1828   0014F8                     u501:
  1829   0014F8  EF96  F00A         	goto	l1496
  1830   0014FC                     u500:
  1831   0014FC                     
  1832                           ;afficheur.c: 140:         {;afficheur.c: 141:             delai_us_char(12);
  1833   0014FC  0E0C               	movlw	12
  1834   0014FE  EC6A  F00B         	call	_delai_us_char
  1835   001502                     
  1836                           ;afficheur.c: 142:             write_d_aff(d2);
  1837   001502  5005               	movf	d2command@d2^0,w,c
  1838   001504  ECBF  F00B         	call	_write_d_aff
  1839   001508                     
  1840                           ;afficheur.c: 143:             if (wait_status_ok()==1)
  1841   001508  EC26  F00A         	call	_wait_status_ok	;wreg free
  1842   00150C  06E8               	decf	wreg,f,c
  1843   00150E  A4D8               	btfss	status,2,c
  1844   001510  EF8C  F00A         	goto	u511
  1845   001514  EF8E  F00A         	goto	u510
  1846   001518                     u511:
  1847   001518  EF96  F00A         	goto	l1496
  1848   00151C                     u510:
  1849   00151C                     
  1850                           ;afficheur.c: 144:             {;afficheur.c: 145:                 delai_us_char(12);
  1851   00151C  0E0C               	movlw	12
  1852   00151E  EC6A  F00B         	call	_delai_us_char
  1853   001522                     
  1854                           ;afficheur.c: 146:                 write_c_aff(cmd);
  1855   001522  5006               	movf	d2command@cmd^0,w,c
  1856   001524  ECCC  F00B         	call	_write_c_aff
  1857   001528                     
  1858                           ;afficheur.c: 148:                     res=1;
  1859   001528  0E01               	movlw	1
  1860   00152A  6E08               	movwf	d2command@res^0,c
  1861   00152C                     l1496:
  1862                           
  1863                           ;afficheur.c: 152:     return res;
  1864   00152C  5008               	movf	d2command@res^0,w,c
  1865   00152E  0012               	return		;funcret
  1866   001530                     __end_of_d2command:
  1867                           	callstack 0
  1868                           
  1869 ;; *************** function _d1command *****************
  1870 ;; Defined at:
  1871 ;;		line 107 in file "afficheur.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;  d1              1    wreg     unsigned char 
  1874 ;;  cmd             1    4[COMRAM] unsigned char 
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;  d1              1    5[COMRAM] unsigned char 
  1877 ;;  res             1    6[COMRAM] unsigned char 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      unsigned char 
  1880 ;; Registers used:
  1881 ;;		wreg, status,2, status,0, cstack
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1887 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1888 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1890 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1891 ;;Total ram usage:        3 bytes
  1892 ;; Hardware stack levels used: 1
  1893 ;; Hardware stack levels required when called: 2
  1894 ;; This function calls:
  1895 ;;		_delai_us_char
  1896 ;;		_wait_status_ok
  1897 ;;		_write_c_aff
  1898 ;;		_write_d_aff
  1899 ;; This function is called by:
  1900 ;;		_initialisation_afficheur
  1901 ;;		_draw_char
  1902 ;;		_draw_string
  1903 ;;		_clear_text
  1904 ;;		_clear_graphics
  1905 ;;		_draw_hex8
  1906 ;;		_clear_cgram
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           	psect	text14
  1911   0015D8                     __ptext14:
  1912                           	callstack 0
  1913   0015D8                     _d1command:
  1914                           	callstack 27
  1915                           
  1916                           ;incstack = 0
  1917                           ;d1command@d1 stored from wreg
  1918   0015D8  6E06               	movwf	d1command@d1^0,c
  1919   0015DA                     
  1920                           ;afficheur.c: 107: unsigned char d1command(unsigned char d1, unsigned char cmd);afficheu
      +                          r.c: 108: {;afficheur.c: 109:     unsigned char res;;afficheur.c: 111:     res=0;
  1921   0015DA  0E00               	movlw	0
  1922   0015DC  6E07               	movwf	d1command@res^0,c
  1923   0015DE                     
  1924                           ;afficheur.c: 113:     if (wait_status_ok()==1)
  1925   0015DE  EC26  F00A         	call	_wait_status_ok	;wreg free
  1926   0015E2  06E8               	decf	wreg,f,c
  1927   0015E4  A4D8               	btfss	status,2,c
  1928   0015E6  EFF7  F00A         	goto	u471
  1929   0015EA  EFF9  F00A         	goto	u470
  1930   0015EE                     u471:
  1931   0015EE  EF11  F00B         	goto	l1470
  1932   0015F2                     u470:
  1933   0015F2                     
  1934                           ;afficheur.c: 114:     {;afficheur.c: 115:         delai_us_char(12);
  1935   0015F2  0E0C               	movlw	12
  1936   0015F4  EC6A  F00B         	call	_delai_us_char
  1937   0015F8                     
  1938                           ;afficheur.c: 116:         write_d_aff(d1);
  1939   0015F8  5006               	movf	d1command@d1^0,w,c
  1940   0015FA  ECBF  F00B         	call	_write_d_aff
  1941   0015FE                     
  1942                           ;afficheur.c: 117:         if (wait_status_ok()==1)
  1943   0015FE  EC26  F00A         	call	_wait_status_ok	;wreg free
  1944   001602  06E8               	decf	wreg,f,c
  1945   001604  A4D8               	btfss	status,2,c
  1946   001606  EF07  F00B         	goto	u481
  1947   00160A  EF09  F00B         	goto	u480
  1948   00160E                     u481:
  1949   00160E  EF11  F00B         	goto	l1470
  1950   001612                     u480:
  1951   001612                     
  1952                           ;afficheur.c: 118:         {;afficheur.c: 119:             delai_us_char(12);
  1953   001612  0E0C               	movlw	12
  1954   001614  EC6A  F00B         	call	_delai_us_char
  1955   001618                     
  1956                           ;afficheur.c: 120:             write_c_aff(cmd);
  1957   001618  5005               	movf	d1command@cmd^0,w,c
  1958   00161A  ECCC  F00B         	call	_write_c_aff
  1959   00161E                     
  1960                           ;afficheur.c: 122:                 res=1;
  1961   00161E  0E01               	movlw	1
  1962   001620  6E07               	movwf	d1command@res^0,c
  1963   001622                     l1470:
  1964                           
  1965                           ;afficheur.c: 126:     return res;
  1966   001622  5007               	movf	d1command@res^0,w,c
  1967   001624  0012               	return		;funcret
  1968   001626                     __end_of_d1command:
  1969                           	callstack 0
  1970                           
  1971 ;; *************** function _write_d_aff *****************
  1972 ;; Defined at:
  1973 ;;		line 5 in file "afficheur.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;  data            1    wreg     unsigned char 
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;  data            1    0[COMRAM] unsigned char 
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      void 
  1980 ;; Registers used:
  1981 ;;		wreg, status,2
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1988 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1990 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1991 ;;Total ram usage:        1 bytes
  1992 ;; Hardware stack levels used: 1
  1993 ;; This function calls:
  1994 ;;		Nothing
  1995 ;; This function is called by:
  1996 ;;		_d1command
  1997 ;;		_d2command
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           	psect	text15
  2002   00177E                     __ptext15:
  2003                           	callstack 0
  2004   00177E                     _write_d_aff:
  2005                           	callstack 28
  2006                           
  2007                           ;incstack = 0
  2008                           ;write_d_aff@data stored from wreg
  2009   00177E  6E01               	movwf	write_d_aff@data^0,c
  2010   001780                     
  2011                           ;afficheur.c: 5: void write_d_aff(unsigned char data);afficheur.c: 6: {;afficheur.c: 7: 
      +                              LATH=data;
  2012   001780  C001  FF90         	movff	write_d_aff@data,3984	;volatile
  2013   001784                     
  2014                           ;afficheur.c: 8:     TRISH=0x00;
  2015   001784  0E00               	movlw	0
  2016   001786  6E99               	movwf	153,c	;volatile
  2017   001788                     
  2018                           ;afficheur.c: 9:     LATJbits.LATJ0=0;
  2019   001788  9091               	bcf	145,0,c	;volatile
  2020   00178A                     
  2021                           ;afficheur.c: 10:     LATJbits.LATJ3=0;
  2022   00178A  9691               	bcf	145,3,c	;volatile
  2023   00178C                     
  2024                           ;afficheur.c: 11:     LATJbits.LATJ2=0;
  2025   00178C  9491               	bcf	145,2,c	;volatile
  2026   00178E                     
  2027                           ;afficheur.c: 12:     __nop();
  2028   00178E  F000               	nop	
  2029   001790                     
  2030                           ;afficheur.c: 13:     __nop();
  2031   001790  F000               	nop	
  2032   001792                     
  2033                           ;afficheur.c: 14:     LATJbits.LATJ2=1;
  2034   001792  8491               	bsf	145,2,c	;volatile
  2035   001794                     
  2036                           ;afficheur.c: 15:     LATJbits.LATJ3=1;
  2037   001794  8691               	bsf	145,3,c	;volatile
  2038   001796  0012               	return		;funcret
  2039   001798                     __end_of_write_d_aff:
  2040                           	callstack 0
  2041                           
  2042 ;; *************** function _write_c_aff *****************
  2043 ;; Defined at:
  2044 ;;		line 18 in file "afficheur.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;  command         1    wreg     unsigned char 
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;  command         1    0[COMRAM] unsigned char 
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  1    wreg      void 
  2051 ;; Registers used:
  2052 ;;		wreg, status,2
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2059 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2061 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2062 ;;Total ram usage:        1 bytes
  2063 ;; Hardware stack levels used: 1
  2064 ;; This function calls:
  2065 ;;		Nothing
  2066 ;; This function is called by:
  2067 ;;		_command
  2068 ;;		_d1command
  2069 ;;		_d2command
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           	psect	text16
  2074   001798                     __ptext16:
  2075                           	callstack 0
  2076   001798                     _write_c_aff:
  2077                           	callstack 28
  2078                           
  2079                           ;incstack = 0
  2080                           ;write_c_aff@command stored from wreg
  2081   001798  6E01               	movwf	write_c_aff@command^0,c
  2082   00179A                     
  2083                           ;afficheur.c: 18: void write_c_aff(unsigned char command);afficheur.c: 19: {;afficheur.c
      +                          : 20:     LATH=command;
  2084   00179A  C001  FF90         	movff	write_c_aff@command,3984	;volatile
  2085   00179E                     
  2086                           ;afficheur.c: 21:     TRISH=0x00;
  2087   00179E  0E00               	movlw	0
  2088   0017A0  6E99               	movwf	153,c	;volatile
  2089   0017A2                     
  2090                           ;afficheur.c: 22:     LATJbits.LATJ0=1;
  2091   0017A2  8091               	bsf	145,0,c	;volatile
  2092   0017A4                     
  2093                           ;afficheur.c: 23:     LATJbits.LATJ3=0;
  2094   0017A4  9691               	bcf	145,3,c	;volatile
  2095   0017A6                     
  2096                           ;afficheur.c: 24:     LATJbits.LATJ2=0;
  2097   0017A6  9491               	bcf	145,2,c	;volatile
  2098   0017A8                     
  2099                           ;afficheur.c: 25:     __nop();
  2100   0017A8  F000               	nop	
  2101   0017AA                     
  2102                           ;afficheur.c: 26:     __nop();
  2103   0017AA  F000               	nop	
  2104   0017AC                     
  2105                           ;afficheur.c: 27:     LATJbits.LATJ2=1;
  2106   0017AC  8491               	bsf	145,2,c	;volatile
  2107   0017AE                     
  2108                           ;afficheur.c: 28:     LATJbits.LATJ3=1;
  2109   0017AE  8691               	bsf	145,3,c	;volatile
  2110   0017B0  0012               	return		;funcret
  2111   0017B2                     __end_of_write_c_aff:
  2112                           	callstack 0
  2113                           
  2114 ;; *************** function _wait_status_ok *****************
  2115 ;; Defined at:
  2116 ;;		line 54 in file "afficheur.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;		None
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;  res             1    3[COMRAM] unsigned char 
  2121 ;;  status          1    2[COMRAM] unsigned char 
  2122 ;;  err             1    1[COMRAM] unsigned char 
  2123 ;; Return value:  Size  Location     Type
  2124 ;;                  1    wreg      unsigned char 
  2125 ;; Registers used:
  2126 ;;		wreg, status,2, status,0, cstack
  2127 ;; Tracked objects:
  2128 ;;		On entry : 0/0
  2129 ;;		On exit  : 0/0
  2130 ;;		Unchanged: 0/0
  2131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2133 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2135 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2136 ;;Total ram usage:        3 bytes
  2137 ;; Hardware stack levels used: 1
  2138 ;; Hardware stack levels required when called: 1
  2139 ;; This function calls:
  2140 ;;		_delai_us_char
  2141 ;; This function is called by:
  2142 ;;		_command
  2143 ;;		_d1command
  2144 ;;		_d2command
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           	psect	text17
  2149   00144C                     __ptext17:
  2150                           	callstack 0
  2151   00144C                     _wait_status_ok:
  2152                           	callstack 27
  2153   00144C                     
  2154                           ;afficheur.c: 56:     unsigned char err,res,status;;afficheur.c: 58:     err=0;
  2155   00144C  0E00               	movlw	0
  2156   00144E  6E02               	movwf	wait_status_ok@err^0,c
  2157                           
  2158                           ;afficheur.c: 59:     res=2;
  2159   001450  0E02               	movlw	2
  2160   001452  6E04               	movwf	wait_status_ok@res^0,c
  2161                           
  2162                           ;afficheur.c: 60:     while (res==2)
  2163   001454  EF56  F00A         	goto	l1012
  2164   001458                     l35:
  2165                           
  2166                           ;afficheur.c: 61:     {;afficheur.c: 62:         TRISH=0xFF;
  2167   001458  6899               	setf	153,c	;volatile
  2168                           
  2169                           ;afficheur.c: 63:         LATJbits.LATJ0=1;
  2170   00145A  8091               	bsf	145,0,c	;volatile
  2171                           
  2172                           ;afficheur.c: 64:         LATJbits.LATJ3=0;
  2173   00145C  9691               	bcf	145,3,c	;volatile
  2174                           
  2175                           ;afficheur.c: 65:         LATJbits.LATJ1=0;
  2176   00145E  9291               	bcf	145,1,c	;volatile
  2177                           
  2178                           ;afficheur.c: 66:         __nop();
  2179   001460  F000               	nop	
  2180                           
  2181                           ;afficheur.c: 67:         status=PORTH;
  2182   001462  CF87 F003          	movff	3975,wait_status_ok@status	;volatile
  2183                           
  2184                           ;afficheur.c: 68:         LATJbits.LATJ1=1;
  2185   001466  8291               	bsf	145,1,c	;volatile
  2186                           
  2187                           ;afficheur.c: 69:         LATJbits.LATJ3=1;
  2188   001468  8691               	bsf	145,3,c	;volatile
  2189   00146A                     
  2190                           ;afficheur.c: 71:         status=(status&0x03);
  2191   00146A  5003               	movf	wait_status_ok@status^0,w,c
  2192   00146C  0B03               	andlw	3
  2193   00146E  6E03               	movwf	wait_status_ok@status^0,c
  2194                           
  2195                           ;afficheur.c: 72:         if (status!=0x03)
  2196   001470  0E03               	movlw	3
  2197   001472  1803               	xorwf	wait_status_ok@status^0,w,c
  2198   001474  B4D8               	btfsc	status,2,c
  2199   001476  EF3F  F00A         	goto	u21
  2200   00147A  EF41  F00A         	goto	u20
  2201   00147E                     u21:
  2202   00147E  EF54  F00A         	goto	l1010
  2203   001482                     u20:
  2204   001482                     
  2205                           ;afficheur.c: 73:         {;afficheur.c: 74:             err++;
  2206   001482  2A02               	incf	wait_status_ok@err^0,f,c
  2207   001484                     
  2208                           ;afficheur.c: 75:             delai_us_char(12);
  2209   001484  0E0C               	movlw	12
  2210   001486  EC6A  F00B         	call	_delai_us_char
  2211   00148A                     
  2212                           ;afficheur.c: 76:             if (err>=250)
  2213   00148A  0EF9               	movlw	249
  2214   00148C  6402               	cpfsgt	wait_status_ok@err^0,c
  2215   00148E  EF4B  F00A         	goto	u31
  2216   001492  EF4D  F00A         	goto	u30
  2217   001496                     u31:
  2218   001496  EF56  F00A         	goto	l1012
  2219   00149A                     u30:
  2220   00149A                     
  2221                           ;afficheur.c: 77:             {;afficheur.c: 79:                 LATCbits.LATC2=0;LATCbi
      +                          ts.LATC1=1;LATGbits.LATG0=1;
  2222   00149A  948B               	bcf	139,2,c	;volatile
  2223   00149C  828B               	bsf	139,1,c	;volatile
  2224   00149E  808F               	bsf	143,0,c	;volatile
  2225   0014A0                     
  2226                           ;afficheur.c: 80:                 res=0;
  2227   0014A0  0E00               	movlw	0
  2228   0014A2  6E04               	movwf	wait_status_ok@res^0,c
  2229   0014A4  EF56  F00A         	goto	l1012
  2230   0014A8                     l1010:
  2231                           
  2232                           ;afficheur.c: 84:         {;afficheur.c: 85:             res=1;
  2233   0014A8  0E01               	movlw	1
  2234   0014AA  6E04               	movwf	wait_status_ok@res^0,c
  2235   0014AC                     l1012:
  2236                           
  2237                           ;afficheur.c: 60:     while (res==2)
  2238   0014AC  0E02               	movlw	2
  2239   0014AE  1804               	xorwf	wait_status_ok@res^0,w,c
  2240   0014B0  B4D8               	btfsc	status,2,c
  2241   0014B2  EF5D  F00A         	goto	u41
  2242   0014B6  EF5F  F00A         	goto	u40
  2243   0014BA                     u41:
  2244   0014BA  EF2C  F00A         	goto	l35
  2245   0014BE                     u40:
  2246   0014BE                     
  2247                           ;afficheur.c: 88:     return res;
  2248   0014BE  5004               	movf	wait_status_ok@res^0,w,c
  2249   0014C0  0012               	return		;funcret
  2250   0014C2                     __end_of_wait_status_ok:
  2251                           	callstack 0
  2252                           
  2253 ;; *************** function _delai_us_char *****************
  2254 ;; Defined at:
  2255 ;;		line 155 in file "afficheur.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;  ucdelai         1    wreg     unsigned char 
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;  ucdelai         1    0[COMRAM] unsigned char 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  1    wreg      void 
  2262 ;; Registers used:
  2263 ;;		wreg, status,2, status,0
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2270 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2272 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2273 ;;Total ram usage:        1 bytes
  2274 ;; Hardware stack levels used: 1
  2275 ;; This function calls:
  2276 ;;		Nothing
  2277 ;; This function is called by:
  2278 ;;		_wait_status_ok
  2279 ;;		_command
  2280 ;;		_d1command
  2281 ;;		_d2command
  2282 ;;		_initialisation_afficheur
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           	psect	text18
  2287   0016D4                     __ptext18:
  2288                           	callstack 0
  2289   0016D4                     _delai_us_char:
  2290                           	callstack 27
  2291                           
  2292                           ;incstack = 0
  2293                           ;delai_us_char@ucdelai stored from wreg
  2294   0016D4  6E01               	movwf	delai_us_char@ucdelai^0,c
  2295   0016D6                     
  2296                           ;afficheur.c: 155: void delai_us_char(unsigned char ucdelai);afficheur.c: 156: {;affiche
      +                          ur.c: 158:     while (ucdelai>0)
  2297   0016D6  EF78  F00B         	goto	l958
  2298   0016DA                     l59:
  2299                           
  2300                           ;afficheur.c: 159:     {;afficheur.c: 160:         __nop();__nop();__nop();__nop();__nop
      +                          ();__nop();__nop();__nop();__nop();__nop();
  2301   0016DA  F000               	nop	
  2302   0016DC  F000               	nop	
  2303   0016DE  F000               	nop	
  2304   0016E0  F000               	nop	
  2305   0016E2  F000               	nop	
  2306   0016E4  F000               	nop	
  2307   0016E6  F000               	nop	
  2308   0016E8  F000               	nop	
  2309   0016EA  F000               	nop	
  2310   0016EC  F000               	nop	
  2311   0016EE                     
  2312                           ;afficheur.c: 161:         ucdelai--;
  2313   0016EE  0601               	decf	delai_us_char@ucdelai^0,f,c
  2314   0016F0                     l958:
  2315                           
  2316                           ;afficheur.c: 158:     while (ucdelai>0)
  2317   0016F0  5001               	movf	delai_us_char@ucdelai^0,w,c
  2318   0016F2  A4D8               	btfss	status,2,c
  2319   0016F4  EF7E  F00B         	goto	u11
  2320   0016F8  EF80  F00B         	goto	u10
  2321   0016FC                     u11:
  2322   0016FC  EF6D  F00B         	goto	l59
  2323   001700                     u10:
  2324   001700  0012               	return		;funcret
  2325   001702                     __end_of_delai_us_char:
  2326                           	callstack 0
  2327                           
  2328 ;; *************** function _UART_init *****************
  2329 ;; Defined at:
  2330 ;;		line 6 in file "UART.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;		None
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;		None
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      void 
  2337 ;; Registers used:
  2338 ;;		wreg, status,2
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;Total ram usage:        0 bytes
  2349 ;; Hardware stack levels used: 1
  2350 ;; This function calls:
  2351 ;;		Nothing
  2352 ;; This function is called by:
  2353 ;;		_main
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text19
  2358   00172E                     __ptext19:
  2359                           	callstack 0
  2360   00172E                     _UART_init:
  2361                           	callstack 30
  2362   00172E                     
  2363                           ;UART.c: 8:     TXSTA2 = 0x20;
  2364   00172E  0E20               	movlw	32
  2365   001730  010F               	movlb	15	; () banked
  2366   001732  6F21               	movwf	33,b	;volatile
  2367                           
  2368                           ;UART.c: 9:     RCSTA2 = 0x90;
  2369   001734  0E90               	movlw	144
  2370   001736  6F22               	movwf	34,b	;volatile
  2371                           
  2372                           ;UART.c: 11:     BAUDCON2 = 0x00;
  2373   001738  0E00               	movlw	0
  2374   00173A  6F20               	movwf	32,b	;volatile
  2375                           
  2376                           ;UART.c: 13:     SPBRGH2 = 0;
  2377   00173C  0E00               	movlw	0
  2378   00173E  6F1F               	movwf	31,b	;volatile
  2379                           
  2380                           ;UART.c: 14:     SPBRG2 = 17;
  2381   001740  0E11               	movlw	17
  2382   001742  6F1E               	movwf	30,b	;volatile
  2383                           
  2384                           ;UART.c: 17:     TXSTA1 = 0x20;
  2385   001744  0E20               	movlw	32
  2386   001746  6EAC               	movwf	172,c	;volatile
  2387                           
  2388                           ;UART.c: 18:     RCSTA1 = 0x90;
  2389   001748  0E90               	movlw	144
  2390   00174A  6EAB               	movwf	171,c	;volatile
  2391                           
  2392                           ;UART.c: 20:     BAUDCON1 = 0x00;
  2393   00174C  0E00               	movlw	0
  2394   00174E  6E65               	movwf	101,c	;volatile
  2395                           
  2396                           ;UART.c: 22:     SPBRGH1 = 0;
  2397   001750  0E00               	movlw	0
  2398   001752  6ED4               	movwf	212,c	;volatile
  2399                           
  2400                           ;UART.c: 23:     SPBRG1 = 17;
  2401   001754  0E11               	movlw	17
  2402   001756  6EAF               	movwf	175,c	;volatile
  2403   001758                     
  2404                           ; BSR set to: 15
  2405   001758  0012               	return		;funcret
  2406   00175A                     __end_of_UART_init:
  2407                           	callstack 0
  2408                           
  2409                           	psect	rparam
  2410   000000                     
  2411                           	psect	idloc
  2412                           
  2413                           ;Config register IDLOC0 @ 0x200000
  2414                           ;	unspecified, using default values
  2415   200000                     	org	2097152
  2416   200000  FF                 	db	255
  2417                           
  2418                           ;Config register IDLOC1 @ 0x200001
  2419                           ;	unspecified, using default values
  2420   200001                     	org	2097153
  2421   200001  FF                 	db	255
  2422                           
  2423                           ;Config register IDLOC2 @ 0x200002
  2424                           ;	unspecified, using default values
  2425   200002                     	org	2097154
  2426   200002  FF                 	db	255
  2427                           
  2428                           ;Config register IDLOC3 @ 0x200003
  2429                           ;	unspecified, using default values
  2430   200003                     	org	2097155
  2431   200003  FF                 	db	255
  2432                           
  2433                           ;Config register IDLOC4 @ 0x200004
  2434                           ;	unspecified, using default values
  2435   200004                     	org	2097156
  2436   200004  FF                 	db	255
  2437                           
  2438                           ;Config register IDLOC5 @ 0x200005
  2439                           ;	unspecified, using default values
  2440   200005                     	org	2097157
  2441   200005  FF                 	db	255
  2442                           
  2443                           ;Config register IDLOC6 @ 0x200006
  2444                           ;	unspecified, using default values
  2445   200006                     	org	2097158
  2446   200006  FF                 	db	255
  2447                           
  2448                           ;Config register IDLOC7 @ 0x200007
  2449                           ;	unspecified, using default values
  2450   200007                     	org	2097159
  2451   200007  FF                 	db	255
  2452                           
  2453                           	psect	config
  2454                           
  2455                           ;Config register CONFIG1L @ 0x300000
  2456                           ;	VREG Sleep Enable bit
  2457                           ;	RETEN = ON, Enabled
  2458                           ;	LF-INTOSC Low-power Enable bit
  2459                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
  2460                           ;	SOSC Power Selection and mode Configuration bits
  2461                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
  2462                           ;	Extended Instruction Set
  2463                           ;	XINST = OFF, Disabled
  2464   300000                     	org	3145728
  2465   300000  15                 	db	21
  2466                           
  2467                           ;Config register CONFIG1H @ 0x300001
  2468                           ;	Oscillator
  2469                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
  2470                           ;	PLL x4 Enable bit
  2471                           ;	PLLCFG = ON, Enabled
  2472                           ;	Fail-Safe Clock Monitor
  2473                           ;	FCMEN = OFF, Disabled
  2474                           ;	Internal External Oscillator Switch Over Mode
  2475                           ;	IESO = OFF, Disabled
  2476   300001                     	org	3145729
  2477   300001  13                 	db	19
  2478                           
  2479                           ;Config register CONFIG2L @ 0x300002
  2480                           ;	Power Up Timer
  2481                           ;	PWRTEN = OFF, Disabled
  2482                           ;	Brown Out Detect
  2483                           ;	BOREN = OFF, Disabled in hardware, SBOREN disabled
  2484                           ;	Brown-out Reset Voltage bits
  2485                           ;	BORV = 0, 3.0V
  2486                           ;	BORMV Power level
  2487                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
  2488   300002                     	org	3145730
  2489   300002  61                 	db	97
  2490                           
  2491                           ;Config register CONFIG2H @ 0x300003
  2492                           ;	Watchdog Timer
  2493                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
  2494                           ;	Watchdog Postscaler
  2495                           ;	WDTPS = 1, 1:1
  2496   300003                     	org	3145731
  2497   300003  00                 	db	0
  2498                           
  2499                           ;Config register CONFIG3L @ 0x300004
  2500                           ;	RTCC Clock Select
  2501                           ;	RTCOSC = INTOSCREF, RTCC uses INTRC
  2502                           ;	External Address Shift bit
  2503                           ;	EASHFT = OFF, Address Shifting disabled
  2504                           ;	Address Bus Width Select bits
  2505                           ;	ABW = MM, 8-bit address bus
  2506                           ;	Data Bus Width
  2507                           ;	BW = 8, 8-bit external bus mode
  2508                           ;	External Bus Wait
  2509                           ;	WAIT = ON, Enabled
  2510   300004                     	org	3145732
  2511   300004  30                 	db	48
  2512                           
  2513                           ;Config register CONFIG3H @ 0x300005
  2514                           ;	CCP2 Mux
  2515                           ;	CCP2MX = PORTBE, RE7-Microcontroller Mode/RB3-All other modes
  2516                           ;	ECCP Mux
  2517                           ;	ECCPMX = PORTH, Enhanced CCP1/3 [P1B/P1C/P3B/P3C] muxed with RH7/RH6/RH5/RH4
  2518                           ;	MSSP address masking
  2519                           ;	MSSPMSK = MSK5, 5 bit address masking mode
  2520                           ;	Master Clear Enable
  2521                           ;	MCLRE = ON, MCLR Enabled, RG5 Disabled
  2522   300005                     	org	3145733
  2523   300005  80                 	db	128
  2524                           
  2525                           ;Config register CONFIG4L @ 0x300006
  2526                           ;	Stack Overflow Reset
  2527                           ;	STVREN = ON, Enabled
  2528                           ;	Boot Block Size
  2529                           ;	BBSIZ = BB1K, 1K word Boot Block size
  2530                           ;	Background Debug
  2531                           ;	DEBUG = OFF, Disabled
  2532   300006                     	org	3145734
  2533   300006  81                 	db	129
  2534                           
  2535                           ; Padding undefined space
  2536   300007                     	org	3145735
  2537   300007  FF                 	db	255
  2538                           
  2539                           ;Config register CONFIG5L @ 0x300008
  2540                           ;	Code Protect 00800-03FFF
  2541                           ;	CP0 = OFF, Disabled
  2542                           ;	Code Protect 04000-07FFF
  2543                           ;	CP1 = OFF, Disabled
  2544                           ;	Code Protect 08000-0BFFF
  2545                           ;	CP2 = OFF, Disabled
  2546                           ;	Code Protect 0C000-0FFFF
  2547                           ;	CP3 = OFF, Disabled
  2548                           ;	Code Protect 10000-13FFF
  2549                           ;	CP4 = OFF, Disabled
  2550                           ;	Code Protect 14000-17FFF
  2551                           ;	CP5 = OFF, Disabled
  2552                           ;	Code Protect 18000-1BFFF
  2553                           ;	CP6 = OFF, Disabled
  2554                           ;	Code Protect 1C000-1FFFF
  2555                           ;	CP7 = OFF, Disabled
  2556   300008                     	org	3145736
  2557   300008  FF                 	db	255
  2558                           
  2559                           ;Config register CONFIG5H @ 0x300009
  2560                           ;	Code Protect Boot
  2561                           ;	CPB = OFF, Disabled
  2562                           ;	Data EE Read Protect
  2563                           ;	CPD = OFF, Disabled
  2564   300009                     	org	3145737
  2565   300009  C0                 	db	192
  2566                           
  2567                           ;Config register CONFIG6L @ 0x30000A
  2568                           ;	Table Write Protect 00800-03FFF
  2569                           ;	WRT0 = OFF, Disabled
  2570                           ;	Table Write Protect 04000-07FFF
  2571                           ;	WRT1 = OFF, Disabled
  2572                           ;	Table Write Protect 08000-0BFFF
  2573                           ;	WRT2 = OFF, Disabled
  2574                           ;	Table Write Protect 0C000-0FFFF
  2575                           ;	WRT3 = OFF, Disabled
  2576                           ;	Table Write Protect 10000-13FFF
  2577                           ;	WRT4 = OFF, Disabled
  2578                           ;	Table Write Protect 14000-17FFF
  2579                           ;	WRT5 = OFF, Disabled
  2580                           ;	Table Write Protect 18000-1BFFF
  2581                           ;	WRT6 = OFF, Disabled
  2582                           ;	Table Write Protect 1C000-1FFFF
  2583                           ;	WRT7 = OFF, Disabled
  2584   30000A                     	org	3145738
  2585   30000A  FF                 	db	255
  2586                           
  2587                           ;Config register CONFIG6H @ 0x30000B
  2588                           ;	Config. Write Protect
  2589                           ;	WRTC = OFF, Disabled
  2590                           ;	Table Write Protect Boot
  2591                           ;	WRTB = OFF, Disabled
  2592                           ;	Data EE Write Protect
  2593                           ;	WRTD = OFF, Disabled
  2594   30000B                     	org	3145739
  2595   30000B  E0                 	db	224
  2596                           
  2597                           ;Config register CONFIG7L @ 0x30000C
  2598                           ;	Table Read Protect 00800-03FFF
  2599                           ;	EBRT0 = OFF, Disabled
  2600                           ;	Table Read Protect 04000-07FFF
  2601                           ;	EBRT1 = OFF, Disabled
  2602                           ;	Table Read Protect 08000-0BFFF
  2603                           ;	EBRT2 = OFF, Disabled
  2604                           ;	Table Read Protect 0C000-0FFFF
  2605                           ;	EBRT3 = OFF, Disabled
  2606                           ;	Table Read Protect 10000-13FFF
  2607                           ;	EBRT4 = OFF, Disabled
  2608                           ;	Table Read Protect 14000-17FFF
  2609                           ;	EBRT5 = OFF, Disabled
  2610                           ;	Table Read Protect 18000-1BFFF
  2611                           ;	EBRT6 = OFF, Disabled
  2612                           ;	Table Read Protect 1C000-1FFFF
  2613                           ;	EBRT7 = OFF, Disabled
  2614   30000C                     	org	3145740
  2615   30000C  FF                 	db	255
  2616                           
  2617                           ;Config register CONFIG7H @ 0x30000D
  2618                           ;	Table Read Protect Boot
  2619                           ;	EBRTB = OFF, Disabled
  2620   30000D                     	org	3145741
  2621   30000D  40                 	db	64
  2622                           tosu	equ	0xFFF
  2623                           tosh	equ	0xFFE
  2624                           tosl	equ	0xFFD
  2625                           stkptr	equ	0xFFC
  2626                           pclatu	equ	0xFFB
  2627                           pclath	equ	0xFFA
  2628                           pcl	equ	0xFF9
  2629                           tblptru	equ	0xFF8
  2630                           tblptrh	equ	0xFF7
  2631                           tblptrl	equ	0xFF6
  2632                           tablat	equ	0xFF5
  2633                           prodh	equ	0xFF4
  2634                           prodl	equ	0xFF3
  2635                           indf0	equ	0xFEF
  2636                           postinc0	equ	0xFEE
  2637                           postdec0	equ	0xFED
  2638                           preinc0	equ	0xFEC
  2639                           plusw0	equ	0xFEB
  2640                           fsr0h	equ	0xFEA
  2641                           fsr0l	equ	0xFE9
  2642                           wreg	equ	0xFE8
  2643                           indf1	equ	0xFE7
  2644                           postinc1	equ	0xFE6
  2645                           postdec1	equ	0xFE5
  2646                           preinc1	equ	0xFE4
  2647                           plusw1	equ	0xFE3
  2648                           fsr1h	equ	0xFE2
  2649                           fsr1l	equ	0xFE1
  2650                           bsr	equ	0xFE0
  2651                           indf2	equ	0xFDF
  2652                           postinc2	equ	0xFDE
  2653                           postdec2	equ	0xFDD
  2654                           preinc2	equ	0xFDC
  2655                           plusw2	equ	0xFDB
  2656                           fsr2h	equ	0xFDA
  2657                           fsr2l	equ	0xFD9
  2658                           status	equ	0xFD8

Data Sizes:
    Strings     4
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     18      18
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    draw_string@tableau	PTR unsigned char  size(2) Largest target is 2
		 -> STR_1(CODE[2]), 


Critical Paths under _main in COMRAM

    _main->_goto_lico
    _main->_plot1
    _plot1->___awdiv
    _plot1->_d2command
    _initialisation_afficheur->_d2command
    _command->_wait_status_ok
    _goto_lico->_d2command
    _draw_string->_d1command
    _draw_char->_d1command
    _clear_text->_d2command
    _clear_graphics->_d2command
    _d2command->_wait_status_ok
    _d1command->_wait_status_ok
    _wait_status_ok->_delai_us_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   17649
                                             14 COMRAM     4     4      0
                          _UART_init
                     _clear_graphics
                         _clear_text
                          _draw_char
                        _draw_string
                          _goto_lico
           _initialisation_afficheur
           _initialisation_des_ports
                              _plot1
 ---------------------------------------------------------------------------------
 (1) _plot1                                                6     5      1    3808
                                              8 COMRAM     6     5      1
                            ___awdiv
                            ___awmod
                            _command
                          _d2command
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _initialisation_des_ports                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialisation_afficheur                             1     1      0    3222
                                              8 COMRAM     1     1      0
                    _check_status_ok
                            _command
                          _d1command
                          _d2command
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (2) _command                                              2     2      0     140
                                              4 COMRAM     1     1      0
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
 ---------------------------------------------------------------------------------
 (2) _check_status_ok                                      1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _goto_lico                                            6     5      1    2511
                                              8 COMRAM     6     5      1
                          _d2command
 ---------------------------------------------------------------------------------
 (1) _draw_string                                          2     0      2     932
                                              7 COMRAM     2     0      2
                          _d1command
 ---------------------------------------------------------------------------------
 (1) _draw_char                                            1     1      0     902
                                              7 COMRAM     1     1      0
                          _d1command
 ---------------------------------------------------------------------------------
 (1) _clear_text                                           2     2      0    3058
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (1) _clear_graphics                                       2     2      0    3058
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (2) _d2command                                            4     2      2    2201
                                              4 COMRAM     4     2      2
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (2) _d1command                                            3     2      1     811
                                              4 COMRAM     3     2      1
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (3) _write_d_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _write_c_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _wait_status_ok                                       3     3      0      90
                                              1 COMRAM     3     3      0
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (4) _delai_us_char                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
   _clear_graphics
     _d1command
       _delai_us_char
       _wait_status_ok
         _delai_us_char
       _write_c_aff
       _write_d_aff
     _d2command
       _delai_us_char
       _wait_status_ok
       _write_c_aff
       _write_d_aff
   _clear_text
     _d1command
     _d2command
   _draw_char
     _d1command
   _draw_string
     _d1command
   _goto_lico
     _d2command
   _initialisation_afficheur
     _check_status_ok
     _command
       _delai_us_char
       _wait_status_ok
       _write_c_aff
     _d1command
     _d2command
     _delai_us_char
   _initialisation_des_ports
   _plot1
     ___awdiv
     ___awmod
     _command
     _d2command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
FARRAM          1E0000      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     12      12       1       18.9%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
DATA                 0      0       0       4        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITBIGSFRhhh         E      0       0      37        0.0%
BITBIGSFRhhlhh      1C      0       0      38        0.0%
BITBIGSFRhhlhl      24      0       0      39        0.0%
BITBIGSFRhhllhh      6      0       0      40        0.0%
BITBIGSFRhhllhh      2      0       0      41        0.0%
BITBIGSFRhhllhl      2      0       0      42        0.0%
BITBIGSFRhhlll       3      0       0      43        0.0%
BITBIGSFRhlh         1      0       0      44        0.0%
BITBIGSFRhll         1      0       0      45        0.0%
BITBIGSFRlhh         2      0       0      46        0.0%
BITBIGSFRlhl         3      0       0      47        0.0%
BITBIGSFRllhhh      1E      0       0      48        0.0%
BITBIGSFRllhhlh      1      0       0      49        0.0%
BITBIGSFRllhhll     11      0       0      50        0.0%
BITBIGSFRllhl       2C      0       0      51        0.0%
BITBIGSFRlllll       6      0       0      52        0.0%
BIGRAM             F15      0       0      53        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Jan 11 10:15:42 2023

          ?_initialisation_des_ports 0001                                   l30 165C  
                                 l23 1796                                   l31 165E  
                                 l40 14C0                                   l26 17B0  
                                 l35 1458                                   l44 177C  
                                 l61 1700                                   l55 152E  
                                 l49 1624                                   l74 15BA  
                                 l82 1534                                   l59 16DA  
                                 l76 15D6                                   l68 10E6  
                                 l85 1584                                   u10 1700  
                                 u11 16FC                                   u20 1482  
                                 u21 147E                                   u30 149A  
                                 u31 1496                                   u40 14BE  
                                 u41 14BA                                   u50 1650  
                                 u51 164C                                   u60 1770  
                                 u61 176C                         ___awdiv@sign 0006  
                                l111 1698                                  l104 142A  
                                l200 13A4                                  l106 144A  
                                l116 16D2                                  l133 11B8  
                                l255 1758                                  l192 172C  
                                l512 127C                                  l525 132C  
                                l960 1780                                  l954 16D6  
                                l970 178E                                  l962 1784  
                                l956 16EE                                  l980 179E  
                                l972 1790                                  l964 1788  
                                l958 16F0                                  l990 17AA  
                                l982 17A2                                  l974 1792  
                                l966 178A                                  l992 17AC  
                                l984 17A4                                  l976 1794  
                                l968 178C                                  l994 17AE  
                                l986 17A6                                  l978 179A  
                                l996 144C                                  l988 17A8  
                                l998 146A                         ?_draw_string 0008  
                                u500 14FC                                  u501 14F8  
                                u510 151C                                  u511 1518  
                                u520 11CC                                  u600 12C4  
                                u521 11C8                                  u601 12C0  
                                u530 11E6                                  u610 12E2  
                                u531 11E2                                  u611 12DE  
                                u700 1584                                  u540 120C  
                                u620 12F8                                  u701 1580  
                                u541 1208                                  u621 12F4  
                                u470 15F2                                  u710 13EE  
                                u550 122A                                  u630 131C  
                                u471 15EE                                  u711 13EA  
                                u551 1226                                  u631 1318  
                                u480 1612                                  u720 1402  
                                u640 104A                                  u560 1246  
                                u481 160E                                  u721 13FE  
                                u641 1046                                  u561 1242  
                                u490 14DC                                  u730 144A  
                                u650 1068                                  u570 126C  
                                u810 1398                                  u491 14D8  
                                u731 1446                                  u651 1064  
                                u571 1268                                  u811 1394  
                                u740 1698                                  u660 1598  
                                u580 1290                                  u820 13B2  
                                u741 1694                                  u661 1594  
                                u581 128C                                  u821 13AE  
                                u750 16D2                                  u670 15AC  
                                u590 12AA                                  u751 16CE  
                                u671 15A8                                  u591 12A6  
                                u680 15D6                                  u681 15D2  
                                u690 1560                                  u691 155C  
                       ___awmod@sign 0006                                  wreg 000FE8  
                               l1000 1482                                 l1002 1484  
                               l1010 14A8                                 l1004 148A  
                               l1012 14AC                                 l1020 163C  
                               l1014 14BE                                 l1006 149A  
                               l1022 1650                                 l1030 175C  
                               l1008 14A0                                 l1024 1658  
                               l1032 1770                                 l1018 1626  
                               l1034 1776                                 l1036 177C  
                               l1028 175C                                 l1300 1726  
                               l1302 1728                                 l1304 172A  
                               l1306 172E                                 l1500 11BA  
                               l1510 11E6                                 l1502 11BE  
                               l1600 104A                                 l1280 1702  
                               l1520 1214                                 l1512 11EE  
                               l1504 11CC                                 l1610 1598  
                               l1602 1050                                 l1290 171C  
                               l1282 1714                                 l1530 124E  
                               l1522 121C                                 l1514 11F2  
                               l1506 11D4                                 l1460 15F8  
                               l1612 159C                                 l1620 1530  
                               l1604 1054                                 l1292 171E  
                               l1284 1716                                 l1540 1274  
                               l1532 1250                                 l1524 122A  
                               l1516 11FA                                 l1508 11D8  
                               l1462 15FE                                 l1470 1622  
                               l1454 15DA                                 l1614 15AC  
                               l1622 1536                                 l1630 13DE  
                               l1606 1068                                 l1294 1720  
                               l1286 1718                                 l1534 1256  
                               l1526 1230                                 l1518 120C  
                               l1550 1298                                 l1464 1612  
                               l1456 15DE                                 l1480 14E2  
                               l1616 15B0                                 l1608 1588  
                               l1624 1560                                 l1640 142C  
                               l1632 13EE                                 l1296 1722  
                               l1288 171A                                 l1528 1246  
                               l1536 125C                                 l1560 12CC  
                               l1552 129C                                 l1544 127E  
                               l1466 1618                                 l1458 15F2  
                               l1490 151C                                 l1482 14E8  
                               l1474 14C4                                 l1650 1676  
                               l1642 1660                                 l1618 15BC  
                               l1626 1564                                 l1634 13F2  
                               l1298 1724                                 l1538 126C  
                               l1570 1306                                 l1562 12D4  
                               l1554 12AA                                 l1546 1282  
                               l1468 161E                                 l1492 1522  
                               l1484 14FC                                 l1476 14C8  
                               l1652 1680                                 l1644 166E  
                               l1636 1402                                 l1628 13D6  
                               l1580 1006                                 l1564 12E2  
                               l1572 130C                                 l1556 12B2  
                               l1548 1290                                 l1494 1528  
                               l1486 1502                                 l1478 14DC  
                               l1654 1684                                 l1638 1406  
                               l1590 1026                                 l1582 101A  
                               l1574 131C                                 l1566 12F8  
                               l1558 12C4                                 l1806 1182  
                               l1670 10EA                                 l1750 1332  
                               l1488 1508                                 l1496 152C  
                               l1664 16B0                                 l1656 169A  
                               l1592 1028                                 l1584 101C  
                               l1576 1324                                 l1568 1300  
                               l1680 1144                                 l1672 1114  
                               l1760 134C                                 l1752 1336  
                               l1666 16BA                                 l1658 16A8  
                               l1594 1032                                 l1586 101E  
                               l1682 114E                                 l1674 1126  
                               l1770 1378                                 l1762 1358  
                               l1754 133A                                 l1668 16BE  
                               l1596 1034                                 l1588 1020  
                               l1684 1158                                 l1676 1130  
                               l1780 13C2                                 l1772 137C  
                               l1756 133E                                 l1748 132E  
                               l1598 103A                                 l1678 113A  
                               l1782 13C6                                 l1774 1398  
                               l1758 1342                                 l1688 1162  
                               l1784 13CA                                 l1776 13B2  
                               l1768 1360                                 l1778 13BC  
                               STR_1 1003                                 STR_2 1001  
                               _LATH 000F90                                 _LATJ 000F91  
                               _main 132E                                 prodh 000FF4  
                               prodl 000FF3                                 start 0000  
                       ___param_bank 000000                     ??_wait_status_ok 0002  
                              ?_main 0001                      __end_of___awdiv 127E  
                    __end_of___awmod 132E                      ___awdiv@divisor 0003  
                              _RC1IF 007CF5                      ___awdiv@counter 0005  
                              _TX1IF 007CF4                                _TX2IF 007D24  
                              _PORTH 000F87                                _TRISH 000F99  
                              _TRISJ 000F9A                          _write_c_aff 1798  
                        _write_d_aff 177E                      write_d_aff@data 0001  
                    __end_of_command 177E                                _plot1 10E8  
                              main@i 0011                                main@j 000F  
                              tablat 000FF5                __end_of_delai_us_char 1702  
                    _check_status_ok 1626                                status 000FD8  
                    __initialization 17B2                         __end_of_main 13D4  
                             ??_main 000F                        __activetblptr 000003  
                             ?_plot1 0009                               _ANCON0 000F25  
                             _ANCON1 000F24                               _ANCON2 000F23  
                   ___awdiv@dividend 0001                               _MEMCON 000F26  
                             _RCREG1 000FAE                               _RCREG2 000F1D  
                             _RCSTA1 000FAB                               _RCSTA2 000F22  
                             _SPBRG1 000FAF                               _SPBRG2 000F1E  
                             _TXREG1 000FAD                               _TXREG2 000F1C  
                             _TXSTA1 000FAC                               _TXSTA2 000F21  
                  __end_of_UART_init 175A                            ??___awdiv 0005  
                          ??___awmod 0005                     ___awdiv@quotient 0007  
                    ___awmod@divisor 0003                               isa$std 000001  
                    ___awmod@counter 0005                            ??_command 0005  
                             plot1@x 000E                               plot1@y 0009  
                       __mediumconst 0000                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
            __end_of_check_status_ok 1660                           __accesstop 0060  
            __end_of__initialization 17B2                        ___rparam_used 000001  
                     __pcstackCOMRAM 0001                    __end_of_d1command 1626  
                  __end_of_d2command 1530                        __end_of_plot1 11BA  
                            ??_plot1 000A                       _clear_graphics 169A  
                         _clear_text 1660                         ?_write_c_aff 0001  
                       ?_write_d_aff 0001             _initialisation_afficheur 1006  
                            _SPBRGH1 000FD4                              _SPBRGH2 000F1F  
                   ?_check_status_ok 0001                    wait_status_ok@err 0002  
                  wait_status_ok@res 0004               __end_of_clear_graphics 16D4  
           _initialisation_des_ports 1702                              __Hparam 0000  
                            __Lparam 0000                    __end_of_draw_char 15D8  
                            ___awdiv 11BA                              ___awmod 127E  
                       __psmallconst 1000                              __pcinit 17B2  
                            __ramtop 1000                       draw_char@dccar 0008  
                            __ptext0 132E                              __ptext1 10E8  
                            __ptext2 127E                              __ptext3 11BA  
                            __ptext4 1702                              __ptext5 1006  
                            __ptext6 175A                              __ptext7 1626  
                            __ptext8 13D4                              __ptext9 1530  
                            _command 175A                   draw_string@tableau 0008  
                   ___awmod@dividend 0001                    __end_of_goto_lico 144C  
               end_of_initialization 17B2                      ?_clear_graphics 0001  
                        ?_clear_text 0001                         goto_lico@adr 000D  
                          _UART_init 172E                            _TRISAbits 000F92  
                          _TRISCbits 000F94                            _TRISDbits 000F95  
                          _TRISFbits 000F97                            _TRISGbits 000F98  
                  clear_graphics@add 0009                           command@cmd 0005  
                 check_status_ok@res 0001                            _d1command 15D8  
                         ?_UART_init 0001                            _d2command 14C2  
                      ??_draw_string 000A                  start_initialization 17B2  
                      _delai_us_char 16D4           ??_initialisation_afficheur 0009  
                      clear_text@add 0009                           ?_d1command 0005  
               delai_us_char@ucdelai 0001                           ?_d2command 0005  
         ??_initialisation_des_ports 0001                  __end_of_draw_string 1586  
                     ?_delai_us_char 0001                             ?___awdiv 0001  
                           ?___awmod 0001                          ??_UART_init 0001  
                          _draw_char 1586                             ?_command 0001  
                     _wait_status_ok 144C                          __smallconst 1000  
                           _BAUDCON1 000F65                             _BAUDCON2 000F20  
                   goto_lico@colonne 0009                          _PADCFG1bits 000F53  
                   ??_clear_graphics 0009                   write_c_aff@command 0001  
                          _goto_lico 13D4                             _LATCbits 000F8B  
                           _LATFbits 000F8E                             _LATGbits 000F8F  
                           _LATJbits 000F91                             _PIR2bits 000FA1  
                       ??_clear_text 0009                             _SSP2CON1 000F67  
                           _SSP2STAT 000F68               __end_of_wait_status_ok 14C2  
                        ??_d1command 0006                           ?_draw_char 0001  
                        ??_d2command 0007                          _draw_string 1530  
                        _INTCON2bits 000FF1                      ??_delai_us_char 0001  
                 __end_of_clear_text 169A                           ?_goto_lico 0009  
                           __Hrparam 0000                             __Lrparam 0000  
   __end_of_initialisation_afficheur 10E8                      ?_wait_status_ok 0001  
initialisation_afficheur@error_count 0009     __end_of_initialisation_des_ports 172E  
                           __ptext10 1586                             __ptext11 1660  
                           __ptext12 169A                             __ptext13 14C2  
                           __ptext14 15D8                             __ptext15 177E  
                           __ptext16 1798                             __ptext17 144C  
                           __ptext18 16D4                             __ptext19 172E  
                       _SSP2CON1bits 000F67                             isa$xinst 000000  
                  ??_check_status_ok 0001                          ??_draw_char 0008  
                      ??_write_c_aff 0001                        ??_write_d_aff 0001  
                        ??_goto_lico 000A                             plot1@add 000C  
                     goto_lico@ligne 000C                         d1command@cmd 0005  
                       d1command@res 0007                          d1command@d1 0006  
                __end_of_write_c_aff 17B2                  __end_of_write_d_aff 1798  
                       d2command@cmd 0006            ?_initialisation_afficheur 0001  
                       d2command@res 0008                 wait_status_ok@status 0003  
                        d2command@d1 0007                          d2command@d2 0005  
