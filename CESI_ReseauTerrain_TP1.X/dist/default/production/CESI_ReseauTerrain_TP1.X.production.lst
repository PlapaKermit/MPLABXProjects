

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Jan 16 09:29:33 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F87K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43   000000                     
    44                           ; Generated 06/04/2022 GMT
    45                           ; 
    46                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F87K22 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78   000000                     
    79                           	psect	idataCOMRAM
    80   001A8A                     __pidataCOMRAM:
    81                           	callstack 0
    82                           
    83                           ;initializer for main@F6477
    84   001A8A  54                 	db	84
    85   001A8B  65                 	db	101
    86   001A8C  73                 	db	115
    87   001A8D  74                 	db	116
    88   001A8E  20                 	db	32
    89   001A8F  45                 	db	69
    90   001A90  45                 	db	69
    91   001A91  50                 	db	80
    92   001A92  52                 	db	82
    93   001A93  4F                 	db	79
    94   001A94  4D                 	db	77
    95   001A95  20                 	db	32
    96   001A96  00                 	db	0
    97   001A97  00                 	db	0
    98   001A98  00                 	db	0
    99   001A99  00                 	db	0
   100   000000                     _LATJbits	set	3985
   101   000000                     _LATH	set	3984
   102   000000                     _TRISAbits	set	3986
   103   000000                     _SSP2CON1bits	set	3943
   104   000000                     _LATJ	set	3985
   105   000000                     _ANCON2	set	3875
   106   000000                     _ANCON1	set	3876
   107   000000                     _ANCON0	set	3877
   108   000000                     _MEMCON	set	3878
   109   000000                     _PADCFG1bits	set	3923
   110   000000                     _LATCbits	set	3979
   111   000000                     _LATFbits	set	3982
   112   000000                     _LATGbits	set	3983
   113   000000                     _TRISCbits	set	3988
   114   000000                     _TRISFbits	set	3991
   115   000000                     _TRISDbits	set	3989
   116   000000                     _TRISGbits	set	3992
   117   000000                     _PIR2bits	set	4001
   118   000000                     _TRISJ	set	3994
   119   000000                     _TRISH	set	3993
   120   000000                     _INTCON2bits	set	4081
   121   000000                     _SSP2CON1	set	3943
   122   000000                     _SSP2STAT	set	3944
   123   000000                     _PORTH	set	3975
   124   000000                     _SSP2BUF	set	3946
   125                           
   126                           	psect	smallconst
   127   001000                     __psmallconst:
   128                           	callstack 0
   129   001000  00                 	db	0
   130   001001                     STR_1:
   131   001001  48                 	db	72	;'H'
   132   001002  65                 	db	101	;'e'
   133   001003  6C                 	db	108	;'l'
   134   001004  6C                 	db	108	;'l'
   135   001005  6F                 	db	111	;'o'
   136   001006  00                 	db	0
   137   001007  00                 	db	0	; dummy byte at the end
   138   000000                     
   139                           ; #config settings
   140                           
   141                           	psect	cinit
   142   0019AA                     __pcinit:
   143                           	callstack 0
   144   0019AA                     start_initialization:
   145                           	callstack 0
   146   0019AA                     __initialization:
   147                           	callstack 0
   148                           
   149                           ; Initialize objects allocated to COMRAM (16 bytes)
   150                           ; load TBLPTR registers with __pidataCOMRAM
   151   0019AA  0E8A               	movlw	low __pidataCOMRAM
   152   0019AC  6EF6               	movwf	tblptrl,c
   153   0019AE  0E1A               	movlw	high __pidataCOMRAM
   154   0019B0  6EF7               	movwf	tblptrh,c
   155   0019B2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   156   0019B4  6EF8               	movwf	tblptru,c
   157   0019B6  EE00  F03C         	lfsr	0,__pdataCOMRAM
   158   0019BA  EE10 F010          	lfsr	1,16
   159   0019BE                     copy_data0:
   160   0019BE  0009               	tblrd		*+
   161   0019C0  CFF5 FFEE          	movff	tablat,postinc0
   162   0019C4  50E5               	movf	postdec1,w,c
   163   0019C6  50E1               	movf	fsr1l,w,c
   164   0019C8  E1FA               	bnz	copy_data0
   165                           
   166                           ; Clear objects allocated to COMRAM (3 bytes)
   167   0019CA  6A4E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   168   0019CC  6A4D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   169   0019CE  6A4C               	clrf	__pbssCOMRAM& (0+255),c
   170   0019D0                     end_of_initialization:
   171                           	callstack 0
   172   0019D0                     __end_of__initialization:
   173                           	callstack 0
   174   0019D0  0100               	movlb	0
   175   0019D2  EF04  F008         	goto	_main	;jump to C main() function
   176                           
   177                           	psect	bssCOMRAM
   178   00004C                     __pbssCOMRAM:
   179                           	callstack 0
   180   00004C                     	ds	3
   181                           
   182                           	psect	dataCOMRAM
   183   00003C                     __pdataCOMRAM:
   184                           	callstack 0
   185   00003C                     main@F6477:
   186                           	callstack 0
   187   00003C                     	ds	16
   188                           
   189                           	psect	cstackCOMRAM
   190   000001                     __pcstackCOMRAM:
   191                           	callstack 0
   192   000001                     ?___awdiv:
   193                           	callstack 0
   194   000001                     ?___awmod:
   195                           	callstack 0
   196   000001                     write_d_aff@data:
   197                           	callstack 0
   198   000001                     write_c_aff@command:
   199                           	callstack 0
   200   000001                     check_status_ok@res:
   201                           	callstack 0
   202   000001                     delai_us_char@ucdelai:
   203                           	callstack 0
   204   000001                     SPI_ExchangeByte@data:
   205                           	callstack 0
   206   000001                     SPI_ExchangeBlock@block:
   207                           	callstack 0
   208   000001                     ___awdiv@dividend:
   209                           	callstack 0
   210   000001                     ___awmod@dividend:
   211                           	callstack 0
   212                           
   213                           ; 2 bytes @ 0x0
   214   000001                     	ds	1
   215   000002                     wait_status_ok@err:
   216                           	callstack 0
   217   000002                     EEP_SPI_IsWriteInProgress@u8WIP:
   218                           	callstack 0
   219                           
   220                           ; 1 bytes @ 0x1
   221   000002                     	ds	1
   222   000003                     wait_status_ok@status:
   223                           	callstack 0
   224   000003                     EEP_SPI_ReadByte@Fu8Address:
   225                           	callstack 0
   226   000003                     SPI_ExchangeBlock@blockSize:
   227                           	callstack 0
   228   000003                     ___awdiv@divisor:
   229                           	callstack 0
   230   000003                     ___awmod@divisor:
   231                           	callstack 0
   232                           
   233                           ; 2 bytes @ 0x2
   234   000003                     	ds	1
   235   000004                     wait_status_ok@res:
   236                           	callstack 0
   237   000004                     EEP_SPI_ReadByte@u8ReadData:
   238                           	callstack 0
   239                           
   240                           ; 1 bytes @ 0x3
   241   000004                     	ds	1
   242   000005                     command@cmd:
   243                           	callstack 0
   244   000005                     d1command@cmd:
   245                           	callstack 0
   246   000005                     d2command@d2:
   247                           	callstack 0
   248   000005                     ___awdiv@counter:
   249                           	callstack 0
   250   000005                     ___awmod@counter:
   251                           	callstack 0
   252   000005                     SPI_ExchangeBlock@data:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0x4
   256   000005                     	ds	1
   257   000006                     d1command@d1:
   258                           	callstack 0
   259   000006                     d2command@cmd:
   260                           	callstack 0
   261   000006                     ___awdiv@sign:
   262                           	callstack 0
   263   000006                     ___awmod@sign:
   264                           	callstack 0
   265                           
   266                           ; 1 bytes @ 0x5
   267   000006                     	ds	1
   268   000007                     d1command@res:
   269                           	callstack 0
   270   000007                     d2command@d1:
   271                           	callstack 0
   272   000007                     EEP_SPI_WriteByte@Fu8Data:
   273                           	callstack 0
   274   000007                     ___awdiv@quotient:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x6
   278   000007                     	ds	1
   279   000008                     d2command@res:
   280                           	callstack 0
   281   000008                     EEP_SPI_WriteByte@Fu8Address:
   282                           	callstack 0
   283   000008                     draw_string@tableau:
   284                           	callstack 0
   285                           
   286                           ; 2 bytes @ 0x7
   287   000008                     	ds	1
   288   000009                     initialisation_afficheur@error_count:
   289                           	callstack 0
   290   000009                     goto_lico@colonne:
   291                           	callstack 0
   292   000009                     plot1@y:
   293                           	callstack 0
   294   000009                     clear_text@add:
   295                           	callstack 0
   296   000009                     clear_graphics@add:
   297                           	callstack 0
   298   000009                     EEP_SPI_WriteByte@tu8Data:
   299                           	callstack 0
   300                           
   301                           ; 3 bytes @ 0x8
   302   000009                     	ds	1
   303   00000A                     ??_goto_lico:
   304   00000A                     ??_plot1:
   305                           
   306                           ; 1 bytes @ 0x9
   307   00000A                     	ds	2
   308   00000C                     goto_lico@ligne:
   309                           	callstack 0
   310   00000C                     plot1@add:
   311                           	callstack 0
   312   00000C                     EEP_SPI_WriteBytes@Fpu8Data:
   313                           	callstack 0
   314                           
   315                           ; 2 bytes @ 0xB
   316   00000C                     	ds	1
   317   00000D                     goto_lico@adr:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0xC
   321   00000D                     	ds	1
   322   00000E                     plot1@x:
   323                           	callstack 0
   324   00000E                     EEP_SPI_WriteBytes@Fu8Size:
   325                           	callstack 0
   326                           
   327                           ; 1 bytes @ 0xD
   328   00000E                     	ds	1
   329   00000F                     drawVericalLine@colonne:
   330                           	callstack 0
   331   00000F                     EEP_SPI_WriteBytes@Fu8Address:
   332                           	callstack 0
   333                           
   334                           ; 1 bytes @ 0xE
   335   00000F                     	ds	1
   336   000010                     drawVericalLine@lenght:
   337                           	callstack 0
   338   000010                     EEP_SPI_WriteBytes@u8Index:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0xF
   342   000010                     	ds	1
   343   000011                     drawVericalLine@ligne:
   344                           	callstack 0
   345                           
   346                           ; 1 bytes @ 0x10
   347   000011                     	ds	1
   348   000012                     drawVericalLine@index:
   349                           	callstack 0
   350                           
   351                           ; 1 bytes @ 0x11
   352   000012                     	ds	1
   353   000013                     ??_main:
   354                           
   355                           ; 1 bytes @ 0x12
   356   000013                     	ds	1
   357   000014                     main@tu8Data:
   358                           	callstack 0
   359                           
   360                           ; 16 bytes @ 0x13
   361   000014                     	ds	16
   362   000024                     main@tu8DataFromEEPROM:
   363                           	callstack 0
   364                           
   365                           ; 20 bytes @ 0x23
   366   000024                     	ds	20
   367   000038                     _main$1411:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x37
   371   000038                     	ds	2
   372   00003A                     main@u8Index:
   373                           	callstack 0
   374                           
   375                           ; 1 bytes @ 0x39
   376   00003A                     	ds	1
   377   00003B                     main@u8Cpt:
   378                           	callstack 0
   379                           
   380                           ; 1 bytes @ 0x3A
   381   00003B                     	ds	1
   382                           
   383 ;;
   384 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   385 ;;
   386 ;; *************** function _main *****************
   387 ;; Defined at:
   388 ;;		line 46 in file "main.c"
   389 ;; Parameters:    Size  Location     Type
   390 ;;		None
   391 ;; Auto vars:     Size  Location     Type
   392 ;;  tu8DataFromE   20   35[COMRAM] unsigned char [20]
   393 ;;  tu8Data        16   19[COMRAM] unsigned char [16]
   394 ;;  u8Cpt           1   58[COMRAM] unsigned char 
   395 ;;  u8Index         1   57[COMRAM] unsigned char 
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   400 ;; Tracked objects:
   401 ;;		On entry : 0/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   406 ;;      Locals:        40       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   407 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   408 ;;      Totals:        41       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   409 ;;Total ram usage:       41 bytes
   410 ;; Hardware stack levels required when called: 5
   411 ;; This function calls:
   412 ;;		_EEP_SPI_Initialize
   413 ;;		_EEP_SPI_ReadByte
   414 ;;		_EEP_SPI_WriteBytes
   415 ;;		_SPI_Initialize
   416 ;;		___awdiv
   417 ;;		_clear_graphics
   418 ;;		_clear_text
   419 ;;		_drawVericalLine
   420 ;;		_draw_string
   421 ;;		_goto_lico
   422 ;;		_initialisation_afficheur
   423 ;;		_initialisation_des_ports
   424 ;; This function is called by:
   425 ;;		Startup code after reset
   426 ;; This function uses a non-reentrant model
   427 ;;
   428                           
   429                           	psect	text0
   430   001008                     __ptext0:
   431                           	callstack 0
   432   001008                     _main:
   433                           	callstack 26
   434   001008                     
   435                           ;main.c: 48: uint8_t tu8Data[16] = {0x54,0x65,0x73,0x74,0x20,0x45,0x45,0x50,0x52,0x4F,0x
      +                          4D,0x20,0x00,0x00,0x00,0x00};
   436   001008  EE20  F03C         	lfsr	2,main@F6477
   437   00100C  EE10  F014         	lfsr	1,main@tu8Data
   438   001010  0E0F               	movlw	15
   439   001012                     u1051:
   440   001012  CFDB FFE3          	movff	plusw2,plusw1
   441   001016  06E8               	decf	wreg,f,c
   442   001018  E2FC               	bc	u1051
   443   00101A                     
   444                           ;main.c: 53: for(u8Index=0; u8Index<20; u8Index++)
   445   00101A  0E00               	movlw	0
   446   00101C  6E3A               	movwf	main@u8Index^0,c
   447   00101E                     l2135:
   448                           
   449                           ;main.c: 54: {;main.c: 55: tu8DataFromEEPROM[u8Index] = 0x00;
   450   00101E  0E24               	movlw	low main@tu8DataFromEEPROM
   451   001020  243A               	addwf	main@u8Index^0,w,c
   452   001022  6ED9               	movwf	fsr2l,c
   453   001024  6ADA               	clrf	fsr2h,c
   454   001026  0E00               	movlw	high main@tu8DataFromEEPROM
   455   001028  22DA               	addwfc	fsr2h,f,c
   456   00102A  0E00               	movlw	0
   457   00102C  6EDF               	movwf	indf2,c
   458   00102E  2A3A               	incf	main@u8Index^0,f,c
   459   001030  0E13               	movlw	19
   460   001032  643A               	cpfsgt	main@u8Index^0,c
   461   001034  EF1E  F008         	goto	u1061
   462   001038  EF20  F008         	goto	u1060
   463   00103C                     u1061:
   464   00103C  EF0F  F008         	goto	l2135
   465   001040                     u1060:
   466   001040                     
   467                           ;main.c: 56: };main.c: 58: initialisation_des_ports();
   468   001040  ECEB  F00C         	call	_initialisation_des_ports	;wreg free
   469   001044                     
   470                           ;main.c: 59: initialisation_afficheur();
   471   001044  EC0B  F009         	call	_initialisation_afficheur	;wreg free
   472   001048                     
   473                           ;main.c: 60: SPI_Initialize();
   474   001048  EC3A  F00D         	call	_SPI_Initialize	;wreg free
   475   00104C                     
   476                           ;main.c: 61: EEP_SPI_Initialize();
   477   00104C  EC53  F00D         	call	_EEP_SPI_Initialize	;wreg free
   478   001050                     
   479                           ;main.c: 63: clear_text();
   480   001050  EC3C  F00C         	call	_clear_text	;wreg free
   481   001054                     
   482                           ;main.c: 64: clear_graphics();
   483   001054  EC59  F00C         	call	_clear_graphics	;wreg free
   484   001058                     
   485                           ;main.c: 66: goto_lico(0,0);
   486   001058  0E00               	movlw	0
   487   00105A  6E09               	movwf	goto_lico@colonne^0,c
   488   00105C  0E00               	movlw	0
   489   00105E  ECDC  F00A         	call	_goto_lico
   490   001062                     
   491                           ;main.c: 67: draw_string((unsigned char *)"Hello");
   492   001062  0E01               	movlw	low STR_1
   493   001064  6E08               	movwf	draw_string@tableau^0,c
   494   001066  0E10               	movlw	high STR_1
   495   001068  6E09               	movwf	(draw_string@tableau+1)^0,c
   496   00106A  EC9F  F00A         	call	_draw_string	;wreg free
   497   00106E                     
   498                           ;main.c: 69: drawVericalLine(10, 180, 80);
   499   00106E  0EB4               	movlw	180
   500   001070  6E0F               	movwf	drawVericalLine@colonne^0,c
   501   001072  0E50               	movlw	80
   502   001074  6E10               	movwf	drawVericalLine@lenght^0,c
   503   001076  0E0A               	movlw	10
   504   001078  EC8F  F00C         	call	_drawVericalLine
   505   00107C                     
   506                           ;main.c: 71: for(u8Index=0; u8Index<20; u8Index++)
   507   00107C  0E00               	movlw	0
   508   00107E  6E3A               	movwf	main@u8Index^0,c
   509   001080                     l2165:
   510                           
   511                           ;main.c: 72: {;main.c: 73: tu8DataFromEEPROM[u8Index] = EEP_SPI_ReadByte(u8Index);
   512   001080  0E24               	movlw	low main@tu8DataFromEEPROM
   513   001082  243A               	addwf	main@u8Index^0,w,c
   514   001084  6ED9               	movwf	fsr2l,c
   515   001086  6ADA               	clrf	fsr2h,c
   516   001088  0E00               	movlw	high main@tu8DataFromEEPROM
   517   00108A  22DA               	addwfc	fsr2h,f,c
   518   00108C  503A               	movf	main@u8Index^0,w,c
   519   00108E  EC76  F00C         	call	_EEP_SPI_ReadByte
   520   001092  6EDF               	movwf	indf2,c
   521   001094  2A3A               	incf	main@u8Index^0,f,c
   522   001096  0E13               	movlw	19
   523   001098  643A               	cpfsgt	main@u8Index^0,c
   524   00109A  EF51  F008         	goto	u1071
   525   00109E  EF53  F008         	goto	u1070
   526   0010A2                     u1071:
   527   0010A2  EF40  F008         	goto	l2165
   528   0010A6                     u1070:
   529   0010A6                     
   530                           ;main.c: 74: };main.c: 77: goto_lico(1,1);
   531   0010A6  0E01               	movlw	1
   532   0010A8  6E09               	movwf	goto_lico@colonne^0,c
   533   0010AA  0E01               	movlw	1
   534   0010AC  ECDC  F00A         	call	_goto_lico
   535   0010B0                     
   536                           ;main.c: 78: draw_string((unsigned char *)&tu8DataFromEEPROM);
   537   0010B0  0E24               	movlw	low main@tu8DataFromEEPROM
   538   0010B2  6E08               	movwf	draw_string@tableau^0,c
   539   0010B4  0E00               	movlw	high main@tu8DataFromEEPROM
   540   0010B6  6E09               	movwf	(draw_string@tableau+1)^0,c
   541   0010B8  EC9F  F00A         	call	_draw_string	;wreg free
   542   0010BC                     
   543                           ;main.c: 81: if( (tu8DataFromEEPROM[12]<0x30)||(tu8DataFromEEPROM[12]>0x39);main.c: 82: 
      +                          || (tu8DataFromEEPROM[13]<0x30)||(tu8DataFromEEPROM[13]>0x39);main.c: 83: || (tu8DataFro
      +                          mEEPROM[14]<0x30)||(tu8DataFromEEPROM[14]>0x39);main.c: 84: )
   544   0010BC  0E2F               	movlw	47
   545   0010BE  6430               	cpfsgt	(main@tu8DataFromEEPROM+12)^0,c
   546   0010C0  EF64  F008         	goto	u1081
   547   0010C4  EF66  F008         	goto	u1080
   548   0010C8                     u1081:
   549   0010C8  EF8E  F008         	goto	l2187
   550   0010CC                     u1080:
   551   0010CC  0E3A               	movlw	58
   552   0010CE  6030               	cpfslt	(main@tu8DataFromEEPROM+12)^0,c
   553   0010D0  EF6C  F008         	goto	u1091
   554   0010D4  EF6E  F008         	goto	u1090
   555   0010D8                     u1091:
   556   0010D8  EF8E  F008         	goto	l2187
   557   0010DC                     u1090:
   558   0010DC  0E2F               	movlw	47
   559   0010DE  6431               	cpfsgt	(main@tu8DataFromEEPROM+13)^0,c
   560   0010E0  EF74  F008         	goto	u1101
   561   0010E4  EF76  F008         	goto	u1100
   562   0010E8                     u1101:
   563   0010E8  EF8E  F008         	goto	l2187
   564   0010EC                     u1100:
   565   0010EC  0E3A               	movlw	58
   566   0010EE  6031               	cpfslt	(main@tu8DataFromEEPROM+13)^0,c
   567   0010F0  EF7C  F008         	goto	u1111
   568   0010F4  EF7E  F008         	goto	u1110
   569   0010F8                     u1111:
   570   0010F8  EF8E  F008         	goto	l2187
   571   0010FC                     u1110:
   572   0010FC  0E2F               	movlw	47
   573   0010FE  6432               	cpfsgt	(main@tu8DataFromEEPROM+14)^0,c
   574   001100  EF84  F008         	goto	u1121
   575   001104  EF86  F008         	goto	u1120
   576   001108                     u1121:
   577   001108  EF8E  F008         	goto	l2187
   578   00110C                     u1120:
   579   00110C  0E39               	movlw	57
   580   00110E  6432               	cpfsgt	(main@tu8DataFromEEPROM+14)^0,c
   581   001110  EF8C  F008         	goto	u1131
   582   001114  EF8E  F008         	goto	u1130
   583   001118                     u1131:
   584   001118  EF92  F008         	goto	l2189
   585   00111C                     u1130:
   586   00111C                     l2187:
   587                           
   588                           ;main.c: 85: {;main.c: 86: u8Cpt = 0;
   589   00111C  0E00               	movlw	0
   590   00111E  6E3B               	movwf	main@u8Cpt^0,c
   591                           
   592                           ;main.c: 87: }
   593   001120  EFA8  F008         	goto	l2197
   594   001124                     l2189:
   595                           
   596                           ;main.c: 88: else;main.c: 89: {;main.c: 90: u8Cpt = ((tu8DataFromEEPROM[12]-0x30)*100)+(
      +                          (tu8DataFromEEPROM[13]-0x30)*10)+(tu8DataFromEEPROM[14]-0x30);
   597   001124  5031               	movf	(main@tu8DataFromEEPROM+13)^0,w,c
   598   001126  0D0A               	mullw	10
   599   001128  CFF3 F013          	movff	prodl,??_main
   600   00112C  5030               	movf	(main@tu8DataFromEEPROM+12)^0,w,c
   601   00112E  0D64               	mullw	100
   602   001130  50F3               	movf	243,w,c
   603   001132  2413               	addwf	??_main^0,w,c
   604   001134  2432               	addwf	(main@tu8DataFromEEPROM+14)^0,w,c
   605   001136  0F30               	addlw	48
   606   001138  6E3B               	movwf	main@u8Cpt^0,c
   607   00113A                     
   608                           ;main.c: 91: if(u8Cpt>99)
   609   00113A  0E63               	movlw	99
   610   00113C  643B               	cpfsgt	main@u8Cpt^0,c
   611   00113E  EFA3  F008         	goto	u1141
   612   001142  EFA5  F008         	goto	u1140
   613   001146                     u1141:
   614   001146  EFA7  F008         	goto	l2195
   615   00114A                     u1140:
   616   00114A  EF8E  F008         	goto	l2187
   617   00114E                     l2195:
   618                           
   619                           ;main.c: 95: else;main.c: 96: {;main.c: 97: u8Cpt++;
   620   00114E  2A3B               	incf	main@u8Cpt^0,f,c
   621   001150                     l2197:
   622                           
   623                           ;main.c: 98: };main.c: 99: };main.c: 100: tu8Data[12] = (u8Cpt/100)+0x30;
   624   001150  C03B  F001         	movff	main@u8Cpt,___awdiv@dividend
   625   001154  6A02               	clrf	(___awdiv@dividend+1)^0,c
   626   001156  0E00               	movlw	0
   627   001158  6E04               	movwf	(___awdiv@divisor+1)^0,c
   628   00115A  0E64               	movlw	100
   629   00115C  6E03               	movwf	___awdiv@divisor^0,c
   630   00115E  ECE5  F009         	call	___awdiv	;wreg free
   631   001162  5001               	movf	?___awdiv^0,w,c
   632   001164  0F30               	addlw	48
   633   001166  6E20               	movwf	(main@tu8Data+12)^0,c
   634   001168                     
   635                           ;main.c: 101: tu8Data[13] = ((u8Cpt-(u8Cpt/100))/10)+0x30;
   636   001168  0E00               	movlw	0
   637   00116A  6E04               	movwf	(___awdiv@divisor+1)^0,c
   638   00116C  0E64               	movlw	100
   639   00116E  6E03               	movwf	___awdiv@divisor^0,c
   640   001170  C03B  F001         	movff	main@u8Cpt,___awdiv@dividend
   641   001174  6A02               	clrf	(___awdiv@dividend+1)^0,c
   642   001176  ECE5  F009         	call	___awdiv	;wreg free
   643   00117A  5001               	movf	?___awdiv^0,w,c
   644   00117C  5C3B               	subwf	main@u8Cpt^0,w,c
   645   00117E  6E38               	movwf	_main$1411^0,c
   646   001180  5002               	movf	(?___awdiv+1)^0,w,c
   647   001182  A0D8               	btfss	status,0,c
   648   001184  2802               	incf	(?___awdiv+1)^0,w,c
   649   001186  6A39               	clrf	(_main$1411+1)^0,c
   650   001188  5E39               	subwf	(_main$1411+1)^0,f,c
   651   00118A                     
   652                           ;main.c: 101: tu8Data[13] = ((u8Cpt-(u8Cpt/100))/10)+0x30;
   653   00118A  C038  F001         	movff	_main$1411,___awdiv@dividend
   654   00118E  C039  F002         	movff	_main$1411+1,___awdiv@dividend+1
   655   001192  0E00               	movlw	0
   656   001194  6E04               	movwf	(___awdiv@divisor+1)^0,c
   657   001196  0E0A               	movlw	10
   658   001198  6E03               	movwf	___awdiv@divisor^0,c
   659   00119A  ECE5  F009         	call	___awdiv	;wreg free
   660   00119E  5001               	movf	?___awdiv^0,w,c
   661   0011A0  0F30               	addlw	48
   662   0011A2  6E21               	movwf	(main@tu8Data+13)^0,c
   663   0011A4                     
   664                           ;main.c: 102: tu8Data[14] = (u8Cpt-(u8Cpt/100)-((u8Cpt-(u8Cpt/100))/10))+0x30;
   665   0011A4  0E00               	movlw	0
   666   0011A6  6E04               	movwf	(___awdiv@divisor+1)^0,c
   667   0011A8  0E64               	movlw	100
   668   0011AA  6E03               	movwf	___awdiv@divisor^0,c
   669   0011AC  C03B  F001         	movff	main@u8Cpt,___awdiv@dividend
   670   0011B0  6A02               	clrf	(___awdiv@dividend+1)^0,c
   671   0011B2  ECE5  F009         	call	___awdiv	;wreg free
   672   0011B6  5001               	movf	?___awdiv^0,w,c
   673   0011B8  5C3B               	subwf	main@u8Cpt^0,w,c
   674   0011BA  6E38               	movwf	_main$1411^0,c
   675   0011BC  5002               	movf	(?___awdiv+1)^0,w,c
   676   0011BE  A0D8               	btfss	status,0,c
   677   0011C0  2802               	incf	(?___awdiv+1)^0,w,c
   678   0011C2  6A39               	clrf	(_main$1411+1)^0,c
   679   0011C4  5E39               	subwf	(_main$1411+1)^0,f,c
   680   0011C6                     
   681                           ;main.c: 102: tu8Data[14] = (u8Cpt-(u8Cpt/100)-((u8Cpt-(u8Cpt/100))/10))+0x30;
   682   0011C6  C03B  F001         	movff	main@u8Cpt,___awdiv@dividend
   683   0011CA  6A02               	clrf	(___awdiv@dividend+1)^0,c
   684   0011CC  0E00               	movlw	0
   685   0011CE  6E04               	movwf	(___awdiv@divisor+1)^0,c
   686   0011D0  0E64               	movlw	100
   687   0011D2  6E03               	movwf	___awdiv@divisor^0,c
   688   0011D4  ECE5  F009         	call	___awdiv	;wreg free
   689   0011D8  5001               	movf	?___awdiv^0,w,c
   690   0011DA  0800               	sublw	0
   691   0011DC  6E13               	movwf	??_main^0,c
   692   0011DE  C038  F001         	movff	_main$1411,___awdiv@dividend
   693   0011E2  C039  F002         	movff	_main$1411+1,___awdiv@dividend+1
   694   0011E6  0E00               	movlw	0
   695   0011E8  6E04               	movwf	(___awdiv@divisor+1)^0,c
   696   0011EA  0E0A               	movlw	10
   697   0011EC  6E03               	movwf	___awdiv@divisor^0,c
   698   0011EE  ECE5  F009         	call	___awdiv	;wreg free
   699   0011F2  5001               	movf	?___awdiv^0,w,c
   700   0011F4  5C13               	subwf	??_main^0,w,c
   701   0011F6  243B               	addwf	main@u8Cpt^0,w,c
   702   0011F8  0F30               	addlw	48
   703   0011FA  6E22               	movwf	(main@tu8Data+14)^0,c
   704   0011FC                     
   705                           ;main.c: 105: EEP_SPI_WriteBytes(0x00, (uint8_t *)&tu8Data, 16);
   706   0011FC  0E14               	movlw	low main@tu8Data
   707   0011FE  6E0C               	movwf	EEP_SPI_WriteBytes@Fpu8Data^0,c
   708   001200  0E00               	movlw	high main@tu8Data
   709   001202  6E0D               	movwf	(EEP_SPI_WriteBytes@Fpu8Data+1)^0,c
   710   001204  0E10               	movlw	16
   711   001206  6E0E               	movwf	EEP_SPI_WriteBytes@Fu8Size^0,c
   712   001208  0E00               	movlw	0
   713   00120A  EC01  F00C         	call	_EEP_SPI_WriteBytes
   714   00120E                     l62:
   715   00120E  EF07  F009         	goto	l62
   716   001212  EF00  F000         	goto	start
   717   001216                     __end_of_main:
   718                           	callstack 0
   719                           
   720 ;; *************** function _initialisation_des_ports *****************
   721 ;; Defined at:
   722 ;;		line 15 in file "main.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;		None
   725 ;; Auto vars:     Size  Location     Type
   726 ;;		None
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		wreg, status,2
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   740 ;;Total ram usage:        0 bytes
   741 ;; Hardware stack levels used: 1
   742 ;; This function calls:
   743 ;;		Nothing
   744 ;; This function is called by:
   745 ;;		_main
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           	psect	text1
   750   0019D6                     __ptext1:
   751                           	callstack 0
   752   0019D6                     _initialisation_des_ports:
   753                           	callstack 30
   754   0019D6                     
   755                           ;main.c: 18: MEMCON=0xA0;
   756   0019D6  0EA0               	movlw	160
   757   0019D8  010F               	movlb	15	; () banked
   758   0019DA  6F26               	movwf	38,b	;volatile
   759                           
   760                           ;main.c: 21: ANCON0=0x03;
   761   0019DC  0E03               	movlw	3
   762   0019DE  6F25               	movwf	37,b	;volatile
   763                           
   764                           ;main.c: 22: ANCON1=0x08;
   765   0019E0  0E08               	movlw	8
   766   0019E2  6F24               	movwf	36,b	;volatile
   767                           
   768                           ;main.c: 23: ANCON2=0x00;
   769   0019E4  0E00               	movlw	0
   770   0019E6  6F23               	movwf	35,b	;volatile
   771   0019E8                     
   772                           ; BSR set to: 15
   773                           ;main.c: 27: LATCbits.LATC2=0;
   774   0019E8  948B               	bcf	139,2,c	;volatile
   775   0019EA                     
   776                           ; BSR set to: 15
   777                           ;main.c: 28: LATCbits.LATC1=0;
   778   0019EA  928B               	bcf	139,1,c	;volatile
   779   0019EC                     
   780                           ; BSR set to: 15
   781                           ;main.c: 29: LATGbits.LATG0=0;
   782   0019EC  908F               	bcf	143,0,c	;volatile
   783   0019EE                     
   784                           ; BSR set to: 15
   785                           ;main.c: 32: TRISAbits.TRISA2=0;
   786   0019EE  9492               	bcf	146,2,c	;volatile
   787   0019F0                     
   788                           ; BSR set to: 15
   789                           ;main.c: 33: TRISAbits.TRISA3=0;
   790   0019F0  9692               	bcf	146,3,c	;volatile
   791   0019F2                     
   792                           ; BSR set to: 15
   793                           ;main.c: 34: TRISAbits.TRISA4=0;
   794   0019F2  9892               	bcf	146,4,c	;volatile
   795   0019F4                     
   796                           ; BSR set to: 15
   797                           ;main.c: 35: TRISAbits.TRISA5=0;
   798   0019F4  9A92               	bcf	146,5,c	;volatile
   799   0019F6                     
   800                           ; BSR set to: 15
   801                           ;main.c: 36: TRISCbits.TRISC2=0;
   802   0019F6  9494               	bcf	148,2,c	;volatile
   803   0019F8                     
   804                           ; BSR set to: 15
   805                           ;main.c: 37: TRISCbits.TRISC1=0;
   806   0019F8  9294               	bcf	148,1,c	;volatile
   807   0019FA                     
   808                           ; BSR set to: 15
   809                           ;main.c: 38: TRISGbits.TRISG0=0;
   810   0019FA  9098               	bcf	152,0,c	;volatile
   811   0019FC                     
   812                           ; BSR set to: 15
   813                           ;main.c: 41: INTCON2bits.RBPU=0;
   814   0019FC  9EF1               	bcf	241,7,c	;volatile
   815   0019FE                     
   816                           ; BSR set to: 15
   817                           ;main.c: 42: PADCFG1bits.REPU=1;
   818   0019FE  8D53               	bsf	83,6,b	;volatile
   819   001A00                     
   820                           ; BSR set to: 15
   821   001A00  0012               	return		;funcret
   822   001A02                     __end_of_initialisation_des_ports:
   823                           	callstack 0
   824                           
   825 ;; *************** function _initialisation_afficheur *****************
   826 ;; Defined at:
   827 ;;		line 165 in file "afficheur.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;		None
   830 ;; Auto vars:     Size  Location     Type
   831 ;;  error_count     1    8[COMRAM] unsigned char 
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, status,2, status,0, cstack
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   842 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   844 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   845 ;;Total ram usage:        1 bytes
   846 ;; Hardware stack levels used: 1
   847 ;; Hardware stack levels required when called: 3
   848 ;; This function calls:
   849 ;;		_check_status_ok
   850 ;;		_command
   851 ;;		_d1command
   852 ;;		_d2command
   853 ;;		_delai_us_char
   854 ;; This function is called by:
   855 ;;		_main
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           	psect	text2
   860   001216                     __ptext2:
   861                           	callstack 0
   862   001216                     _initialisation_afficheur:
   863                           	callstack 27
   864   001216                     
   865                           ;afficheur.c: 168: unsigned char error_count;;afficheur.c: 170: error_count=0;
   866   001216  0E00               	movlw	0
   867   001218  6E09               	movwf	initialisation_afficheur@error_count^0,c
   868                           
   869                           ;afficheur.c: 173: LATH=0;
   870   00121A  0E00               	movlw	0
   871   00121C  6E90               	movwf	144,c	;volatile
   872                           
   873                           ;afficheur.c: 174: LATJ=0x1F;
   874   00121E  0E1F               	movlw	31
   875   001220  6E91               	movwf	145,c	;volatile
   876                           
   877                           ;afficheur.c: 177: TRISH=0;
   878   001222  0E00               	movlw	0
   879   001224  6E99               	movwf	153,c	;volatile
   880                           
   881                           ;afficheur.c: 178: TRISJ=0;
   882   001226  0E00               	movlw	0
   883   001228  6E9A               	movwf	154,c	;volatile
   884   00122A                     
   885                           ;afficheur.c: 181: LATJbits.LATJ5=0;
   886   00122A  9A91               	bcf	145,5,c	;volatile
   887   00122C                     
   888                           ;afficheur.c: 182: LATJbits.LATJ6=1;
   889   00122C  8C91               	bsf	145,6,c	;volatile
   890   00122E                     
   891                           ;afficheur.c: 185: LATJbits.LATJ4=0;
   892   00122E  9891               	bcf	145,4,c	;volatile
   893   001230                     
   894                           ;afficheur.c: 186: delai_us_char(4);
   895   001230  0E04               	movlw	4
   896   001232  ECA7  F00C         	call	_delai_us_char
   897   001236                     
   898                           ;afficheur.c: 187: LATJbits.LATJ4=1;
   899   001236  8891               	bsf	145,4,c	;volatile
   900   001238                     
   901                           ;afficheur.c: 191: delai_us_char(12);
   902   001238  0E0C               	movlw	12
   903   00123A  ECA7  F00C         	call	_delai_us_char
   904                           
   905                           ;afficheur.c: 192: while(check_status_ok()==00)
   906   00123E  EF32  F009         	goto	l2027
   907   001242                     l2017:
   908                           
   909                           ;afficheur.c: 193: {;afficheur.c: 194: error_count++;
   910   001242  2A09               	incf	initialisation_afficheur@error_count^0,f,c
   911   001244                     
   912                           ;afficheur.c: 195: delai_us_char(12);
   913   001244  0E0C               	movlw	12
   914   001246  ECA7  F00C         	call	_delai_us_char
   915   00124A                     
   916                           ;afficheur.c: 196: if (error_count>200)
   917   00124A  0EC8               	movlw	200
   918   00124C  6409               	cpfsgt	initialisation_afficheur@error_count^0,c
   919   00124E  EF2B  F009         	goto	u911
   920   001252  EF2D  F009         	goto	u910
   921   001256                     u911:
   922   001256  EF32  F009         	goto	l2027
   923   00125A                     u910:
   924   00125A                     
   925                           ;afficheur.c: 197: {;afficheur.c: 198: LATCbits.LATC1=1;LATGbits.LATG0=1;LATCbits.LATC2=
      +                          0;
   926   00125A  828B               	bsf	139,1,c	;volatile
   927   00125C  808F               	bsf	143,0,c	;volatile
   928   00125E  948B               	bcf	139,2,c	;volatile
   929   001260                     
   930                           ;afficheur.c: 201: error_count=0;
   931   001260  0E00               	movlw	0
   932   001262  6E09               	movwf	initialisation_afficheur@error_count^0,c
   933   001264                     l2027:
   934   001264  EC1F  F00C         	call	_check_status_ok	;wreg free
   935   001268  0900               	iorlw	0
   936   00126A  B4D8               	btfsc	status,2,c
   937   00126C  EF3A  F009         	goto	u921
   938   001270  EF3C  F009         	goto	u920
   939   001274                     u921:
   940   001274  EF21  F009         	goto	l2017
   941   001278                     u920:
   942   001278                     
   943                           ;afficheur.c: 202: };afficheur.c: 203: };afficheur.c: 206: d2command(39,15,0x21);
   944   001278  0E0F               	movlw	15
   945   00127A  6E05               	movwf	d2command@d2^0,c
   946   00127C  0E21               	movlw	33
   947   00127E  6E06               	movwf	d2command@cmd^0,c
   948   001280  0E27               	movlw	39
   949   001282  EC53  F00B         	call	_d2command
   950                           
   951                           ;afficheur.c: 207: d2command(0,0,0x22);
   952   001286  0E00               	movlw	0
   953   001288  6E05               	movwf	d2command@d2^0,c
   954   00128A  0E22               	movlw	34
   955   00128C  6E06               	movwf	d2command@cmd^0,c
   956   00128E  0E00               	movlw	0
   957   001290  EC53  F00B         	call	_d2command
   958                           
   959                           ;afficheur.c: 208: d2command(0,0,0x24);
   960   001294  0E00               	movlw	0
   961   001296  6E05               	movwf	d2command@d2^0,c
   962   001298  0E24               	movlw	36
   963   00129A  6E06               	movwf	d2command@cmd^0,c
   964   00129C  0E00               	movlw	0
   965   00129E  EC53  F00B         	call	_d2command
   966                           
   967                           ;afficheur.c: 211: d2command(0,0x7B,0x40);
   968   0012A2  0E7B               	movlw	123
   969   0012A4  6E05               	movwf	d2command@d2^0,c
   970   0012A6  0E40               	movlw	64
   971   0012A8  6E06               	movwf	d2command@cmd^0,c
   972   0012AA  0E00               	movlw	0
   973   0012AC  EC53  F00B         	call	_d2command
   974                           
   975                           ;afficheur.c: 212: d2command(40,0,0x41);
   976   0012B0  0E00               	movlw	0
   977   0012B2  6E05               	movwf	d2command@d2^0,c
   978   0012B4  0E41               	movlw	65
   979   0012B6  6E06               	movwf	d2command@cmd^0,c
   980   0012B8  0E28               	movlw	40
   981   0012BA  EC53  F00B         	call	_d2command
   982                           
   983                           ;afficheur.c: 213: d2command(0x00,0x80,0x42);
   984   0012BE  0E80               	movlw	128
   985   0012C0  6E05               	movwf	d2command@d2^0,c
   986   0012C2  0E42               	movlw	66
   987   0012C4  6E06               	movwf	d2command@cmd^0,c
   988   0012C6  0E00               	movlw	0
   989   0012C8  EC53  F00B         	call	_d2command
   990                           
   991                           ;afficheur.c: 214: d2command(40,0,0x43);
   992   0012CC  0E00               	movlw	0
   993   0012CE  6E05               	movwf	d2command@d2^0,c
   994   0012D0  0E43               	movlw	67
   995   0012D2  6E06               	movwf	d2command@cmd^0,c
   996   0012D4  0E28               	movlw	40
   997   0012D6  EC53  F00B         	call	_d2command
   998                           
   999                           ;afficheur.c: 217: command(0x80);
  1000   0012DA  0E80               	movlw	128
  1001   0012DC  EC01  F00D         	call	_command
  1002                           
  1003                           ;afficheur.c: 220: command(0x9C);
  1004   0012E0  0E9C               	movlw	156
  1005   0012E2  EC01  F00D         	call	_command
  1006                           
  1007                           ;afficheur.c: 223: command(0xA0);
  1008   0012E6  0EA0               	movlw	160
  1009   0012E8  EC01  F00D         	call	_command
  1010                           
  1011                           ;afficheur.c: 226: d1command(0x02,0x70);
  1012   0012EC  0E70               	movlw	112
  1013   0012EE  6E05               	movwf	d1command@cmd^0,c
  1014   0012F0  0E02               	movlw	2
  1015   0012F2  ECB4  F00B         	call	_d1command
  1016   0012F6  0012               	return		;funcret
  1017   0012F8                     __end_of_initialisation_afficheur:
  1018                           	callstack 0
  1019                           
  1020 ;; *************** function _check_status_ok *****************
  1021 ;; Defined at:
  1022 ;;		line 31 in file "afficheur.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;		None
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;  res             1    0[COMRAM] unsigned char 
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  1    wreg      unsigned char 
  1029 ;; Registers used:
  1030 ;;		wreg, status,2, status,0
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1037 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1039 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1040 ;;Total ram usage:        1 bytes
  1041 ;; Hardware stack levels used: 1
  1042 ;; This function calls:
  1043 ;;		Nothing
  1044 ;; This function is called by:
  1045 ;;		_initialisation_afficheur
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text3
  1050   00183E                     __ptext3:
  1051                           	callstack 0
  1052   00183E                     _check_status_ok:
  1053                           	callstack 29
  1054   00183E                     
  1055                           ;afficheur.c: 33: unsigned char res;;afficheur.c: 36: TRISH=0xFF;
  1056   00183E  6899               	setf	153,c	;volatile
  1057                           
  1058                           ;afficheur.c: 37: LATJbits.LATJ0=1;
  1059   001840  8091               	bsf	145,0,c	;volatile
  1060                           
  1061                           ;afficheur.c: 38: LATJbits.LATJ3=0;
  1062   001842  9691               	bcf	145,3,c	;volatile
  1063                           
  1064                           ;afficheur.c: 39: LATJbits.LATJ1=0;
  1065   001844  9291               	bcf	145,1,c	;volatile
  1066                           
  1067                           ;afficheur.c: 40: __nop();
  1068   001846  F000               	nop	
  1069                           
  1070                           ;afficheur.c: 41: __nop();
  1071   001848  F000               	nop	
  1072                           
  1073                           ;afficheur.c: 42: __nop();
  1074   00184A  F000               	nop	
  1075                           
  1076                           ;afficheur.c: 43: res=PORTH;
  1077   00184C  CF87 F001          	movff	3975,check_status_ok@res	;volatile
  1078                           
  1079                           ;afficheur.c: 44: LATJbits.LATJ1=1;
  1080   001850  8291               	bsf	145,1,c	;volatile
  1081                           
  1082                           ;afficheur.c: 45: LATJbits.LATJ3=1;
  1083   001852  8691               	bsf	145,3,c	;volatile
  1084   001854                     
  1085                           ;afficheur.c: 47: if ((res&0x03)==0x03)
  1086   001854  5001               	movf	check_status_ok@res^0,w,c
  1087   001856  0B03               	andlw	3
  1088   001858  0A03               	xorlw	3
  1089   00185A  A4D8               	btfss	status,2,c
  1090   00185C  EF32  F00C         	goto	u871
  1091   001860  EF34  F00C         	goto	u870
  1092   001864                     u871:
  1093   001864  EF38  F00C         	goto	l1913
  1094   001868                     u870:
  1095   001868                     
  1096                           ;afficheur.c: 48: res=1;
  1097   001868  0E01               	movlw	1
  1098   00186A  6E01               	movwf	check_status_ok@res^0,c
  1099   00186C  EF3A  F00C         	goto	l95
  1100   001870                     l1913:
  1101                           
  1102                           ;afficheur.c: 49: else;afficheur.c: 50: res=0;
  1103   001870  0E00               	movlw	0
  1104   001872  6E01               	movwf	check_status_ok@res^0,c
  1105   001874                     l95:
  1106                           
  1107                           ;afficheur.c: 51: return res;
  1108   001874  5001               	movf	check_status_ok@res^0,w,c
  1109   001876  0012               	return		;funcret
  1110   001878                     __end_of_check_status_ok:
  1111                           	callstack 0
  1112                           
  1113 ;; *************** function _goto_lico *****************
  1114 ;; Defined at:
  1115 ;;		line 276 in file "afficheur.c"
  1116 ;; Parameters:    Size  Location     Type
  1117 ;;  ligne           1    wreg     unsigned char 
  1118 ;;  colonne         1    8[COMRAM] unsigned char 
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;  ligne           1   11[COMRAM] unsigned char 
  1121 ;;  adr             2   12[COMRAM] unsigned int 
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  1    wreg      void 
  1124 ;; Registers used:
  1125 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1131 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1132 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1133 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1134 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1135 ;;Total ram usage:        6 bytes
  1136 ;; Hardware stack levels used: 1
  1137 ;; Hardware stack levels required when called: 3
  1138 ;; This function calls:
  1139 ;;		_d2command
  1140 ;; This function is called by:
  1141 ;;		_main
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           	psect	text4
  1146   0015B8                     __ptext4:
  1147                           	callstack 0
  1148   0015B8                     _goto_lico:
  1149                           	callstack 27
  1150                           
  1151                           ;incstack = 0
  1152                           ;goto_lico@ligne stored from wreg
  1153   0015B8  6E0C               	movwf	goto_lico@ligne^0,c
  1154   0015BA                     
  1155                           ;afficheur.c: 278: unsigned int adr;;afficheur.c: 280: adr=0x7B00;
  1156   0015BA  0E7B               	movlw	123
  1157   0015BC  6E0E               	movwf	(goto_lico@adr+1)^0,c
  1158   0015BE  0E00               	movlw	0
  1159   0015C0  6E0D               	movwf	goto_lico@adr^0,c
  1160   0015C2                     
  1161                           ;afficheur.c: 281: if (ligne>15) ligne=0;
  1162   0015C2  0E0F               	movlw	15
  1163   0015C4  640C               	cpfsgt	goto_lico@ligne^0,c
  1164   0015C6  EFE7  F00A         	goto	u951
  1165   0015CA  EFE9  F00A         	goto	u950
  1166   0015CE                     u951:
  1167   0015CE  EFEB  F00A         	goto	l2079
  1168   0015D2                     u950:
  1169   0015D2  0E00               	movlw	0
  1170   0015D4  6E0C               	movwf	goto_lico@ligne^0,c
  1171   0015D6                     l2079:
  1172                           
  1173                           ;afficheur.c: 282: if (colonne>39) colonne=0;
  1174   0015D6  0E27               	movlw	39
  1175   0015D8  6409               	cpfsgt	goto_lico@colonne^0,c
  1176   0015DA  EFF1  F00A         	goto	u961
  1177   0015DE  EFF3  F00A         	goto	u960
  1178   0015E2                     u961:
  1179   0015E2  EFF5  F00A         	goto	l2083
  1180   0015E6                     u960:
  1181   0015E6  0E00               	movlw	0
  1182   0015E8  6E09               	movwf	goto_lico@colonne^0,c
  1183   0015EA                     l2083:
  1184                           
  1185                           ;afficheur.c: 283: adr=adr+40*ligne+colonne;
  1186   0015EA  500C               	movf	goto_lico@ligne^0,w,c
  1187   0015EC  0D28               	mullw	40
  1188   0015EE  CFF3 F00A          	movff	prodl,??_goto_lico
  1189   0015F2  CFF4 F00B          	movff	prodh,??_goto_lico+1
  1190   0015F6  5009               	movf	goto_lico@colonne^0,w,c
  1191   0015F8  260A               	addwf	??_goto_lico^0,f,c
  1192   0015FA  0E00               	movlw	0
  1193   0015FC  220B               	addwfc	(??_goto_lico+1)^0,f,c
  1194   0015FE  500D               	movf	goto_lico@adr^0,w,c
  1195   001600  240A               	addwf	??_goto_lico^0,w,c
  1196   001602  6E0D               	movwf	goto_lico@adr^0,c
  1197   001604  500E               	movf	(goto_lico@adr+1)^0,w,c
  1198   001606  200B               	addwfc	(??_goto_lico+1)^0,w,c
  1199   001608  6E0E               	movwf	(goto_lico@adr+1)^0,c
  1200                           
  1201                           ;afficheur.c: 284: while(d2command((unsigned char)(adr&0x00FF),(unsigned char)(adr>>8),0
      +                          x24)==0)
  1202   00160A  EF08  F00B         	goto	l2085
  1203   00160E                     l169:
  1204                           
  1205                           ;afficheur.c: 285: __nop();
  1206   00160E  F000               	nop	
  1207   001610                     l2085:
  1208   001610  500E               	movf	(goto_lico@adr+1)^0,w,c
  1209   001612  6E05               	movwf	d2command@d2^0,c
  1210   001614  0E24               	movlw	36
  1211   001616  6E06               	movwf	d2command@cmd^0,c
  1212   001618  500D               	movf	goto_lico@adr^0,w,c
  1213   00161A  EC53  F00B         	call	_d2command
  1214   00161E  0900               	iorlw	0
  1215   001620  B4D8               	btfsc	status,2,c
  1216   001622  EF15  F00B         	goto	u971
  1217   001626  EF17  F00B         	goto	u970
  1218   00162A                     u971:
  1219   00162A  EF07  F00B         	goto	l169
  1220   00162E                     u970:
  1221   00162E  0012               	return		;funcret
  1222   001630                     __end_of_goto_lico:
  1223                           	callstack 0
  1224                           
  1225 ;; *************** function _draw_string *****************
  1226 ;; Defined at:
  1227 ;;		line 244 in file "afficheur.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;  tableau         2    7[COMRAM] PTR unsigned char 
  1230 ;;		 -> STR_1(6), main@tu8DataFromEEPROM(20), 
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;		None
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      void 
  1235 ;; Registers used:
  1236 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1242 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1245 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1246 ;;Total ram usage:        2 bytes
  1247 ;; Hardware stack levels used: 1
  1248 ;; Hardware stack levels required when called: 3
  1249 ;; This function calls:
  1250 ;;		_d1command
  1251 ;; This function is called by:
  1252 ;;		_main
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text5
  1257   00153E                     __ptext5:
  1258                           	callstack 0
  1259   00153E                     _draw_string:
  1260                           	callstack 27
  1261   00153E                     
  1262                           ;afficheur.c: 246: while(tableau[0]!=0)
  1263   00153E  EFC2  F00A         	goto	l2093
  1264   001542                     l147:
  1265                           
  1266                           ;afficheur.c: 249: __nop();
  1267   001542  F000               	nop	
  1268   001544                     l2089:
  1269   001544  0EC0               	movlw	192
  1270   001546  6E05               	movwf	d1command@cmd^0,c
  1271   001548  C008  FFF6         	movff	draw_string@tableau,tblptrl
  1272   00154C  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  1273   001550  0E00               	movlw	low (__smallconst shr (0+16))
  1274   001552  6EF8               	movwf	tblptru,c
  1275   001554  0E0F               	movlw	(high __ramtop+-1)
  1276   001556  64F7               	cpfsgt	tblptrh,c
  1277   001558  D003               	bra	u987
  1278   00155A  0008               	tblrd		*
  1279   00155C  50F5               	movf	tablat,w,c
  1280   00155E  D005               	bra	u980
  1281   001560                     u987:
  1282   001560  CFF6 FFE1          	movff	tblptrl,fsr1l
  1283   001564  CFF7 FFE2          	movff	tblptrh,fsr1h
  1284   001568  50E7               	movf	indf1,w,c
  1285   00156A                     u980:
  1286   00156A  0FE0               	addlw	224
  1287   00156C  ECB4  F00B         	call	_d1command
  1288   001570  0900               	iorlw	0
  1289   001572  B4D8               	btfsc	status,2,c
  1290   001574  EFBE  F00A         	goto	u991
  1291   001578  EFC0  F00A         	goto	u990
  1292   00157C                     u991:
  1293   00157C  EFA1  F00A         	goto	l147
  1294   001580                     u990:
  1295   001580                     
  1296                           ;afficheur.c: 250: tableau++;
  1297   001580  4A08               	infsnz	draw_string@tableau^0,f,c
  1298   001582  2A09               	incf	(draw_string@tableau+1)^0,f,c
  1299   001584                     l2093:
  1300   001584  C008  FFF6         	movff	draw_string@tableau,tblptrl
  1301   001588  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  1302   00158C  0E00               	movlw	low (__smallconst shr (0+16))
  1303   00158E  6EF8               	movwf	tblptru,c
  1304   001590  0E0F               	movlw	(high __ramtop+-1)
  1305   001592  64F7               	cpfsgt	tblptrh,c
  1306   001594  D003               	bra	u1007
  1307   001596  0008               	tblrd		*
  1308   001598  50F5               	movf	tablat,w,c
  1309   00159A  D005               	bra	u1000
  1310   00159C                     u1007:
  1311   00159C  CFF6 FFE1          	movff	tblptrl,fsr1l
  1312   0015A0  CFF7 FFE2          	movff	tblptrh,fsr1h
  1313   0015A4  50E7               	movf	indf1,w,c
  1314   0015A6                     u1000:
  1315   0015A6  0900               	iorlw	0
  1316   0015A8  A4D8               	btfss	status,2,c
  1317   0015AA  EFD9  F00A         	goto	u1011
  1318   0015AE  EFDB  F00A         	goto	u1010
  1319   0015B2                     u1011:
  1320   0015B2  EFA2  F00A         	goto	l2089
  1321   0015B6                     u1010:
  1322   0015B6  0012               	return		;funcret
  1323   0015B8                     __end_of_draw_string:
  1324                           	callstack 0
  1325                           
  1326 ;; *************** function _drawVericalLine *****************
  1327 ;; Defined at:
  1328 ;;		line 363 in file "afficheur.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;  ligne           1    wreg     unsigned char 
  1331 ;;  colonne         1   14[COMRAM] unsigned char 
  1332 ;;  lenght          1   15[COMRAM] unsigned char 
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;  ligne           1   16[COMRAM] unsigned char 
  1335 ;;  index           1   17[COMRAM] unsigned char 
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      void 
  1338 ;; Registers used:
  1339 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1345 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1346 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1348 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1349 ;;Total ram usage:        4 bytes
  1350 ;; Hardware stack levels used: 1
  1351 ;; Hardware stack levels required when called: 4
  1352 ;; This function calls:
  1353 ;;		_plot1
  1354 ;; This function is called by:
  1355 ;;		_main
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           	psect	text6
  1360   00191E                     __ptext6:
  1361                           	callstack 0
  1362   00191E                     _drawVericalLine:
  1363                           	callstack 26
  1364                           
  1365                           ;incstack = 0
  1366                           ;drawVericalLine@ligne stored from wreg
  1367   00191E  6E11               	movwf	drawVericalLine@ligne^0,c
  1368   001920                     
  1369                           ;afficheur.c: 365: unsigned char index = 0;
  1370   001920  0E00               	movlw	0
  1371   001922  6E12               	movwf	drawVericalLine@index^0,c
  1372                           
  1373                           ;afficheur.c: 367: for(index=0; index<lenght; index++)
  1374   001924  0E00               	movlw	0
  1375   001926  6E12               	movwf	drawVericalLine@index^0,c
  1376   001928  EF9D  F00C         	goto	l2101
  1377   00192C                     l2097:
  1378                           
  1379                           ;afficheur.c: 368: {;afficheur.c: 369: plot1(colonne, ligne+index);
  1380   00192C  5011               	movf	drawVericalLine@ligne^0,w,c
  1381   00192E  2412               	addwf	drawVericalLine@index^0,w,c
  1382   001930  6E09               	movwf	plot1@y^0,c
  1383   001932  500F               	movf	drawVericalLine@colonne^0,w,c
  1384   001934  EC7C  F009         	call	_plot1
  1385   001938  2A12               	incf	drawVericalLine@index^0,f,c
  1386   00193A                     l2101:
  1387   00193A  5010               	movf	drawVericalLine@lenght^0,w,c
  1388   00193C  5C12               	subwf	drawVericalLine@index^0,w,c
  1389   00193E  A0D8               	btfss	status,0,c
  1390   001940  EFA4  F00C         	goto	u1021
  1391   001944  EFA6  F00C         	goto	u1020
  1392   001948                     u1021:
  1393   001948  EF96  F00C         	goto	l2097
  1394   00194C                     u1020:
  1395   00194C  0012               	return		;funcret
  1396   00194E                     __end_of_drawVericalLine:
  1397                           	callstack 0
  1398                           
  1399 ;; *************** function _plot1 *****************
  1400 ;; Defined at:
  1401 ;;		line 321 in file "afficheur.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;  x               1    wreg     unsigned char 
  1404 ;;  y               1    8[COMRAM] unsigned char 
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;  x               1   13[COMRAM] unsigned char 
  1407 ;;  add             2   11[COMRAM] unsigned int 
  1408 ;; Return value:  Size  Location     Type
  1409 ;;                  1    wreg      void 
  1410 ;; Registers used:
  1411 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1412 ;; Tracked objects:
  1413 ;;		On entry : 0/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1417 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1418 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1419 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1420 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1421 ;;Total ram usage:        6 bytes
  1422 ;; Hardware stack levels used: 1
  1423 ;; Hardware stack levels required when called: 3
  1424 ;; This function calls:
  1425 ;;		___awdiv
  1426 ;;		___awmod
  1427 ;;		_command
  1428 ;;		_d2command
  1429 ;; This function is called by:
  1430 ;;		_drawVericalLine
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text7
  1435   0012F8                     __ptext7:
  1436                           	callstack 0
  1437   0012F8                     _plot1:
  1438                           	callstack 26
  1439                           
  1440                           ;incstack = 0
  1441                           ;plot1@x stored from wreg
  1442   0012F8  6E0E               	movwf	plot1@x^0,c
  1443   0012FA                     
  1444                           ;afficheur.c: 323: unsigned int add;;afficheur.c: 325: add=40*y+x/6;
  1445   0012FA  C00E  F001         	movff	plot1@x,___awdiv@dividend
  1446   0012FE  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1447   001300  0E00               	movlw	0
  1448   001302  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1449   001304  0E06               	movlw	6
  1450   001306  6E03               	movwf	___awdiv@divisor^0,c
  1451   001308  ECE5  F009         	call	___awdiv	;wreg free
  1452   00130C  5009               	movf	plot1@y^0,w,c
  1453   00130E  0D28               	mullw	40
  1454   001310  CFF3 F00A          	movff	prodl,??_plot1
  1455   001314  CFF4 F00B          	movff	prodh,??_plot1+1
  1456   001318  5001               	movf	?___awdiv^0,w,c
  1457   00131A  240A               	addwf	??_plot1^0,w,c
  1458   00131C  6E0C               	movwf	plot1@add^0,c
  1459   00131E  5002               	movf	(?___awdiv+1)^0,w,c
  1460   001320  200B               	addwfc	(??_plot1+1)^0,w,c
  1461   001322  6E0D               	movwf	(plot1@add+1)^0,c
  1462   001324                     
  1463                           ;afficheur.c: 326: d2command((char)(add&0xff),(char)(add>>8),0x24);
  1464   001324  500D               	movf	(plot1@add+1)^0,w,c
  1465   001326  6E05               	movwf	d2command@d2^0,c
  1466   001328  0E24               	movlw	36
  1467   00132A  6E06               	movwf	d2command@cmd^0,c
  1468   00132C  500C               	movf	plot1@add^0,w,c
  1469   00132E  EC53  F00B         	call	_d2command
  1470                           
  1471                           ;afficheur.c: 328: switch(x%6)
  1472   001332  EFB9  F009         	goto	l1955
  1473   001336                     l1941:
  1474   001336  0EFD               	movlw	253
  1475   001338  EC01  F00D         	call	_command
  1476   00133C  EFE4  F009         	goto	l198
  1477   001340                     l1943:
  1478   001340  0EFC               	movlw	252
  1479   001342  EC01  F00D         	call	_command
  1480   001346  EFE4  F009         	goto	l198
  1481   00134A                     l1945:
  1482   00134A  0EFB               	movlw	251
  1483   00134C  EC01  F00D         	call	_command
  1484   001350  EFE4  F009         	goto	l198
  1485   001354                     l1947:
  1486   001354  0EFA               	movlw	250
  1487   001356  EC01  F00D         	call	_command
  1488   00135A  EFE4  F009         	goto	l198
  1489   00135E                     l1949:
  1490   00135E  0EF9               	movlw	249
  1491   001360  EC01  F00D         	call	_command
  1492   001364  EFE4  F009         	goto	l198
  1493   001368                     l1951:
  1494   001368  0EF8               	movlw	248
  1495   00136A  EC01  F00D         	call	_command
  1496   00136E  EFE4  F009         	goto	l198
  1497   001372                     l1955:
  1498   001372  C00E  F001         	movff	plot1@x,___awmod@dividend
  1499   001376  6A02               	clrf	(___awmod@dividend+1)^0,c
  1500   001378  0E00               	movlw	0
  1501   00137A  6E04               	movwf	(___awmod@divisor+1)^0,c
  1502   00137C  0E06               	movlw	6
  1503   00137E  6E03               	movwf	___awmod@divisor^0,c
  1504   001380  EC47  F00A         	call	___awmod	;wreg free
  1505                           
  1506                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1507                           ; Switch size 1, requested type "simple"
  1508                           ; Number of cases is 1, Range of values is 0 to 0
  1509                           ; switch strategies available:
  1510                           ; Name         Instructions Cycles
  1511                           ; simple_byte            4     3 (average)
  1512                           ;	Chosen strategy is simple_byte
  1513   001384  5002               	movf	(?___awmod+1)^0,w,c
  1514   001386  0A00               	xorlw	0	; case 0
  1515   001388  B4D8               	btfsc	status,2,c
  1516   00138A  EFC9  F009         	goto	l2311
  1517   00138E  EFE4  F009         	goto	l198
  1518   001392                     l2311:
  1519                           
  1520                           ; Switch size 1, requested type "simple"
  1521                           ; Number of cases is 6, Range of values is 0 to 5
  1522                           ; switch strategies available:
  1523                           ; Name         Instructions Cycles
  1524                           ; simple_byte           19    10 (average)
  1525                           ;	Chosen strategy is simple_byte
  1526   001392  5001               	movf	?___awmod^0,w,c
  1527   001394  0A00               	xorlw	0	; case 0
  1528   001396  B4D8               	btfsc	status,2,c
  1529   001398  EF9B  F009         	goto	l1941
  1530   00139C  0A01               	xorlw	1	; case 1
  1531   00139E  B4D8               	btfsc	status,2,c
  1532   0013A0  EFA0  F009         	goto	l1943
  1533   0013A4  0A03               	xorlw	3	; case 2
  1534   0013A6  B4D8               	btfsc	status,2,c
  1535   0013A8  EFA5  F009         	goto	l1945
  1536   0013AC  0A01               	xorlw	1	; case 3
  1537   0013AE  B4D8               	btfsc	status,2,c
  1538   0013B0  EFAA  F009         	goto	l1947
  1539   0013B4  0A07               	xorlw	7	; case 4
  1540   0013B6  B4D8               	btfsc	status,2,c
  1541   0013B8  EFAF  F009         	goto	l1949
  1542   0013BC  0A01               	xorlw	1	; case 5
  1543   0013BE  B4D8               	btfsc	status,2,c
  1544   0013C0  EFB4  F009         	goto	l1951
  1545   0013C4  EFE4  F009         	goto	l198
  1546   0013C8                     l198:
  1547   0013C8  0012               	return		;funcret
  1548   0013CA                     __end_of_plot1:
  1549                           	callstack 0
  1550                           
  1551 ;; *************** function _command *****************
  1552 ;; Defined at:
  1553 ;;		line 91 in file "afficheur.c"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;  cmd             1    wreg     unsigned char 
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;  cmd             1    4[COMRAM] unsigned char 
  1558 ;;  res             1    0        unsigned char 
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  1    wreg      unsigned char 
  1561 ;; Registers used:
  1562 ;;		wreg, status,2, status,0, cstack
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1569 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1571 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1572 ;;Total ram usage:        1 bytes
  1573 ;; Hardware stack levels used: 1
  1574 ;; Hardware stack levels required when called: 2
  1575 ;; This function calls:
  1576 ;;		_delai_us_char
  1577 ;;		_wait_status_ok
  1578 ;;		_write_c_aff
  1579 ;; This function is called by:
  1580 ;;		_initialisation_afficheur
  1581 ;;		_plot1
  1582 ;;		_plot0
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           	psect	text8
  1587   001A02                     __ptext8:
  1588                           	callstack 0
  1589   001A02                     _command:
  1590                           	callstack 27
  1591                           
  1592                           ;incstack = 0
  1593                           ;command@cmd stored from wreg
  1594   001A02  6E05               	movwf	command@cmd^0,c
  1595   001A04                     
  1596                           ;afficheur.c: 97: if(wait_status_ok()==1)
  1597   001A04  EC18  F00B         	call	_wait_status_ok	;wreg free
  1598   001A08  06E8               	decf	wreg,f,c
  1599   001A0A  A4D8               	btfss	status,2,c
  1600   001A0C  EF0A  F00D         	goto	u681
  1601   001A10  EF0C  F00D         	goto	u680
  1602   001A14                     u681:
  1603   001A14  EF12  F00D         	goto	l109
  1604   001A18                     u680:
  1605   001A18                     
  1606                           ;afficheur.c: 98: {;afficheur.c: 99: delai_us_char(12);
  1607   001A18  0E0C               	movlw	12
  1608   001A1A  ECA7  F00C         	call	_delai_us_char
  1609   001A1E                     
  1610                           ;afficheur.c: 100: write_c_aff(cmd);
  1611   001A1E  5005               	movf	command@cmd^0,w,c
  1612   001A20  EC20  F00D         	call	_write_c_aff
  1613   001A24                     l109:
  1614   001A24  0012               	return		;funcret
  1615   001A26                     __end_of_command:
  1616                           	callstack 0
  1617                           
  1618 ;; *************** function ___awmod *****************
  1619 ;; Defined at:
  1620 ;;		line 7 in file "/opt/microchip/xc8/v2.40/pic/sources/c90/common/awmod.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;  dividend        2    0[COMRAM] int 
  1623 ;;  divisor         2    2[COMRAM] int 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;  sign            1    5[COMRAM] unsigned char 
  1626 ;;  counter         1    4[COMRAM] unsigned char 
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  2    0[COMRAM] int 
  1629 ;; Registers used:
  1630 ;;		wreg, status,2, status,0
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1636 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1637 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1639 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1640 ;;Total ram usage:        6 bytes
  1641 ;; Hardware stack levels used: 1
  1642 ;; This function calls:
  1643 ;;		Nothing
  1644 ;; This function is called by:
  1645 ;;		_plot1
  1646 ;;		_plot0
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text9
  1651   00148E                     __ptext9:
  1652                           	callstack 0
  1653   00148E                     ___awmod:
  1654                           	callstack 28
  1655   00148E  0E00               	movlw	0
  1656   001490  6E06               	movwf	___awmod@sign^0,c
  1657   001492  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1658   001494  EF50  F00A         	goto	u810
  1659   001498  EF4E  F00A         	goto	u811
  1660   00149C                     u811:
  1661   00149C  EF56  F00A         	goto	l1879
  1662   0014A0                     u810:
  1663   0014A0  6C01               	negf	___awmod@dividend^0,c
  1664   0014A2  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1665   0014A4  B0D8               	btfsc	status,0,c
  1666   0014A6  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1667   0014A8  0E01               	movlw	1
  1668   0014AA  6E06               	movwf	___awmod@sign^0,c
  1669   0014AC                     l1879:
  1670   0014AC  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1671   0014AE  EF5D  F00A         	goto	u820
  1672   0014B2  EF5B  F00A         	goto	u821
  1673   0014B6                     u821:
  1674   0014B6  EF61  F00A         	goto	l1883
  1675   0014BA                     u820:
  1676   0014BA  6C03               	negf	___awmod@divisor^0,c
  1677   0014BC  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1678   0014BE  B0D8               	btfsc	status,0,c
  1679   0014C0  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1680   0014C2                     l1883:
  1681   0014C2  5003               	movf	___awmod@divisor^0,w,c
  1682   0014C4  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1683   0014C6  B4D8               	btfsc	status,2,c
  1684   0014C8  EF68  F00A         	goto	u831
  1685   0014CC  EF6A  F00A         	goto	u830
  1686   0014D0                     u831:
  1687   0014D0  EF8E  F00A         	goto	l1899
  1688   0014D4                     u830:
  1689   0014D4  0E01               	movlw	1
  1690   0014D6  6E05               	movwf	___awmod@counter^0,c
  1691   0014D8  EF72  F00A         	goto	l1889
  1692   0014DC                     l1887:
  1693   0014DC  90D8               	bcf	status,0,c
  1694   0014DE  3603               	rlcf	___awmod@divisor^0,f,c
  1695   0014E0  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1696   0014E2  2A05               	incf	___awmod@counter^0,f,c
  1697   0014E4                     l1889:
  1698   0014E4  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1699   0014E6  EF77  F00A         	goto	u841
  1700   0014EA  EF79  F00A         	goto	u840
  1701   0014EE                     u841:
  1702   0014EE  EF6E  F00A         	goto	l1887
  1703   0014F2                     u840:
  1704   0014F2                     l1891:
  1705   0014F2  5003               	movf	___awmod@divisor^0,w,c
  1706   0014F4  5C01               	subwf	___awmod@dividend^0,w,c
  1707   0014F6  5004               	movf	(___awmod@divisor+1)^0,w,c
  1708   0014F8  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1709   0014FA  A0D8               	btfss	status,0,c
  1710   0014FC  EF82  F00A         	goto	u851
  1711   001500  EF84  F00A         	goto	u850
  1712   001504                     u851:
  1713   001504  EF88  F00A         	goto	l1895
  1714   001508                     u850:
  1715   001508  5003               	movf	___awmod@divisor^0,w,c
  1716   00150A  5E01               	subwf	___awmod@dividend^0,f,c
  1717   00150C  5004               	movf	(___awmod@divisor+1)^0,w,c
  1718   00150E  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1719   001510                     l1895:
  1720   001510  90D8               	bcf	status,0,c
  1721   001512  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1722   001514  3203               	rrcf	___awmod@divisor^0,f,c
  1723   001516  2E05               	decfsz	___awmod@counter^0,f,c
  1724   001518  EF79  F00A         	goto	l1891
  1725   00151C                     l1899:
  1726   00151C  5006               	movf	___awmod@sign^0,w,c
  1727   00151E  B4D8               	btfsc	status,2,c
  1728   001520  EF94  F00A         	goto	u861
  1729   001524  EF96  F00A         	goto	u860
  1730   001528                     u861:
  1731   001528  EF9A  F00A         	goto	l1903
  1732   00152C                     u860:
  1733   00152C  6C01               	negf	___awmod@dividend^0,c
  1734   00152E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1735   001530  B0D8               	btfsc	status,0,c
  1736   001532  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1737   001534                     l1903:
  1738   001534  C001  F001         	movff	___awmod@dividend,?___awmod
  1739   001538  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1740   00153C  0012               	return		;funcret
  1741   00153E                     __end_of___awmod:
  1742                           	callstack 0
  1743                           
  1744 ;; *************** function ___awdiv *****************
  1745 ;; Defined at:
  1746 ;;		line 7 in file "/opt/microchip/xc8/v2.40/pic/sources/c90/common/awdiv.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;  dividend        2    0[COMRAM] int 
  1749 ;;  divisor         2    2[COMRAM] int 
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;  quotient        2    6[COMRAM] int 
  1752 ;;  sign            1    5[COMRAM] unsigned char 
  1753 ;;  counter         1    4[COMRAM] unsigned char 
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  2    0[COMRAM] int 
  1756 ;; Registers used:
  1757 ;;		wreg, status,2, status,0
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1763 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1764 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1766 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1767 ;;Total ram usage:        8 bytes
  1768 ;; Hardware stack levels used: 1
  1769 ;; This function calls:
  1770 ;;		Nothing
  1771 ;; This function is called by:
  1772 ;;		_main
  1773 ;;		_plot1
  1774 ;;		_plot0
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778                           	psect	text10
  1779   0013CA                     __ptext10:
  1780                           	callstack 0
  1781   0013CA                     ___awdiv:
  1782                           	callstack 28
  1783   0013CA  0E00               	movlw	0
  1784   0013CC  6E06               	movwf	___awdiv@sign^0,c
  1785   0013CE  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1786   0013D0  EFEE  F009         	goto	u750
  1787   0013D4  EFEC  F009         	goto	u751
  1788   0013D8                     u751:
  1789   0013D8  EFF4  F009         	goto	l1835
  1790   0013DC                     u750:
  1791   0013DC  6C03               	negf	___awdiv@divisor^0,c
  1792   0013DE  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1793   0013E0  B0D8               	btfsc	status,0,c
  1794   0013E2  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1795   0013E4  0E01               	movlw	1
  1796   0013E6  6E06               	movwf	___awdiv@sign^0,c
  1797   0013E8                     l1835:
  1798   0013E8  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1799   0013EA  EFFB  F009         	goto	u760
  1800   0013EE  EFF9  F009         	goto	u761
  1801   0013F2                     u761:
  1802   0013F2  EF01  F00A         	goto	l1841
  1803   0013F6                     u760:
  1804   0013F6  6C01               	negf	___awdiv@dividend^0,c
  1805   0013F8  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1806   0013FA  B0D8               	btfsc	status,0,c
  1807   0013FC  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1808   0013FE  0E01               	movlw	1
  1809   001400  1A06               	xorwf	___awdiv@sign^0,f,c
  1810   001402                     l1841:
  1811   001402  0E00               	movlw	0
  1812   001404  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1813   001406  0E00               	movlw	0
  1814   001408  6E07               	movwf	___awdiv@quotient^0,c
  1815   00140A  5003               	movf	___awdiv@divisor^0,w,c
  1816   00140C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1817   00140E  B4D8               	btfsc	status,2,c
  1818   001410  EF0C  F00A         	goto	u771
  1819   001414  EF0E  F00A         	goto	u770
  1820   001418                     u771:
  1821   001418  EF36  F00A         	goto	l1863
  1822   00141C                     u770:
  1823   00141C  0E01               	movlw	1
  1824   00141E  6E05               	movwf	___awdiv@counter^0,c
  1825   001420  EF16  F00A         	goto	l1849
  1826   001424                     l1847:
  1827   001424  90D8               	bcf	status,0,c
  1828   001426  3603               	rlcf	___awdiv@divisor^0,f,c
  1829   001428  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1830   00142A  2A05               	incf	___awdiv@counter^0,f,c
  1831   00142C                     l1849:
  1832   00142C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1833   00142E  EF1B  F00A         	goto	u781
  1834   001432  EF1D  F00A         	goto	u780
  1835   001436                     u781:
  1836   001436  EF12  F00A         	goto	l1847
  1837   00143A                     u780:
  1838   00143A                     l1851:
  1839   00143A  90D8               	bcf	status,0,c
  1840   00143C  3607               	rlcf	___awdiv@quotient^0,f,c
  1841   00143E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1842   001440  5003               	movf	___awdiv@divisor^0,w,c
  1843   001442  5C01               	subwf	___awdiv@dividend^0,w,c
  1844   001444  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1845   001446  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1846   001448  A0D8               	btfss	status,0,c
  1847   00144A  EF29  F00A         	goto	u791
  1848   00144E  EF2B  F00A         	goto	u790
  1849   001452                     u791:
  1850   001452  EF30  F00A         	goto	l1859
  1851   001456                     u790:
  1852   001456  5003               	movf	___awdiv@divisor^0,w,c
  1853   001458  5E01               	subwf	___awdiv@dividend^0,f,c
  1854   00145A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1855   00145C  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1856   00145E  8007               	bsf	___awdiv@quotient^0,0,c
  1857   001460                     l1859:
  1858   001460  90D8               	bcf	status,0,c
  1859   001462  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1860   001464  3203               	rrcf	___awdiv@divisor^0,f,c
  1861   001466  2E05               	decfsz	___awdiv@counter^0,f,c
  1862   001468  EF1D  F00A         	goto	l1851
  1863   00146C                     l1863:
  1864   00146C  5006               	movf	___awdiv@sign^0,w,c
  1865   00146E  B4D8               	btfsc	status,2,c
  1866   001470  EF3C  F00A         	goto	u801
  1867   001474  EF3E  F00A         	goto	u800
  1868   001478                     u801:
  1869   001478  EF42  F00A         	goto	l1867
  1870   00147C                     u800:
  1871   00147C  6C07               	negf	___awdiv@quotient^0,c
  1872   00147E  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1873   001480  B0D8               	btfsc	status,0,c
  1874   001482  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1875   001484                     l1867:
  1876   001484  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1877   001488  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1878   00148C  0012               	return		;funcret
  1879   00148E                     __end_of___awdiv:
  1880                           	callstack 0
  1881                           
  1882 ;; *************** function _clear_text *****************
  1883 ;; Defined at:
  1884 ;;		line 288 in file "afficheur.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;		None
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;  add             2    8[COMRAM] unsigned int 
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      void 
  1891 ;; Registers used:
  1892 ;;		wreg, status,2, status,0, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1899 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1901 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1902 ;;Total ram usage:        2 bytes
  1903 ;; Hardware stack levels used: 1
  1904 ;; Hardware stack levels required when called: 3
  1905 ;; This function calls:
  1906 ;;		_d1command
  1907 ;;		_d2command
  1908 ;; This function is called by:
  1909 ;;		_main
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           	psect	text11
  1914   001878                     __ptext11:
  1915                           	callstack 0
  1916   001878                     _clear_text:
  1917                           	callstack 27
  1918   001878                     
  1919                           ;afficheur.c: 290: unsigned int add;;afficheur.c: 292: d2command(0,0,0x24);
  1920   001878  0E00               	movlw	0
  1921   00187A  6E05               	movwf	d2command@d2^0,c
  1922   00187C  0E24               	movlw	36
  1923   00187E  6E06               	movwf	d2command@cmd^0,c
  1924   001880  0E00               	movlw	0
  1925   001882  EC53  F00B         	call	_d2command
  1926   001886                     
  1927                           ;afficheur.c: 293: for (add=0;add!=0x8000;add++)
  1928   001886  0E00               	movlw	0
  1929   001888  6E0A               	movwf	(clear_text@add+1)^0,c
  1930   00188A  0E00               	movlw	0
  1931   00188C  6E09               	movwf	clear_text@add^0,c
  1932   00188E                     l2053:
  1933                           
  1934                           ;afficheur.c: 294: {;afficheur.c: 295: d1command(0x00,0xC0);
  1935   00188E  0EC0               	movlw	192
  1936   001890  6E05               	movwf	d1command@cmd^0,c
  1937   001892  0E00               	movlw	0
  1938   001894  ECB4  F00B         	call	_d1command
  1939   001898  4A09               	infsnz	clear_text@add^0,f,c
  1940   00189A  2A0A               	incf	(clear_text@add+1)^0,f,c
  1941   00189C  0E80               	movlw	128
  1942   00189E  180A               	xorwf	(clear_text@add+1)^0,w,c
  1943   0018A0  1009               	iorwf	clear_text@add^0,w,c
  1944   0018A2  A4D8               	btfss	status,2,c
  1945   0018A4  EF56  F00C         	goto	u931
  1946   0018A8  EF58  F00C         	goto	u930
  1947   0018AC                     u931:
  1948   0018AC  EF47  F00C         	goto	l2053
  1949   0018B0                     u930:
  1950   0018B0  0012               	return		;funcret
  1951   0018B2                     __end_of_clear_text:
  1952                           	callstack 0
  1953                           
  1954 ;; *************** function _clear_graphics *****************
  1955 ;; Defined at:
  1956 ;;		line 299 in file "afficheur.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;		None
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;  add             2    8[COMRAM] unsigned int 
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  1    wreg      void 
  1963 ;; Registers used:
  1964 ;;		wreg, status,2, status,0, cstack
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1971 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1973 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1974 ;;Total ram usage:        2 bytes
  1975 ;; Hardware stack levels used: 1
  1976 ;; Hardware stack levels required when called: 3
  1977 ;; This function calls:
  1978 ;;		_d1command
  1979 ;;		_d2command
  1980 ;; This function is called by:
  1981 ;;		_main
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           	psect	text12
  1986   0018B2                     __ptext12:
  1987                           	callstack 0
  1988   0018B2                     _clear_graphics:
  1989                           	callstack 27
  1990   0018B2                     
  1991                           ;afficheur.c: 301: unsigned int add;;afficheur.c: 303: d2command(0,0x80,0x24);
  1992   0018B2  0E80               	movlw	128
  1993   0018B4  6E05               	movwf	d2command@d2^0,c
  1994   0018B6  0E24               	movlw	36
  1995   0018B8  6E06               	movwf	d2command@cmd^0,c
  1996   0018BA  0E00               	movlw	0
  1997   0018BC  EC53  F00B         	call	_d2command
  1998   0018C0                     
  1999                           ;afficheur.c: 304: for (add=0x8000;add!=0xF800;add++)
  2000   0018C0  0E80               	movlw	128
  2001   0018C2  6E0A               	movwf	(clear_graphics@add+1)^0,c
  2002   0018C4  0E00               	movlw	0
  2003   0018C6  6E09               	movwf	clear_graphics@add^0,c
  2004   0018C8                     l2067:
  2005                           
  2006                           ;afficheur.c: 305: {;afficheur.c: 306: d1command(0x00,0xC0);
  2007   0018C8  0EC0               	movlw	192
  2008   0018CA  6E05               	movwf	d1command@cmd^0,c
  2009   0018CC  0E00               	movlw	0
  2010   0018CE  ECB4  F00B         	call	_d1command
  2011   0018D2  4A09               	infsnz	clear_graphics@add^0,f,c
  2012   0018D4  2A0A               	incf	(clear_graphics@add+1)^0,f,c
  2013   0018D6  0EF8               	movlw	248
  2014   0018D8  180A               	xorwf	(clear_graphics@add+1)^0,w,c
  2015   0018DA  1009               	iorwf	clear_graphics@add^0,w,c
  2016   0018DC  A4D8               	btfss	status,2,c
  2017   0018DE  EF73  F00C         	goto	u941
  2018   0018E2  EF75  F00C         	goto	u940
  2019   0018E6                     u941:
  2020   0018E6  EF64  F00C         	goto	l2067
  2021   0018EA                     u940:
  2022   0018EA  0012               	return		;funcret
  2023   0018EC                     __end_of_clear_graphics:
  2024                           	callstack 0
  2025                           
  2026 ;; *************** function _d2command *****************
  2027 ;; Defined at:
  2028 ;;		line 129 in file "afficheur.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;  d1              1    wreg     unsigned char 
  2031 ;;  d2              1    4[COMRAM] unsigned char 
  2032 ;;  cmd             1    5[COMRAM] unsigned char 
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;  d1              1    6[COMRAM] unsigned char 
  2035 ;;  res             1    7[COMRAM] unsigned char 
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  1    wreg      unsigned char 
  2038 ;; Registers used:
  2039 ;;		wreg, status,2, status,0, cstack
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2045 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2046 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2048 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2049 ;;Total ram usage:        4 bytes
  2050 ;; Hardware stack levels used: 1
  2051 ;; Hardware stack levels required when called: 2
  2052 ;; This function calls:
  2053 ;;		_delai_us_char
  2054 ;;		_wait_status_ok
  2055 ;;		_write_c_aff
  2056 ;;		_write_d_aff
  2057 ;; This function is called by:
  2058 ;;		_initialisation_afficheur
  2059 ;;		_goto_lico
  2060 ;;		_clear_text
  2061 ;;		_clear_graphics
  2062 ;;		_plot1
  2063 ;;		_clear_cgram
  2064 ;;		_plot0
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           	psect	text13
  2069   0016A6                     __ptext13:
  2070                           	callstack 0
  2071   0016A6                     _d2command:
  2072                           	callstack 27
  2073                           
  2074                           ;incstack = 0
  2075                           ;d2command@d1 stored from wreg
  2076   0016A6  6E07               	movwf	d2command@d1^0,c
  2077   0016A8                     
  2078                           ;afficheur.c: 131: unsigned char res;;afficheur.c: 133: res=0;
  2079   0016A8  0E00               	movlw	0
  2080   0016AA  6E08               	movwf	d2command@res^0,c
  2081   0016AC                     
  2082                           ;afficheur.c: 135: if (wait_status_ok()==1)
  2083   0016AC  EC18  F00B         	call	_wait_status_ok	;wreg free
  2084   0016B0  06E8               	decf	wreg,f,c
  2085   0016B2  A4D8               	btfss	status,2,c
  2086   0016B4  EF5E  F00B         	goto	u691
  2087   0016B8  EF60  F00B         	goto	u690
  2088   0016BC                     u691:
  2089   0016BC  EF88  F00B         	goto	l1785
  2090   0016C0                     u690:
  2091   0016C0                     
  2092                           ;afficheur.c: 136: {;afficheur.c: 137: delai_us_char(12);
  2093   0016C0  0E0C               	movlw	12
  2094   0016C2  ECA7  F00C         	call	_delai_us_char
  2095   0016C6                     
  2096                           ;afficheur.c: 138: write_d_aff(d1);
  2097   0016C6  5007               	movf	d2command@d1^0,w,c
  2098   0016C8  EC13  F00D         	call	_write_d_aff
  2099   0016CC                     
  2100                           ;afficheur.c: 139: if (wait_status_ok()==1)
  2101   0016CC  EC18  F00B         	call	_wait_status_ok	;wreg free
  2102   0016D0  06E8               	decf	wreg,f,c
  2103   0016D2  A4D8               	btfss	status,2,c
  2104   0016D4  EF6E  F00B         	goto	u701
  2105   0016D8  EF70  F00B         	goto	u700
  2106   0016DC                     u701:
  2107   0016DC  EF88  F00B         	goto	l1785
  2108   0016E0                     u700:
  2109   0016E0                     
  2110                           ;afficheur.c: 140: {;afficheur.c: 141: delai_us_char(12);
  2111   0016E0  0E0C               	movlw	12
  2112   0016E2  ECA7  F00C         	call	_delai_us_char
  2113   0016E6                     
  2114                           ;afficheur.c: 142: write_d_aff(d2);
  2115   0016E6  5005               	movf	d2command@d2^0,w,c
  2116   0016E8  EC13  F00D         	call	_write_d_aff
  2117   0016EC                     
  2118                           ;afficheur.c: 143: if (wait_status_ok()==1)
  2119   0016EC  EC18  F00B         	call	_wait_status_ok	;wreg free
  2120   0016F0  06E8               	decf	wreg,f,c
  2121   0016F2  A4D8               	btfss	status,2,c
  2122   0016F4  EF7E  F00B         	goto	u711
  2123   0016F8  EF80  F00B         	goto	u710
  2124   0016FC                     u711:
  2125   0016FC  EF88  F00B         	goto	l1785
  2126   001700                     u710:
  2127   001700                     
  2128                           ;afficheur.c: 144: {;afficheur.c: 145: delai_us_char(12);
  2129   001700  0E0C               	movlw	12
  2130   001702  ECA7  F00C         	call	_delai_us_char
  2131   001706                     
  2132                           ;afficheur.c: 146: write_c_aff(cmd);
  2133   001706  5006               	movf	d2command@cmd^0,w,c
  2134   001708  EC20  F00D         	call	_write_c_aff
  2135   00170C                     
  2136                           ;afficheur.c: 148: res=1;
  2137   00170C  0E01               	movlw	1
  2138   00170E  6E08               	movwf	d2command@res^0,c
  2139   001710                     l1785:
  2140                           
  2141                           ;afficheur.c: 149: };afficheur.c: 150: };afficheur.c: 151: };afficheur.c: 152: return re
      +                          s;
  2142   001710  5008               	movf	d2command@res^0,w,c
  2143   001712  0012               	return		;funcret
  2144   001714                     __end_of_d2command:
  2145                           	callstack 0
  2146                           
  2147 ;; *************** function _d1command *****************
  2148 ;; Defined at:
  2149 ;;		line 107 in file "afficheur.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  d1              1    wreg     unsigned char 
  2152 ;;  cmd             1    4[COMRAM] unsigned char 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;  d1              1    5[COMRAM] unsigned char 
  2155 ;;  res             1    6[COMRAM] unsigned char 
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1    wreg      unsigned char 
  2158 ;; Registers used:
  2159 ;;		wreg, status,2, status,0, cstack
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2165 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2169 ;;Total ram usage:        3 bytes
  2170 ;; Hardware stack levels used: 1
  2171 ;; Hardware stack levels required when called: 2
  2172 ;; This function calls:
  2173 ;;		_delai_us_char
  2174 ;;		_wait_status_ok
  2175 ;;		_write_c_aff
  2176 ;;		_write_d_aff
  2177 ;; This function is called by:
  2178 ;;		_initialisation_afficheur
  2179 ;;		_draw_string
  2180 ;;		_clear_text
  2181 ;;		_clear_graphics
  2182 ;;		_draw_char
  2183 ;;		_draw_hex8
  2184 ;;		_clear_cgram
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           	psect	text14
  2189   001768                     __ptext14:
  2190                           	callstack 0
  2191   001768                     _d1command:
  2192                           	callstack 27
  2193                           
  2194                           ;incstack = 0
  2195                           ;d1command@d1 stored from wreg
  2196   001768  6E06               	movwf	d1command@d1^0,c
  2197   00176A                     
  2198                           ;afficheur.c: 109: unsigned char res;;afficheur.c: 111: res=0;
  2199   00176A  0E00               	movlw	0
  2200   00176C  6E07               	movwf	d1command@res^0,c
  2201   00176E                     
  2202                           ;afficheur.c: 113: if (wait_status_ok()==1)
  2203   00176E  EC18  F00B         	call	_wait_status_ok	;wreg free
  2204   001772  06E8               	decf	wreg,f,c
  2205   001774  A4D8               	btfss	status,2,c
  2206   001776  EFBF  F00B         	goto	u881
  2207   00177A  EFC1  F00B         	goto	u880
  2208   00177E                     u881:
  2209   00177E  EFD9  F00B         	goto	l1933
  2210   001782                     u880:
  2211   001782                     
  2212                           ;afficheur.c: 114: {;afficheur.c: 115: delai_us_char(12);
  2213   001782  0E0C               	movlw	12
  2214   001784  ECA7  F00C         	call	_delai_us_char
  2215   001788                     
  2216                           ;afficheur.c: 116: write_d_aff(d1);
  2217   001788  5006               	movf	d1command@d1^0,w,c
  2218   00178A  EC13  F00D         	call	_write_d_aff
  2219   00178E                     
  2220                           ;afficheur.c: 117: if (wait_status_ok()==1)
  2221   00178E  EC18  F00B         	call	_wait_status_ok	;wreg free
  2222   001792  06E8               	decf	wreg,f,c
  2223   001794  A4D8               	btfss	status,2,c
  2224   001796  EFCF  F00B         	goto	u891
  2225   00179A  EFD1  F00B         	goto	u890
  2226   00179E                     u891:
  2227   00179E  EFD9  F00B         	goto	l1933
  2228   0017A2                     u890:
  2229   0017A2                     
  2230                           ;afficheur.c: 118: {;afficheur.c: 119: delai_us_char(12);
  2231   0017A2  0E0C               	movlw	12
  2232   0017A4  ECA7  F00C         	call	_delai_us_char
  2233   0017A8                     
  2234                           ;afficheur.c: 120: write_c_aff(cmd);
  2235   0017A8  5005               	movf	d1command@cmd^0,w,c
  2236   0017AA  EC20  F00D         	call	_write_c_aff
  2237   0017AE                     
  2238                           ;afficheur.c: 122: res=1;
  2239   0017AE  0E01               	movlw	1
  2240   0017B0  6E07               	movwf	d1command@res^0,c
  2241   0017B2                     l1933:
  2242                           
  2243                           ;afficheur.c: 123: };afficheur.c: 125: };afficheur.c: 126: return res;
  2244   0017B2  5007               	movf	d1command@res^0,w,c
  2245   0017B4  0012               	return		;funcret
  2246   0017B6                     __end_of_d1command:
  2247                           	callstack 0
  2248                           
  2249 ;; *************** function _write_d_aff *****************
  2250 ;; Defined at:
  2251 ;;		line 5 in file "afficheur.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;  data            1    wreg     unsigned char 
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  data            1    0[COMRAM] unsigned char 
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  1    wreg      void 
  2258 ;; Registers used:
  2259 ;;		wreg, status,2
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2268 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2269 ;;Total ram usage:        1 bytes
  2270 ;; Hardware stack levels used: 1
  2271 ;; This function calls:
  2272 ;;		Nothing
  2273 ;; This function is called by:
  2274 ;;		_d1command
  2275 ;;		_d2command
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279                           	psect	text15
  2280   001A26                     __ptext15:
  2281                           	callstack 0
  2282   001A26                     _write_d_aff:
  2283                           	callstack 28
  2284                           
  2285                           ;incstack = 0
  2286                           ;write_d_aff@data stored from wreg
  2287   001A26  6E01               	movwf	write_d_aff@data^0,c
  2288   001A28                     
  2289                           ;afficheur.c: 7: LATH=data;
  2290   001A28  C001  FF90         	movff	write_d_aff@data,3984	;volatile
  2291   001A2C                     
  2292                           ;afficheur.c: 8: TRISH=0x00;
  2293   001A2C  0E00               	movlw	0
  2294   001A2E  6E99               	movwf	153,c	;volatile
  2295   001A30                     
  2296                           ;afficheur.c: 9: LATJbits.LATJ0=0;
  2297   001A30  9091               	bcf	145,0,c	;volatile
  2298   001A32                     
  2299                           ;afficheur.c: 10: LATJbits.LATJ3=0;
  2300   001A32  9691               	bcf	145,3,c	;volatile
  2301   001A34                     
  2302                           ;afficheur.c: 11: LATJbits.LATJ2=0;
  2303   001A34  9491               	bcf	145,2,c	;volatile
  2304   001A36                     
  2305                           ;afficheur.c: 12: __nop();
  2306   001A36  F000               	nop	
  2307   001A38                     
  2308                           ;afficheur.c: 13: __nop();
  2309   001A38  F000               	nop	
  2310   001A3A                     
  2311                           ;afficheur.c: 14: LATJbits.LATJ2=1;
  2312   001A3A  8491               	bsf	145,2,c	;volatile
  2313   001A3C                     
  2314                           ;afficheur.c: 15: LATJbits.LATJ3=1;
  2315   001A3C  8691               	bsf	145,3,c	;volatile
  2316   001A3E  0012               	return		;funcret
  2317   001A40                     __end_of_write_d_aff:
  2318                           	callstack 0
  2319                           
  2320 ;; *************** function _write_c_aff *****************
  2321 ;; Defined at:
  2322 ;;		line 18 in file "afficheur.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;  command         1    wreg     unsigned char 
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;  command         1    0[COMRAM] unsigned char 
  2327 ;; Return value:  Size  Location     Type
  2328 ;;                  1    wreg      void 
  2329 ;; Registers used:
  2330 ;;		wreg, status,2
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2337 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2339 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2340 ;;Total ram usage:        1 bytes
  2341 ;; Hardware stack levels used: 1
  2342 ;; This function calls:
  2343 ;;		Nothing
  2344 ;; This function is called by:
  2345 ;;		_command
  2346 ;;		_d1command
  2347 ;;		_d2command
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351                           	psect	text16
  2352   001A40                     __ptext16:
  2353                           	callstack 0
  2354   001A40                     _write_c_aff:
  2355                           	callstack 28
  2356                           
  2357                           ;incstack = 0
  2358                           ;write_c_aff@command stored from wreg
  2359   001A40  6E01               	movwf	write_c_aff@command^0,c
  2360   001A42                     
  2361                           ;afficheur.c: 20: LATH=command;
  2362   001A42  C001  FF90         	movff	write_c_aff@command,3984	;volatile
  2363   001A46                     
  2364                           ;afficheur.c: 21: TRISH=0x00;
  2365   001A46  0E00               	movlw	0
  2366   001A48  6E99               	movwf	153,c	;volatile
  2367   001A4A                     
  2368                           ;afficheur.c: 22: LATJbits.LATJ0=1;
  2369   001A4A  8091               	bsf	145,0,c	;volatile
  2370   001A4C                     
  2371                           ;afficheur.c: 23: LATJbits.LATJ3=0;
  2372   001A4C  9691               	bcf	145,3,c	;volatile
  2373   001A4E                     
  2374                           ;afficheur.c: 24: LATJbits.LATJ2=0;
  2375   001A4E  9491               	bcf	145,2,c	;volatile
  2376   001A50                     
  2377                           ;afficheur.c: 25: __nop();
  2378   001A50  F000               	nop	
  2379   001A52                     
  2380                           ;afficheur.c: 26: __nop();
  2381   001A52  F000               	nop	
  2382   001A54                     
  2383                           ;afficheur.c: 27: LATJbits.LATJ2=1;
  2384   001A54  8491               	bsf	145,2,c	;volatile
  2385   001A56                     
  2386                           ;afficheur.c: 28: LATJbits.LATJ3=1;
  2387   001A56  8691               	bsf	145,3,c	;volatile
  2388   001A58  0012               	return		;funcret
  2389   001A5A                     __end_of_write_c_aff:
  2390                           	callstack 0
  2391                           
  2392 ;; *************** function _wait_status_ok *****************
  2393 ;; Defined at:
  2394 ;;		line 54 in file "afficheur.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;		None
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;  res             1    3[COMRAM] unsigned char 
  2399 ;;  status          1    2[COMRAM] unsigned char 
  2400 ;;  err             1    1[COMRAM] unsigned char 
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  1    wreg      unsigned char 
  2403 ;; Registers used:
  2404 ;;		wreg, status,2, status,0, cstack
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2411 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2413 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2414 ;;Total ram usage:        3 bytes
  2415 ;; Hardware stack levels used: 1
  2416 ;; Hardware stack levels required when called: 1
  2417 ;; This function calls:
  2418 ;;		_delai_us_char
  2419 ;; This function is called by:
  2420 ;;		_command
  2421 ;;		_d1command
  2422 ;;		_d2command
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           	psect	text17
  2427   001630                     __ptext17:
  2428                           	callstack 0
  2429   001630                     _wait_status_ok:
  2430                           	callstack 27
  2431   001630                     
  2432                           ;afficheur.c: 56: unsigned char err,res,status;;afficheur.c: 58: err=0;
  2433   001630  0E00               	movlw	0
  2434   001632  6E02               	movwf	wait_status_ok@err^0,c
  2435                           
  2436                           ;afficheur.c: 59: res=2;
  2437   001634  0E02               	movlw	2
  2438   001636  6E04               	movwf	wait_status_ok@res^0,c
  2439                           
  2440                           ;afficheur.c: 60: while (res==2)
  2441   001638  EF48  F00B         	goto	l1743
  2442   00163C                     l100:
  2443                           
  2444                           ;afficheur.c: 61: {;afficheur.c: 62: TRISH=0xFF;
  2445   00163C  6899               	setf	153,c	;volatile
  2446                           
  2447                           ;afficheur.c: 63: LATJbits.LATJ0=1;
  2448   00163E  8091               	bsf	145,0,c	;volatile
  2449                           
  2450                           ;afficheur.c: 64: LATJbits.LATJ3=0;
  2451   001640  9691               	bcf	145,3,c	;volatile
  2452                           
  2453                           ;afficheur.c: 65: LATJbits.LATJ1=0;
  2454   001642  9291               	bcf	145,1,c	;volatile
  2455                           
  2456                           ;afficheur.c: 66: __nop();
  2457   001644  F000               	nop	
  2458                           
  2459                           ;afficheur.c: 67: status=PORTH;
  2460   001646  CF87 F003          	movff	3975,wait_status_ok@status	;volatile
  2461                           
  2462                           ;afficheur.c: 68: LATJbits.LATJ1=1;
  2463   00164A  8291               	bsf	145,1,c	;volatile
  2464                           
  2465                           ;afficheur.c: 69: LATJbits.LATJ3=1;
  2466   00164C  8691               	bsf	145,3,c	;volatile
  2467   00164E                     
  2468                           ;afficheur.c: 71: status=(status&0x03);
  2469   00164E  5003               	movf	wait_status_ok@status^0,w,c
  2470   001650  0B03               	andlw	3
  2471   001652  6E03               	movwf	wait_status_ok@status^0,c
  2472                           
  2473                           ;afficheur.c: 72: if (status!=0x03)
  2474   001654  0E03               	movlw	3
  2475   001656  1803               	xorwf	wait_status_ok@status^0,w,c
  2476   001658  B4D8               	btfsc	status,2,c
  2477   00165A  EF31  F00B         	goto	u641
  2478   00165E  EF33  F00B         	goto	u640
  2479   001662                     u641:
  2480   001662  EF46  F00B         	goto	l1741
  2481   001666                     u640:
  2482   001666                     
  2483                           ;afficheur.c: 73: {;afficheur.c: 74: err++;
  2484   001666  2A02               	incf	wait_status_ok@err^0,f,c
  2485   001668                     
  2486                           ;afficheur.c: 75: delai_us_char(12);
  2487   001668  0E0C               	movlw	12
  2488   00166A  ECA7  F00C         	call	_delai_us_char
  2489   00166E                     
  2490                           ;afficheur.c: 76: if (err>=250)
  2491   00166E  0EF9               	movlw	249
  2492   001670  6402               	cpfsgt	wait_status_ok@err^0,c
  2493   001672  EF3D  F00B         	goto	u651
  2494   001676  EF3F  F00B         	goto	u650
  2495   00167A                     u651:
  2496   00167A  EF48  F00B         	goto	l1743
  2497   00167E                     u650:
  2498   00167E                     
  2499                           ;afficheur.c: 77: {;afficheur.c: 79: LATCbits.LATC2=0;LATCbits.LATC1=1;LATGbits.LATG0=1;
  2500   00167E  948B               	bcf	139,2,c	;volatile
  2501   001680  828B               	bsf	139,1,c	;volatile
  2502   001682  808F               	bsf	143,0,c	;volatile
  2503   001684                     
  2504                           ;afficheur.c: 80: res=0;
  2505   001684  0E00               	movlw	0
  2506   001686  6E04               	movwf	wait_status_ok@res^0,c
  2507   001688  EF48  F00B         	goto	l1743
  2508   00168C                     l1741:
  2509                           
  2510                           ;afficheur.c: 83: else;afficheur.c: 84: {;afficheur.c: 85: res=1;
  2511   00168C  0E01               	movlw	1
  2512   00168E  6E04               	movwf	wait_status_ok@res^0,c
  2513   001690                     l1743:
  2514   001690  0E02               	movlw	2
  2515   001692  1804               	xorwf	wait_status_ok@res^0,w,c
  2516   001694  B4D8               	btfsc	status,2,c
  2517   001696  EF4F  F00B         	goto	u661
  2518   00169A  EF51  F00B         	goto	u660
  2519   00169E                     u661:
  2520   00169E  EF1E  F00B         	goto	l100
  2521   0016A2                     u660:
  2522   0016A2                     
  2523                           ;afficheur.c: 86: };afficheur.c: 87: };afficheur.c: 88: return res;
  2524   0016A2  5004               	movf	wait_status_ok@res^0,w,c
  2525   0016A4  0012               	return		;funcret
  2526   0016A6                     __end_of_wait_status_ok:
  2527                           	callstack 0
  2528                           
  2529 ;; *************** function _delai_us_char *****************
  2530 ;; Defined at:
  2531 ;;		line 155 in file "afficheur.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;  ucdelai         1    wreg     unsigned char 
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;  ucdelai         1    0[COMRAM] unsigned char 
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		wreg, status,2, status,0
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2546 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2548 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2549 ;;Total ram usage:        1 bytes
  2550 ;; Hardware stack levels used: 1
  2551 ;; This function calls:
  2552 ;;		Nothing
  2553 ;; This function is called by:
  2554 ;;		_wait_status_ok
  2555 ;;		_command
  2556 ;;		_d1command
  2557 ;;		_d2command
  2558 ;;		_initialisation_afficheur
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           	psect	text18
  2563   00194E                     __ptext18:
  2564                           	callstack 0
  2565   00194E                     _delai_us_char:
  2566                           	callstack 29
  2567                           
  2568                           ;incstack = 0
  2569                           ;delai_us_char@ucdelai stored from wreg
  2570   00194E  6E01               	movwf	delai_us_char@ucdelai^0,c
  2571   001950                     
  2572                           ;afficheur.c: 158: while (ucdelai>0)
  2573   001950  EFB5  F00C         	goto	l1689
  2574   001954                     l124:
  2575                           
  2576                           ;afficheur.c: 159: {;afficheur.c: 160: __nop();__nop();__nop();__nop();__nop();__nop();_
      +                          _nop();__nop();__nop();__nop();
  2577   001954  F000               	nop	
  2578   001956  F000               	nop	
  2579   001958  F000               	nop	
  2580   00195A  F000               	nop	
  2581   00195C  F000               	nop	
  2582   00195E  F000               	nop	
  2583   001960  F000               	nop	
  2584   001962  F000               	nop	
  2585   001964  F000               	nop	
  2586   001966  F000               	nop	
  2587   001968                     
  2588                           ;afficheur.c: 161: ucdelai--;
  2589   001968  0601               	decf	delai_us_char@ucdelai^0,f,c
  2590   00196A                     l1689:
  2591   00196A  5001               	movf	delai_us_char@ucdelai^0,w,c
  2592   00196C  A4D8               	btfss	status,2,c
  2593   00196E  EFBB  F00C         	goto	u631
  2594   001972  EFBD  F00C         	goto	u630
  2595   001976                     u631:
  2596   001976  EFAA  F00C         	goto	l124
  2597   00197A                     u630:
  2598   00197A  0012               	return		;funcret
  2599   00197C                     __end_of_delai_us_char:
  2600                           	callstack 0
  2601                           
  2602 ;; *************** function _SPI_Initialize *****************
  2603 ;; Defined at:
  2604 ;;		line 3 in file "spi.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;		None
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;		None
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1    wreg      void 
  2611 ;; Registers used:
  2612 ;;		wreg, status,2
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2622 ;;Total ram usage:        0 bytes
  2623 ;; Hardware stack levels used: 1
  2624 ;; This function calls:
  2625 ;;		Nothing
  2626 ;; This function is called by:
  2627 ;;		_main
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           	psect	text19
  2632   001A74                     __ptext19:
  2633                           	callstack 0
  2634   001A74                     _SPI_Initialize:
  2635                           	callstack 30
  2636   001A74                     
  2637                           ;spi.c: 6: SSP2STAT = 0x00;
  2638   001A74  0E00               	movlw	0
  2639   001A76  6E68               	movwf	104,c	;volatile
  2640                           
  2641                           ;spi.c: 7: SSP2CON1 = 0x31;
  2642   001A78  0E31               	movlw	49
  2643   001A7A  6E67               	movwf	103,c	;volatile
  2644   001A7C                     
  2645                           ;spi.c: 11: TRISDbits.TRISD4 = 0;
  2646   001A7C  9895               	bcf	149,4,c	;volatile
  2647   001A7E                     
  2648                           ;spi.c: 13: TRISDbits.TRISD6 = 0;
  2649   001A7E  9C95               	bcf	149,6,c	;volatile
  2650   001A80                     
  2651                           ;spi.c: 15: TRISFbits.TRISF7 = 0;
  2652   001A80  9E97               	bcf	151,7,c	;volatile
  2653   001A82                     
  2654                           ;spi.c: 16: LATFbits.LATF7 = 1;
  2655   001A82  8E8E               	bsf	142,7,c	;volatile
  2656   001A84                     
  2657                           ;spi.c: 17: PIR2bits.SSP2IF = 0;
  2658   001A84  9AA1               	bcf	161,5,c	;volatile
  2659   001A86                     
  2660                           ;spi.c: 19: SSP2CON1bits.SSPEN = 1;
  2661   001A86  8A67               	bsf	103,5,c	;volatile
  2662   001A88  0012               	return		;funcret
  2663   001A8A                     __end_of_SPI_Initialize:
  2664                           	callstack 0
  2665                           
  2666 ;; *************** function _EEP_SPI_WriteBytes *****************
  2667 ;; Defined at:
  2668 ;;		line 70 in file "eep_spi.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;  Fu8Address      1    wreg     unsigned char 
  2671 ;;  Fpu8Data        2   11[COMRAM] PTR unsigned char 
  2672 ;;		 -> main@tu8Data(16), 
  2673 ;;  Fu8Size         1   13[COMRAM] unsigned char 
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;  Fu8Address      1   14[COMRAM] unsigned char 
  2676 ;;  u8Index         1   15[COMRAM] unsigned char 
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  1    wreg      void 
  2679 ;; Registers used:
  2680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2686 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2687 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2689 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2690 ;;Total ram usage:        5 bytes
  2691 ;; Hardware stack levels used: 1
  2692 ;; Hardware stack levels required when called: 3
  2693 ;; This function calls:
  2694 ;;		_EEP_SPI_WriteByte
  2695 ;; This function is called by:
  2696 ;;		_main
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           
  2700                           	psect	text20
  2701   001802                     __ptext20:
  2702                           	callstack 0
  2703   001802                     _EEP_SPI_WriteBytes:
  2704                           	callstack 27
  2705                           
  2706                           ;incstack = 0
  2707                           ;EEP_SPI_WriteBytes@Fu8Address stored from wreg
  2708   001802  6E0F               	movwf	EEP_SPI_WriteBytes@Fu8Address^0,c
  2709   001804                     
  2710                           ;eep_spi.c: 72: uint8_t u8Index = 0x00;
  2711   001804  0E00               	movlw	0
  2712   001806  6E10               	movwf	EEP_SPI_WriteBytes@u8Index^0,c
  2713                           
  2714                           ;eep_spi.c: 74: for(u8Index=0x00; u8Index<Fu8Size; u8Index++)
  2715   001808  0E00               	movlw	0
  2716   00180A  6E10               	movwf	EEP_SPI_WriteBytes@u8Index^0,c
  2717   00180C  EF15  F00C         	goto	l2121
  2718   001810                     l2117:
  2719                           
  2720                           ;eep_spi.c: 75: {;eep_spi.c: 76: EEP_SPI_WriteByte((Fu8Address+u8Index), *(Fpu8Data+u8In
      +                          dex));
  2721   001810  5010               	movf	EEP_SPI_WriteBytes@u8Index^0,w,c
  2722   001812  240C               	addwf	EEP_SPI_WriteBytes@Fpu8Data^0,w,c
  2723   001814  6ED9               	movwf	fsr2l,c
  2724   001816  0E00               	movlw	0
  2725   001818  200D               	addwfc	(EEP_SPI_WriteBytes@Fpu8Data+1)^0,w,c
  2726   00181A  6EDA               	movwf	fsr2h,c
  2727   00181C  50DF               	movf	indf2,w,c
  2728   00181E  6E07               	movwf	EEP_SPI_WriteByte@Fu8Data^0,c
  2729   001820  500F               	movf	EEP_SPI_WriteBytes@Fu8Address^0,w,c
  2730   001822  2410               	addwf	EEP_SPI_WriteBytes@u8Index^0,w,c
  2731   001824  ECDB  F00B         	call	_EEP_SPI_WriteByte
  2732   001828  2A10               	incf	EEP_SPI_WriteBytes@u8Index^0,f,c
  2733   00182A                     l2121:
  2734   00182A  500E               	movf	EEP_SPI_WriteBytes@Fu8Size^0,w,c
  2735   00182C  5C10               	subwf	EEP_SPI_WriteBytes@u8Index^0,w,c
  2736   00182E  A0D8               	btfss	status,0,c
  2737   001830  EF1C  F00C         	goto	u1041
  2738   001834  EF1E  F00C         	goto	u1040
  2739   001838                     u1041:
  2740   001838  EF08  F00C         	goto	l2117
  2741   00183C                     u1040:
  2742   00183C  0012               	return		;funcret
  2743   00183E                     __end_of_EEP_SPI_WriteBytes:
  2744                           	callstack 0
  2745                           
  2746 ;; *************** function _EEP_SPI_WriteByte *****************
  2747 ;; Defined at:
  2748 ;;		line 50 in file "eep_spi.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  Fu8Address      1    wreg     unsigned char 
  2751 ;;  Fu8Data         1    6[COMRAM] unsigned char 
  2752 ;; Auto vars:     Size  Location     Type
  2753 ;;  Fu8Address      1    7[COMRAM] unsigned char 
  2754 ;;  tu8Data         3    8[COMRAM] unsigned char [3]
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      void 
  2757 ;; Registers used:
  2758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2764 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2765 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2767 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2768 ;;Total ram usage:        5 bytes
  2769 ;; Hardware stack levels used: 1
  2770 ;; Hardware stack levels required when called: 2
  2771 ;; This function calls:
  2772 ;;		_EEP_SPI_EnableWrite
  2773 ;;		_EEP_SPI_IsWriteInProgress
  2774 ;;		_SPI_ExchangeBlock
  2775 ;; This function is called by:
  2776 ;;		_EEP_SPI_WriteBytes
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780                           	psect	text21
  2781   0017B6                     __ptext21:
  2782                           	callstack 0
  2783   0017B6                     _EEP_SPI_WriteByte:
  2784                           	callstack 27
  2785                           
  2786                           ;incstack = 0
  2787                           ;EEP_SPI_WriteByte@Fu8Address stored from wreg
  2788   0017B6  6E08               	movwf	EEP_SPI_WriteByte@Fu8Address^0,c
  2789   0017B8                     
  2790                           ;eep_spi.c: 52: uint8_t tu8Data[3] = {0, 0, 0};
  2791   0017B8  0E00               	movlw	0
  2792   0017BA  6E09               	movwf	EEP_SPI_WriteByte@tu8Data^0,c
  2793   0017BC  0E00               	movlw	0
  2794   0017BE  6E0A               	movwf	(EEP_SPI_WriteByte@tu8Data+1)^0,c
  2795   0017C0  0E00               	movlw	0
  2796   0017C2  6E0B               	movwf	(EEP_SPI_WriteByte@tu8Data+2)^0,c
  2797                           
  2798                           ;eep_spi.c: 53: tu8Data[0] = 0x02;
  2799   0017C4  0E02               	movlw	2
  2800   0017C6  6E09               	movwf	EEP_SPI_WriteByte@tu8Data^0,c
  2801   0017C8                     
  2802                           ;eep_spi.c: 54: tu8Data[1] = Fu8Address;
  2803   0017C8  C008  F00A         	movff	EEP_SPI_WriteByte@Fu8Address,EEP_SPI_WriteByte@tu8Data+1
  2804   0017CC                     
  2805                           ;eep_spi.c: 55: tu8Data[2] = Fu8Data;
  2806   0017CC  C007  F00B         	movff	EEP_SPI_WriteByte@Fu8Data,EEP_SPI_WriteByte@tu8Data+2
  2807   0017D0                     l1967:
  2808   0017D0  ECBE  F00C         	call	_EEP_SPI_IsWriteInProgress	;wreg free
  2809   0017D4  0900               	iorlw	0
  2810   0017D6  A4D8               	btfss	status,2,c
  2811   0017D8  EFF0  F00B         	goto	u901
  2812   0017DC  EFF2  F00B         	goto	u900
  2813   0017E0                     u901:
  2814   0017E0  EFE8  F00B         	goto	l1967
  2815   0017E4                     u900:
  2816   0017E4                     
  2817                           ;eep_spi.c: 62: EEP_SPI_EnableWrite();
  2818   0017E4  EC4D  F00D         	call	_EEP_SPI_EnableWrite	;wreg free
  2819   0017E8                     
  2820                           ;eep_spi.c: 65: LATFbits.LATF7 = 0;
  2821   0017E8  9E8E               	bcf	142,7,c	;volatile
  2822   0017EA                     
  2823                           ;eep_spi.c: 66: SPI_ExchangeBlock(&tu8Data, 3);
  2824   0017EA  0E09               	movlw	low EEP_SPI_WriteByte@tu8Data
  2825   0017EC  6E01               	movwf	SPI_ExchangeBlock@block^0,c
  2826   0017EE  0E00               	movlw	high EEP_SPI_WriteByte@tu8Data
  2827   0017F0  6E02               	movwf	(SPI_ExchangeBlock@block+1)^0,c
  2828   0017F2  0E00               	movlw	0
  2829   0017F4  6E04               	movwf	(SPI_ExchangeBlock@blockSize+1)^0,c
  2830   0017F6  0E03               	movlw	3
  2831   0017F8  6E03               	movwf	SPI_ExchangeBlock@blockSize^0,c
  2832   0017FA  EC8A  F00B         	call	_SPI_ExchangeBlock	;wreg free
  2833   0017FE                     
  2834                           ;eep_spi.c: 67: LATFbits.LATF7 = 1;
  2835   0017FE  8E8E               	bsf	142,7,c	;volatile
  2836   001800  0012               	return		;funcret
  2837   001802                     __end_of_EEP_SPI_WriteByte:
  2838                           	callstack 0
  2839                           
  2840 ;; *************** function _SPI_ExchangeBlock *****************
  2841 ;; Defined at:
  2842 ;;		line 30 in file "spi.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;  block           2    0[COMRAM] PTR void 
  2845 ;;		 -> EEP_SPI_WriteByte@tu8Data(3), 
  2846 ;;  blockSize       2    2[COMRAM] unsigned int 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;  data            2    4[COMRAM] PTR unsigned char 
  2849 ;;		 -> EEP_SPI_WriteByte@tu8Data(3), 
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  1    wreg      void 
  2852 ;; Registers used:
  2853 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2859 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2860 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2862 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2863 ;;Total ram usage:        6 bytes
  2864 ;; Hardware stack levels used: 1
  2865 ;; This function calls:
  2866 ;;		Nothing
  2867 ;; This function is called by:
  2868 ;;		_EEP_SPI_WriteByte
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           	psect	text22
  2873   001714                     __ptext22:
  2874                           	callstack 0
  2875   001714                     _SPI_ExchangeBlock:
  2876                           	callstack 28
  2877   001714                     
  2878                           ;spi.c: 32: uint8_t *data = block;
  2879   001714  C001  F005         	movff	SPI_ExchangeBlock@block,SPI_ExchangeBlock@data
  2880   001718  C002  F006         	movff	SPI_ExchangeBlock@block+1,SPI_ExchangeBlock@data+1
  2881                           
  2882                           ;spi.c: 33: while(blockSize--)
  2883   00171C  EFA6  F00B         	goto	l1797
  2884   001720                     l1791:
  2885                           
  2886                           ;spi.c: 34: {;spi.c: 35: SSP2BUF = *data;
  2887   001720  C005  FFD9         	movff	SPI_ExchangeBlock@data,fsr2l
  2888   001724  C006  FFDA         	movff	SPI_ExchangeBlock@data+1,fsr2h
  2889   001728  50DF               	movf	indf2,w,c
  2890   00172A  6E6A               	movwf	106,c	;volatile
  2891   00172C                     l246:
  2892   00172C  AAA1               	btfss	161,5,c	;volatile
  2893   00172E  EF9B  F00B         	goto	u721
  2894   001732  EF9D  F00B         	goto	u720
  2895   001736                     u721:
  2896   001736  EF96  F00B         	goto	l246
  2897   00173A                     u720:
  2898   00173A                     
  2899                           ;spi.c: 37: PIR2bits.SSP2IF = 0;
  2900   00173A  9AA1               	bcf	161,5,c	;volatile
  2901   00173C                     
  2902                           ;spi.c: 38: *data++ = SSP2BUF;
  2903   00173C  C005  FFD9         	movff	SPI_ExchangeBlock@data,fsr2l
  2904   001740  C006  FFDA         	movff	SPI_ExchangeBlock@data+1,fsr2h
  2905   001744  CF6A FFDF          	movff	3946,indf2	;volatile
  2906   001748  4A05               	infsnz	SPI_ExchangeBlock@data^0,f,c
  2907   00174A  2A06               	incf	(SPI_ExchangeBlock@data+1)^0,f,c
  2908   00174C                     l1797:
  2909   00174C  0603               	decf	SPI_ExchangeBlock@blockSize^0,f,c
  2910   00174E  A0D8               	btfss	status,0,c
  2911   001750  0604               	decf	(SPI_ExchangeBlock@blockSize+1)^0,f,c
  2912   001752  2803               	incf	SPI_ExchangeBlock@blockSize^0,w,c
  2913   001754  E106               	bnz	u731
  2914   001756  2804               	incf	(SPI_ExchangeBlock@blockSize+1)^0,w,c
  2915   001758  A4D8               	btfss	status,2,c
  2916   00175A  EFB1  F00B         	goto	u731
  2917   00175E  EFB3  F00B         	goto	u730
  2918   001762                     u731:
  2919   001762  EF90  F00B         	goto	l1791
  2920   001766                     u730:
  2921   001766  0012               	return		;funcret
  2922   001768                     __end_of_SPI_ExchangeBlock:
  2923                           	callstack 0
  2924                           
  2925 ;; *************** function _EEP_SPI_EnableWrite *****************
  2926 ;; Defined at:
  2927 ;;		line 7 in file "eep_spi.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;		None
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;		None
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  1    wreg      void 
  2934 ;; Registers used:
  2935 ;;		wreg, status,2, cstack
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2945 ;;Total ram usage:        0 bytes
  2946 ;; Hardware stack levels used: 1
  2947 ;; Hardware stack levels required when called: 1
  2948 ;; This function calls:
  2949 ;;		_SPI_ExchangeByte
  2950 ;; This function is called by:
  2951 ;;		_EEP_SPI_WriteByte
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           	psect	text23
  2956   001A9A                     __ptext23:
  2957                           	callstack 0
  2958   001A9A                     _EEP_SPI_EnableWrite:
  2959                           	callstack 27
  2960   001A9A                     
  2961                           ;eep_spi.c: 9: LATFbits.LATF7 = 0;
  2962   001A9A  9E8E               	bcf	142,7,c	;volatile
  2963   001A9C                     
  2964                           ;eep_spi.c: 10: (void)SPI_ExchangeByte(0x06);
  2965   001A9C  0E06               	movlw	6
  2966   001A9E  EC2D  F00D         	call	_SPI_ExchangeByte
  2967   001AA2                     
  2968                           ;eep_spi.c: 11: LATFbits.LATF7 = 1;
  2969   001AA2  8E8E               	bsf	142,7,c	;volatile
  2970   001AA4  0012               	return		;funcret
  2971   001AA6                     __end_of_EEP_SPI_EnableWrite:
  2972                           	callstack 0
  2973                           
  2974 ;; *************** function _EEP_SPI_ReadByte *****************
  2975 ;; Defined at:
  2976 ;;		line 33 in file "eep_spi.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;  Fu8Address      1    wreg     unsigned char 
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;  Fu8Address      1    2[COMRAM] unsigned char 
  2981 ;;  u8ReadData      1    3[COMRAM] unsigned char 
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  1    wreg      unsigned char 
  2984 ;; Registers used:
  2985 ;;		wreg, status,2, status,0, cstack
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2994 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2995 ;;Total ram usage:        2 bytes
  2996 ;; Hardware stack levels used: 1
  2997 ;; Hardware stack levels required when called: 2
  2998 ;; This function calls:
  2999 ;;		_EEP_SPI_IsWriteInProgress
  3000 ;;		_SPI_ExchangeByte
  3001 ;; This function is called by:
  3002 ;;		_main
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           	psect	text24
  3007   0018EC                     __ptext24:
  3008                           	callstack 0
  3009   0018EC                     _EEP_SPI_ReadByte:
  3010                           	callstack 28
  3011                           
  3012                           ;incstack = 0
  3013                           ;EEP_SPI_ReadByte@Fu8Address stored from wreg
  3014   0018EC  6E03               	movwf	EEP_SPI_ReadByte@Fu8Address^0,c
  3015   0018EE                     l2105:
  3016   0018EE  ECBE  F00C         	call	_EEP_SPI_IsWriteInProgress	;wreg free
  3017   0018F2  0900               	iorlw	0
  3018   0018F4  A4D8               	btfss	status,2,c
  3019   0018F6  EF7F  F00C         	goto	u1031
  3020   0018FA  EF81  F00C         	goto	u1030
  3021   0018FE                     u1031:
  3022   0018FE  EF77  F00C         	goto	l2105
  3023   001902                     u1030:
  3024   001902                     
  3025                           ;eep_spi.c: 41: LATFbits.LATF7 = 0;
  3026   001902  9E8E               	bcf	142,7,c	;volatile
  3027   001904                     
  3028                           ;eep_spi.c: 42: SPI_ExchangeByte(0x03);
  3029   001904  0E03               	movlw	3
  3030   001906  EC2D  F00D         	call	_SPI_ExchangeByte
  3031                           
  3032                           ;eep_spi.c: 43: SPI_ExchangeByte(Fu8Address);
  3033   00190A  5003               	movf	EEP_SPI_ReadByte@Fu8Address^0,w,c
  3034   00190C  EC2D  F00D         	call	_SPI_ExchangeByte
  3035                           
  3036                           ;eep_spi.c: 44: u8ReadData = SPI_ExchangeByte(0x00);
  3037   001910  0E00               	movlw	0
  3038   001912  EC2D  F00D         	call	_SPI_ExchangeByte
  3039   001916  6E04               	movwf	EEP_SPI_ReadByte@u8ReadData^0,c
  3040   001918                     
  3041                           ;eep_spi.c: 45: LATFbits.LATF7 = 1;
  3042   001918  8E8E               	bsf	142,7,c	;volatile
  3043   00191A                     
  3044                           ;eep_spi.c: 47: return(u8ReadData);
  3045   00191A  5004               	movf	EEP_SPI_ReadByte@u8ReadData^0,w,c
  3046   00191C  0012               	return		;funcret
  3047   00191E                     __end_of_EEP_SPI_ReadByte:
  3048                           	callstack 0
  3049                           
  3050 ;; *************** function _EEP_SPI_IsWriteInProgress *****************
  3051 ;; Defined at:
  3052 ;;		line 14 in file "eep_spi.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;		None
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;  u8WIP           1    1[COMRAM] unsigned char 
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  1    wreg      unsigned char 
  3059 ;; Registers used:
  3060 ;;		wreg, status,2, status,0, cstack
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3067 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3069 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3070 ;;Total ram usage:        1 bytes
  3071 ;; Hardware stack levels used: 1
  3072 ;; Hardware stack levels required when called: 1
  3073 ;; This function calls:
  3074 ;;		_SPI_ExchangeByte
  3075 ;; This function is called by:
  3076 ;;		_EEP_SPI_ReadByte
  3077 ;;		_EEP_SPI_WriteByte
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           	psect	text25
  3082   00197C                     __ptext25:
  3083                           	callstack 0
  3084   00197C                     _EEP_SPI_IsWriteInProgress:
  3085                           	callstack 27
  3086   00197C                     
  3087                           ;eep_spi.c: 18: LATFbits.LATF7 = 0;
  3088   00197C  9E8E               	bcf	142,7,c	;volatile
  3089   00197E                     
  3090                           ;eep_spi.c: 19: (void)SPI_ExchangeByte(0x05);
  3091   00197E  0E05               	movlw	5
  3092   001980  EC2D  F00D         	call	_SPI_ExchangeByte
  3093   001984                     
  3094                           ;eep_spi.c: 20: u8WIP = SPI_ExchangeByte(0x00)&0x01;
  3095   001984  0E00               	movlw	0
  3096   001986  EC2D  F00D         	call	_SPI_ExchangeByte
  3097   00198A  0B01               	andlw	1
  3098   00198C  6E02               	movwf	EEP_SPI_IsWriteInProgress@u8WIP^0,c
  3099   00198E                     
  3100                           ;eep_spi.c: 21: LATFbits.LATF7 = 1;
  3101   00198E  8E8E               	bsf	142,7,c	;volatile
  3102   001990                     
  3103                           ;eep_spi.c: 23: if(0 != u8WIP)
  3104   001990  5002               	movf	EEP_SPI_IsWriteInProgress@u8WIP^0,w,c
  3105   001992  B4D8               	btfsc	status,2,c
  3106   001994  EFCE  F00C         	goto	u741
  3107   001998  EFD0  F00C         	goto	u740
  3108   00199C                     u741:
  3109   00199C  EFD3  F00C         	goto	l1823
  3110   0019A0                     u740:
  3111   0019A0                     
  3112                           ;eep_spi.c: 24: {;eep_spi.c: 25: return(1);
  3113   0019A0  0E01               	movlw	1
  3114   0019A2  EFD4  F00C         	goto	l284
  3115   0019A6                     l1823:
  3116                           
  3117                           ;eep_spi.c: 27: else;eep_spi.c: 28: {;eep_spi.c: 29: return(0);
  3118   0019A6  0E00               	movlw	0
  3119   0019A8                     l284:
  3120   0019A8  0012               	return		;funcret
  3121   0019AA                     __end_of_EEP_SPI_IsWriteInProgress:
  3122                           	callstack 0
  3123                           
  3124 ;; *************** function _SPI_ExchangeByte *****************
  3125 ;; Defined at:
  3126 ;;		line 22 in file "spi.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;  data            1    wreg     unsigned char 
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;  data            1    0[COMRAM] unsigned char 
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  1    wreg      unsigned char 
  3133 ;; Registers used:
  3134 ;;		wreg, status,2
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3141 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3143 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3144 ;;Total ram usage:        1 bytes
  3145 ;; Hardware stack levels used: 1
  3146 ;; This function calls:
  3147 ;;		Nothing
  3148 ;; This function is called by:
  3149 ;;		_EEP_SPI_EnableWrite
  3150 ;;		_EEP_SPI_IsWriteInProgress
  3151 ;;		_EEP_SPI_ReadByte
  3152 ;;		_SPI_WriteBlock
  3153 ;;		_SPI_ReadBlock
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           	psect	text26
  3158   001A5A                     __ptext26:
  3159                           	callstack 0
  3160   001A5A                     _SPI_ExchangeByte:
  3161                           	callstack 27
  3162                           
  3163                           ;incstack = 0
  3164                           ;SPI_ExchangeByte@data stored from wreg
  3165   001A5A  6E01               	movwf	SPI_ExchangeByte@data^0,c
  3166   001A5C                     
  3167                           ;spi.c: 24: SSP2BUF = data;
  3168   001A5C  C001  FF6A         	movff	SPI_ExchangeByte@data,3946	;volatile
  3169   001A60                     l238:
  3170   001A60  AAA1               	btfss	161,5,c	;volatile
  3171   001A62  EF35  F00D         	goto	u671
  3172   001A66  EF37  F00D         	goto	u670
  3173   001A6A                     u671:
  3174   001A6A  EF30  F00D         	goto	l238
  3175   001A6E                     u670:
  3176   001A6E                     
  3177                           ;spi.c: 26: PIR2bits.SSP2IF = 0;
  3178   001A6E  9AA1               	bcf	161,5,c	;volatile
  3179                           
  3180                           ;spi.c: 27: return SSP2BUF;
  3181   001A70  506A               	movf	106,w,c	;volatile
  3182   001A72  0012               	return		;funcret
  3183   001A74                     __end_of_SPI_ExchangeByte:
  3184                           	callstack 0
  3185                           
  3186 ;; *************** function _EEP_SPI_Initialize *****************
  3187 ;; Defined at:
  3188 ;;		line 3 in file "eep_spi.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;		None
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;		None
  3193 ;; Return value:  Size  Location     Type
  3194 ;;                  1    wreg      void 
  3195 ;; Registers used:
  3196 ;;		None
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3206 ;;Total ram usage:        0 bytes
  3207 ;; Hardware stack levels used: 1
  3208 ;; This function calls:
  3209 ;;		Nothing
  3210 ;; This function is called by:
  3211 ;;		_main
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           	psect	text27
  3216   001AA6                     __ptext27:
  3217                           	callstack 0
  3218   001AA6                     _EEP_SPI_Initialize:
  3219                           	callstack 30
  3220   001AA6  0012               	return		;funcret
  3221   001AA8                     __end_of_EEP_SPI_Initialize:
  3222                           	callstack 0
  3223                           
  3224                           	psect	rparam
  3225   000000                     
  3226                           	psect	idloc
  3227                           
  3228                           ;Config register IDLOC0 @ 0x200000
  3229                           ;	unspecified, using default values
  3230   200000                     	org	2097152
  3231   200000  FF                 	db	255
  3232                           
  3233                           ;Config register IDLOC1 @ 0x200001
  3234                           ;	unspecified, using default values
  3235   200001                     	org	2097153
  3236   200001  FF                 	db	255
  3237                           
  3238                           ;Config register IDLOC2 @ 0x200002
  3239                           ;	unspecified, using default values
  3240   200002                     	org	2097154
  3241   200002  FF                 	db	255
  3242                           
  3243                           ;Config register IDLOC3 @ 0x200003
  3244                           ;	unspecified, using default values
  3245   200003                     	org	2097155
  3246   200003  FF                 	db	255
  3247                           
  3248                           ;Config register IDLOC4 @ 0x200004
  3249                           ;	unspecified, using default values
  3250   200004                     	org	2097156
  3251   200004  FF                 	db	255
  3252                           
  3253                           ;Config register IDLOC5 @ 0x200005
  3254                           ;	unspecified, using default values
  3255   200005                     	org	2097157
  3256   200005  FF                 	db	255
  3257                           
  3258                           ;Config register IDLOC6 @ 0x200006
  3259                           ;	unspecified, using default values
  3260   200006                     	org	2097158
  3261   200006  FF                 	db	255
  3262                           
  3263                           ;Config register IDLOC7 @ 0x200007
  3264                           ;	unspecified, using default values
  3265   200007                     	org	2097159
  3266   200007  FF                 	db	255
  3267                           
  3268                           	psect	config
  3269                           
  3270                           ;Config register CONFIG1L @ 0x300000
  3271                           ;	VREG Sleep Enable bit
  3272                           ;	RETEN = ON, Enabled
  3273                           ;	LF-INTOSC Low-power Enable bit
  3274                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
  3275                           ;	SOSC Power Selection and mode Configuration bits
  3276                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
  3277                           ;	Extended Instruction Set
  3278                           ;	XINST = OFF, Disabled
  3279   300000                     	org	3145728
  3280   300000  15                 	db	21
  3281                           
  3282                           ;Config register CONFIG1H @ 0x300001
  3283                           ;	Oscillator
  3284                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
  3285                           ;	PLL x4 Enable bit
  3286                           ;	PLLCFG = ON, Enabled
  3287                           ;	Fail-Safe Clock Monitor
  3288                           ;	FCMEN = OFF, Disabled
  3289                           ;	Internal External Oscillator Switch Over Mode
  3290                           ;	IESO = OFF, Disabled
  3291   300001                     	org	3145729
  3292   300001  13                 	db	19
  3293                           
  3294                           ;Config register CONFIG2L @ 0x300002
  3295                           ;	Power Up Timer
  3296                           ;	PWRTEN = OFF, Disabled
  3297                           ;	Brown Out Detect
  3298                           ;	BOREN = OFF, Disabled in hardware, SBOREN disabled
  3299                           ;	Brown-out Reset Voltage bits
  3300                           ;	BORV = 0, 3.0V
  3301                           ;	BORMV Power level
  3302                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
  3303   300002                     	org	3145730
  3304   300002  61                 	db	97
  3305                           
  3306                           ;Config register CONFIG2H @ 0x300003
  3307                           ;	Watchdog Timer
  3308                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
  3309                           ;	Watchdog Postscaler
  3310                           ;	WDTPS = 1, 1:1
  3311   300003                     	org	3145731
  3312   300003  00                 	db	0
  3313                           
  3314                           ;Config register CONFIG3L @ 0x300004
  3315                           ;	RTCC Clock Select
  3316                           ;	RTCOSC = INTOSCREF, RTCC uses INTRC
  3317                           ;	External Address Shift bit
  3318                           ;	EASHFT = OFF, Address Shifting disabled
  3319                           ;	Address Bus Width Select bits
  3320                           ;	ABW = MM, 8-bit address bus
  3321                           ;	Data Bus Width
  3322                           ;	BW = 8, 8-bit external bus mode
  3323                           ;	External Bus Wait
  3324                           ;	WAIT = ON, Enabled
  3325   300004                     	org	3145732
  3326   300004  30                 	db	48
  3327                           
  3328                           ;Config register CONFIG3H @ 0x300005
  3329                           ;	CCP2 Mux
  3330                           ;	CCP2MX = PORTBE, RE7-Microcontroller Mode/RB3-All other modes
  3331                           ;	ECCP Mux
  3332                           ;	ECCPMX = PORTH, Enhanced CCP1/3 [P1B/P1C/P3B/P3C] muxed with RH7/RH6/RH5/RH4
  3333                           ;	MSSP address masking
  3334                           ;	MSSPMSK = MSK5, 5 bit address masking mode
  3335                           ;	Master Clear Enable
  3336                           ;	MCLRE = ON, MCLR Enabled, RG5 Disabled
  3337   300005                     	org	3145733
  3338   300005  80                 	db	128
  3339                           
  3340                           ;Config register CONFIG4L @ 0x300006
  3341                           ;	Stack Overflow Reset
  3342                           ;	STVREN = ON, Enabled
  3343                           ;	Boot Block Size
  3344                           ;	BBSIZ = BB1K, 1K word Boot Block size
  3345                           ;	Background Debug
  3346                           ;	DEBUG = OFF, Disabled
  3347   300006                     	org	3145734
  3348   300006  81                 	db	129
  3349                           
  3350                           ; Padding undefined space
  3351   300007                     	org	3145735
  3352   300007  FF                 	db	255
  3353                           
  3354                           ;Config register CONFIG5L @ 0x300008
  3355                           ;	Code Protect 00800-03FFF
  3356                           ;	CP0 = OFF, Disabled
  3357                           ;	Code Protect 04000-07FFF
  3358                           ;	CP1 = OFF, Disabled
  3359                           ;	Code Protect 08000-0BFFF
  3360                           ;	CP2 = OFF, Disabled
  3361                           ;	Code Protect 0C000-0FFFF
  3362                           ;	CP3 = OFF, Disabled
  3363                           ;	Code Protect 10000-13FFF
  3364                           ;	CP4 = OFF, Disabled
  3365                           ;	Code Protect 14000-17FFF
  3366                           ;	CP5 = OFF, Disabled
  3367                           ;	Code Protect 18000-1BFFF
  3368                           ;	CP6 = OFF, Disabled
  3369                           ;	Code Protect 1C000-1FFFF
  3370                           ;	CP7 = OFF, Disabled
  3371   300008                     	org	3145736
  3372   300008  FF                 	db	255
  3373                           
  3374                           ;Config register CONFIG5H @ 0x300009
  3375                           ;	Code Protect Boot
  3376                           ;	CPB = OFF, Disabled
  3377                           ;	Data EE Read Protect
  3378                           ;	CPD = OFF, Disabled
  3379   300009                     	org	3145737
  3380   300009  C0                 	db	192
  3381                           
  3382                           ;Config register CONFIG6L @ 0x30000A
  3383                           ;	Table Write Protect 00800-03FFF
  3384                           ;	WRT0 = OFF, Disabled
  3385                           ;	Table Write Protect 04000-07FFF
  3386                           ;	WRT1 = OFF, Disabled
  3387                           ;	Table Write Protect 08000-0BFFF
  3388                           ;	WRT2 = OFF, Disabled
  3389                           ;	Table Write Protect 0C000-0FFFF
  3390                           ;	WRT3 = OFF, Disabled
  3391                           ;	Table Write Protect 10000-13FFF
  3392                           ;	WRT4 = OFF, Disabled
  3393                           ;	Table Write Protect 14000-17FFF
  3394                           ;	WRT5 = OFF, Disabled
  3395                           ;	Table Write Protect 18000-1BFFF
  3396                           ;	WRT6 = OFF, Disabled
  3397                           ;	Table Write Protect 1C000-1FFFF
  3398                           ;	WRT7 = OFF, Disabled
  3399   30000A                     	org	3145738
  3400   30000A  FF                 	db	255
  3401                           
  3402                           ;Config register CONFIG6H @ 0x30000B
  3403                           ;	Config. Write Protect
  3404                           ;	WRTC = OFF, Disabled
  3405                           ;	Table Write Protect Boot
  3406                           ;	WRTB = OFF, Disabled
  3407                           ;	Data EE Write Protect
  3408                           ;	WRTD = OFF, Disabled
  3409   30000B                     	org	3145739
  3410   30000B  E0                 	db	224
  3411                           
  3412                           ;Config register CONFIG7L @ 0x30000C
  3413                           ;	Table Read Protect 00800-03FFF
  3414                           ;	EBRT0 = OFF, Disabled
  3415                           ;	Table Read Protect 04000-07FFF
  3416                           ;	EBRT1 = OFF, Disabled
  3417                           ;	Table Read Protect 08000-0BFFF
  3418                           ;	EBRT2 = OFF, Disabled
  3419                           ;	Table Read Protect 0C000-0FFFF
  3420                           ;	EBRT3 = OFF, Disabled
  3421                           ;	Table Read Protect 10000-13FFF
  3422                           ;	EBRT4 = OFF, Disabled
  3423                           ;	Table Read Protect 14000-17FFF
  3424                           ;	EBRT5 = OFF, Disabled
  3425                           ;	Table Read Protect 18000-1BFFF
  3426                           ;	EBRT6 = OFF, Disabled
  3427                           ;	Table Read Protect 1C000-1FFFF
  3428                           ;	EBRT7 = OFF, Disabled
  3429   30000C                     	org	3145740
  3430   30000C  FF                 	db	255
  3431                           
  3432                           ;Config register CONFIG7H @ 0x30000D
  3433                           ;	Table Read Protect Boot
  3434                           ;	EBRTB = OFF, Disabled
  3435   30000D                     	org	3145741
  3436   30000D  40                 	db	64
  3437                           tosu	equ	0xFFF
  3438                           tosh	equ	0xFFE
  3439                           tosl	equ	0xFFD
  3440                           stkptr	equ	0xFFC
  3441                           pclatu	equ	0xFFB
  3442                           pclath	equ	0xFFA
  3443                           pcl	equ	0xFF9
  3444                           tblptru	equ	0xFF8
  3445                           tblptrh	equ	0xFF7
  3446                           tblptrl	equ	0xFF6
  3447                           tablat	equ	0xFF5
  3448                           prodh	equ	0xFF4
  3449                           prodl	equ	0xFF3
  3450                           indf0	equ	0xFEF
  3451                           postinc0	equ	0xFEE
  3452                           postdec0	equ	0xFED
  3453                           preinc0	equ	0xFEC
  3454                           plusw0	equ	0xFEB
  3455                           fsr0h	equ	0xFEA
  3456                           fsr0l	equ	0xFE9
  3457                           wreg	equ	0xFE8
  3458                           indf1	equ	0xFE7
  3459                           postinc1	equ	0xFE6
  3460                           postdec1	equ	0xFE5
  3461                           preinc1	equ	0xFE4
  3462                           plusw1	equ	0xFE3
  3463                           fsr1h	equ	0xFE2
  3464                           fsr1l	equ	0xFE1
  3465                           bsr	equ	0xFE0
  3466                           indf2	equ	0xFDF
  3467                           postinc2	equ	0xFDE
  3468                           postdec2	equ	0xFDD
  3469                           preinc2	equ	0xFDC
  3470                           plusw2	equ	0xFDB
  3471                           fsr2h	equ	0xFDA
  3472                           fsr2l	equ	0xFD9
  3473                           status	equ	0xFD8

Data Sizes:
    Strings     6
    Constant    0
    Data        16
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     59      78
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    EEP_SPI_WriteBytes@Fpu8Data	PTR unsigned char  size(2) Largest target is 16
		 -> main@tu8Data(COMRAM[16]), 

    SPI_ExchangeBlock@block	PTR void  size(2) Largest target is 3
		 -> EEP_SPI_WriteByte@tu8Data(COMRAM[3]), 

    SPI_ExchangeBlock@data	PTR unsigned char  size(2) Largest target is 3
		 -> EEP_SPI_WriteByte@tu8Data(COMRAM[3]), 

    draw_string@tableau	PTR unsigned char  size(2) Largest target is 20
		 -> STR_1(CODE[6]), main@tu8DataFromEEPROM(COMRAM[20]), 


Critical Paths under _main in COMRAM

    _main->_drawVericalLine
    _initialisation_afficheur->_d2command
    _goto_lico->_d2command
    _draw_string->_d1command
    _drawVericalLine->_plot1
    _plot1->___awdiv
    _plot1->_d2command
    _command->_wait_status_ok
    _clear_text->_d2command
    _clear_graphics->_d2command
    _d2command->_wait_status_ok
    _d1command->_wait_status_ok
    _wait_status_ok->_delai_us_char
    _EEP_SPI_WriteBytes->_EEP_SPI_WriteByte
    _EEP_SPI_WriteByte->_SPI_ExchangeBlock
    _EEP_SPI_EnableWrite->_SPI_ExchangeByte
    _EEP_SPI_ReadByte->_EEP_SPI_IsWriteInProgress
    _EEP_SPI_IsWriteInProgress->_SPI_ExchangeByte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                41    41      0   21772
                                             18 COMRAM    41    41      0
                 _EEP_SPI_Initialize
                   _EEP_SPI_ReadByte
                 _EEP_SPI_WriteBytes
                     _SPI_Initialize
                            ___awdiv
                     _clear_graphics
                         _clear_text
                    _drawVericalLine
                        _draw_string
                          _goto_lico
           _initialisation_afficheur
           _initialisation_des_ports
 ---------------------------------------------------------------------------------
 (1) _initialisation_des_ports                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialisation_afficheur                             1     1      0    3466
                                              8 COMRAM     1     1      0
                    _check_status_ok
                            _command
                          _d1command
                          _d2command
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (2) _check_status_ok                                      1     1      0      47
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _goto_lico                                            6     5      1    2583
                                              8 COMRAM     6     5      1
                          _d2command
 ---------------------------------------------------------------------------------
 (1) _draw_string                                          2     0      2    1080
                                              7 COMRAM     2     0      2
                          _d1command
 ---------------------------------------------------------------------------------
 (1) _drawVericalLine                                      4     2      2    5056
                                             14 COMRAM     4     2      2
                              _plot1
 ---------------------------------------------------------------------------------
 (2) _plot1                                                6     5      1    4791
                                              8 COMRAM     6     5      1
                            ___awdiv
                            ___awmod
                            _command
                          _d2command
 ---------------------------------------------------------------------------------
 (2) _command                                              2     2      0     215
                                              4 COMRAM     1     1      0
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1516
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _clear_text                                           2     2      0    3202
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (1) _clear_graphics                                       2     2      0    3202
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (2) _d2command                                            4     2      2    2273
                                              4 COMRAM     4     2      2
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (2) _d1command                                            3     2      1     883
                                              4 COMRAM     3     2      1
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (3) _write_d_aff                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _write_c_aff                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _wait_status_ok                                       3     3      0     140
                                              1 COMRAM     3     3      0
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (2) _delai_us_char                                        1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EEP_SPI_WriteBytes                                   5     2      3     792
                                             11 COMRAM     5     2      3
                  _EEP_SPI_WriteByte
 ---------------------------------------------------------------------------------
 (2) _EEP_SPI_WriteByte                                    5     4      1     505
                                              6 COMRAM     5     4      1
                _EEP_SPI_EnableWrite
          _EEP_SPI_IsWriteInProgress
                  _SPI_ExchangeBlock
 ---------------------------------------------------------------------------------
 (3) _SPI_ExchangeBlock                                    6     2      4     242
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _EEP_SPI_EnableWrite                                  0     0      0      22
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _EEP_SPI_ReadByte                                     2     2      0     114
                                              2 COMRAM     2     2      0
          _EEP_SPI_IsWriteInProgress
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _EEP_SPI_IsWriteInProgress                            1     1      0      46
                                              1 COMRAM     1     1      0
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (4) _SPI_ExchangeByte                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EEP_SPI_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEP_SPI_Initialize
   _EEP_SPI_ReadByte
     _EEP_SPI_IsWriteInProgress
       _SPI_ExchangeByte
     _SPI_ExchangeByte
   _EEP_SPI_WriteBytes
     _EEP_SPI_WriteByte
       _EEP_SPI_EnableWrite
         _SPI_ExchangeByte
       _EEP_SPI_IsWriteInProgress
       _SPI_ExchangeBlock
   _SPI_Initialize
   ___awdiv
   _clear_graphics
     _d1command
       _delai_us_char
       _wait_status_ok
         _delai_us_char
       _write_c_aff
       _write_d_aff
     _d2command
       _delai_us_char
       _wait_status_ok
       _write_c_aff
       _write_d_aff
   _clear_text
     _d1command
     _d2command
   _drawVericalLine
     _plot1
       ___awdiv
       ___awmod
       _command
         _delai_us_char
         _wait_status_ok
         _write_c_aff
       _d2command
   _draw_string
     _d1command
   _goto_lico
     _d2command
   _initialisation_afficheur
     _check_status_ok
     _command
     _d1command
     _d2command
     _delai_us_char
   _initialisation_des_ports

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3B      4E       1       82.1%
BITBIGSFRhhhhhh     4F      0       0      37        0.0%
BITBIGSFRhll        2C      0       0      46        0.0%
BITBIGSFRhlhlhh     1C      0       0      43        0.0%
BITBANK15           16      0       0      34        0.0%
BANK15              16      0       0      35        0.0%
BITBIGSFRhlhll      13      0       0      45        0.0%
BITBIGSFRhhhhhh      E      0       0      36        0.0%
BITBIGSFRl           D      0       0      47        0.0%
BITBIGSFRhhhhhh      6      0       0      38        0.0%
BITBIGSFRhlhh        3      0       0      42        0.0%
BITBIGSFRhhl         2      0       0      41        0.0%
BITBIGSFRhlhlhl      1      0       0      44        0.0%
BITBIGSFRhhhhhl      1      0       0      39        0.0%
BITBIGSFRhhhhl       1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4E      48        0.0%
DATA                 0      0      4E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Jan 16 09:29:33 2023

                     _SPI_Initialize 1A74            ?_initialisation_des_ports 0001  
                                 l45 1A00                                   l62 120E  
                                 l63 120E                                   l91 1A58  
                                 l95 1874                                   l88 1A3E  
                                 l96 1876                         ___awdiv@sign 0006  
                                l100 163C                                  l120 1712  
                                l105 16A4                                  l114 17B4  
                                l124 1954                                  l109 1A24  
                                l133 12F6                                  l126 197A  
                                l150 15B6                                  l240 1A6E  
                                l216 194C                                  l241 1A72  
                                l305 183C                                  l250 1766  
                                l235 1A88                                  l147 1542  
                                l171 162E                                  l181 18EA  
                                l238 1A60                                  l246 172C  
                                l280 1AA4                                  l248 173A  
                                l176 18B0                                  l169 160E  
                                l290 1902                                  l291 191C  
                                l284 19A8                                  l277 1AA6  
                                l198 13C8                                  l552 153C  
                                l299 1800                                  l539 148C  
                        main@u8Index 003A                         ?_draw_string 0008  
                                u700 16E0                                  u701 16DC  
                                u630 197A                                  u710 1700  
                                u631 1976                                  u711 16FC  
                                u720 173A                                  u640 1666  
                                u800 147C                                  u721 1736  
                                u641 1662                                  u801 1478  
                                u730 1766                                  u650 167E  
                                u810 14A0                                  u731 1762  
                                u651 167A                                  u811 149C  
                                u740 19A0                                  u900 17E4  
                                u660 16A2                                  u820 14BA  
                                u741 199C                                  u901 17E0  
                                u661 169E                                  u821 14B6  
                                u670 1A6E                                  u750 13DC  
                                u830 14D4                                  u910 125A  
                                u671 1A6A                                  u751 13D8  
                                u831 14D0                                  u911 1256  
                                u760 13F6                                  u840 14F2  
                                u680 1A18                                  u920 1278  
                                u761 13F2                                  u841 14EE  
                                u681 1A14                                  u921 1274  
                                u690 16C0                                  u930 18B0  
                                u770 141C                                  u850 1508  
                                u691 16BC                                  u931 18AC  
                                u771 1418                                  u851 1504  
                                u940 18EA                                  u780 143A  
                                u860 152C                                  u941 18E6  
                                u781 1436                                  u861 1528  
                                u790 1456                                  u950 15D2  
                                u870 1868                                  u791 1452  
                                u951 15CE                                  u871 1864  
                                u880 1782                                  u960 15E6  
                                u881 177E                                  u961 15E2  
                                u890 17A2                                  u970 162E  
                                u891 179E                                  u971 162A  
                                u980 156A                                  u990 1580  
                                u991 157C                                  u987 1560  
        EEP_SPI_WriteByte@Fu8Address 0008                SPI_ExchangeBlock@data 0005  
                       ___awmod@sign 0006                                  wreg 000FE8  
                               l2001 19FE                                 l2011 1230  
                               l2003 1216                                 l2101 193A  
                               l2021 124A                                 l2013 1236  
                               l2005 122A                                 l2111 191A  
                               l2103 18EE                                 l2031 1A74  
                               l2023 125A                                 l2015 1238  
                               l2007 122C                                 l2105 18EE  
                               l2121 182A                                 l2041 1A84  
                               l2033 1A7C                                 l2025 1260  
                               l2017 1242                                 l2009 122E  
                               l2201 118A                                 l2107 1904  
                               l2115 1804                                 l2043 1A86  
                               l2035 1A7E                                 l2019 1244  
                               l2027 1264                                 l2203 11A4  
                               l2123 1008                                 l2109 1918  
                               l2117 1810                                 l2037 1A80  
                               l2061 18C0                                 l2053 188E  
                               l2045 1878                                 l2029 1278  
                               l2205 11C6                                 l2141 1040  
                               l2125 101A                                 l2119 1828  
                               l2039 1A82                                 l2071 18D6  
                               l2055 1898                                 l2047 1886  
                               l2311 1392                                 l2207 11FC  
                               l2151 1054                                 l2143 1044  
                               l2135 101E                                 l2127 101A  
                               l2057 189C                                 l2081 15E6  
                               l2073 15BA                                 l2153 1058  
                               l2145 1048                                 l2137 102E  
                               l2129 101A                                 l2067 18C8  
                               l2059 18B2                                 l2091 1580  
                               l2083 15EA                                 l2075 15C2  
                               l2171 10A6                                 l2155 1062  
                               l2147 104C                                 l2139 1030  
                               l1701 1A36                                 l2069 18D2  
                               l2093 1584                                 l2085 1610  
                               l2077 15D2                                 l2181 10EC  
                               l2173 10B0                                 l2165 1080  
                               l2157 106E                                 l2149 1050  
                               l1711 1A46                                 l1703 1A38  
                               l2095 1920                                 l2087 153E  
                               l2079 15D6                                 l2191 113A  
                               l2183 10FC                                 l2175 10BC  
                               l2167 1094                                 l2159 107C  
                               l1801 1A9C                                 l1721 1A52  
                               l1713 1A4A                                 l1705 1A3A  
                               l2097 192C                                 l2089 1544  
                               l2185 110C                                 l2177 10CC  
                               l2169 1096                                 l1811 1984  
                               l1803 1AA2                                 l1731 1666  
                               l1723 1A54                                 l1715 1A4C  
                               l1707 1A3C                                 l2099 1938  
                               l2195 114E                                 l2179 10DC  
                               l2187 111C                                 l1813 198E  
                               l1805 197C                                 l1733 1668  
                               l1741 168C                                 l1725 1A56  
                               l1717 1A4E                                 l1709 1A42  
                               l1901 152C                                 l2197 1150  
                               l2189 1124                                 l1823 19A6  
                               l1815 1990                                 l1807 197C  
                               l1735 166E                                 l1743 1690  
                               l1727 1630                                 l1719 1A50  
                               l1831 13DC                                 l1903 1534  
                               l1751 1A04                                 l1911 1868  
                               l2199 1168                                 l1817 19A0  
                               l1809 197E                                 l1745 16A2  
                               l1737 167E                                 l1729 164E  
                               l1921 1782                                 l1841 1402  
                               l1833 13E4                                 l1753 1A04  
                               l1913 1870                                 l1739 1684  
                               l1691 1A28                                 l1931 17AE  
                               l1923 1788                                 l1771 16CC  
                               l1763 16A8                                 l1851 143A  
                               l1843 140A                                 l1835 13E8  
                               l1827 13CA                                 l1755 1A18  
                               l1907 183E                                 l1749 1A5C  
                               l1685 1950                                 l1693 1A2C  
                               l1925 178E                                 l1933 17B2  
                               l1917 176A                                 l1781 1706  
                               l1773 16E0                                 l1765 16AC  
                               l1861 1466                                 l1853 1440  
                               l1845 141C                                 l1837 13F6  
                               l1829 13CE                                 l1757 1A1E  
                               l1941 1336                                 l1909 1854  
                               l1791 1720                                 l1687 1968  
                               l1695 1A30                                 l1927 17A2  
                               l1919 176E                                 l1783 170C  
                               l1775 16E6                                 l1767 16C0  
                               l1855 1456                                 l1847 1424  
                               l1863 146C                                 l1839 13FE  
                               l1871 148E                                 l1759 1A24  
                               l1951 1368                                 l1943 1340  
                               l1793 173C                                 l1961 17B8  
                               l1689 196A                                 l1697 1A32  
                               l1929 17A8                                 l1777 16EC  
                               l1769 16C6                                 l1785 1710  
                               l1865 147C                                 l1857 145E  
                               l1849 142C                                 l1881 14BA  
                               l1873 1492                                 l1945 134A  
                               l1937 12FA                                 l1795 1748  
                               l1971 17E8                                 l1963 17C8  
                               l1699 1A34                                 l1779 1700  
                               l1867 1484                                 l1859 1460  
                               l1891 14F2                                 l1883 14C2  
                               l1875 14A0                                 l1947 1354  
                               l1955 1372                                 l1939 1324  
                               l1797 174C                                 l1789 1714  
                               l1973 17EA                                 l1965 17CC  
                               l1893 1508                                 l1885 14D4  
                               l1877 14A8                                 l1949 135E  
                               l1981 19EA                                 l1799 1A9A  
                               l1975 17FE                                 l1967 17D0  
                               l1895 1510                                 l1887 14DC  
                               l1879 14AC                                 l1991 19F4  
                               l1983 19EC                                 l1969 17E4  
                               l1897 1516                                 l1889 14E4  
                               l1993 19F6                                 l1985 19EE  
                               l1977 19D6                                 l1899 151C  
                               l1995 19F8                                 l1987 19F0  
                               l1979 19E8                                 l1997 19FA  
                               l1989 19F2                                 l1999 19FC  
                        main@tu8Data 0014                                 STR_1 1001  
                               u1000 15A6                                 u1010 15B6  
                               u1011 15B2                                 u1020 194C  
                               u1100 10EC                                 u1021 1948  
                               u1101 10E8                                 u1030 1902  
                               u1110 10FC                                 u1031 18FE  
                               u1007 159C                                 u1111 10F8  
                               u1040 183C                                 u1120 110C  
                               u1041 1838                                 u1121 1108  
                               u1130 111C                                 u1131 1118  
                               u1051 1012                                 u1140 114A  
                               u1060 1040                                 u1141 1146  
                               u1061 103C                                 u1070 10A6  
                               u1071 10A2                                 u1080 10CC  
                               u1081 10C8                                 u1090 10DC  
                               u1091 10D8                                 _LATH 000F90  
                               _LATJ 000F91             __end_of_EEP_SPI_ReadByte 191E  
                               _main 1008                     ?_drawVericalLine 000F  
                               fsr1h 000FE2                                 fsr2h 000FDA  
                               indf1 000FE7                                 indf2 000FDF  
                               fsr1l 000FE1                                 fsr2l 000FD9  
             SPI_ExchangeBlock@block 0001           ?_EEP_SPI_IsWriteInProgress 0001  
         SPI_ExchangeBlock@blockSize 0003                                 prodh 000FF4  
                               prodl 000FF3                                 start 0000  
             __end_of_SPI_Initialize 1A8A         EEP_SPI_WriteBytes@Fu8Address 000F  
                       ___param_bank 000000                     ??_wait_status_ok 0002  
             EEP_SPI_WriteByte@F6484 004C                                ?_main 0001  
                    __end_of___awdiv 148E                      __end_of___awmod 153E  
                    ___awdiv@divisor 0003                      ___awdiv@counter 0005  
                              _PORTH 000F87                                _TRISH 000F99  
                              _TRISJ 000F9A                          _write_c_aff 1A40  
                        _write_d_aff 1A26                      write_d_aff@data 0001  
                    __end_of_command 1A26                                _plot1 12F8  
         __end_of_EEP_SPI_WriteBytes 183E                                tablat 000FF5  
              __end_of_delai_us_char 197C                                plusw1 000FE3  
                              plusw2 000FDB                      _check_status_ok 183E  
                              status 000FD8    __end_of_EEP_SPI_IsWriteInProgress 19AA  
                    ?_SPI_Initialize 0001                      __initialization 19AA  
                       __end_of_main 1216                               ??_main 0013  
                      __activetblptr 000003             __end_of_SPI_ExchangeByte 1A74  
                             ?_plot1 0009                               _ANCON0 000F25  
                             _ANCON1 000F24                               _ANCON2 000F23  
                   ___awdiv@dividend 0001                               _MEMCON 000F26  
                          ??___awdiv 0005                            ??___awmod 0005  
         EEP_SPI_ReadByte@u8ReadData 0004                     ___awdiv@quotient 0007  
                    ___awmod@divisor 0003                               isa$std 000001  
                    ___awmod@counter 0005                            ??_command 0005  
                       __pdataCOMRAM 003C                               plot1@x 000E  
                             plot1@y 0009                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8              __end_of_check_status_ok 1878  
                         __accesstop 0060              __end_of__initialization 19D0  
                      ___rparam_used 000001                       __pcstackCOMRAM 0001  
                  __end_of_d1command 17B6                    __end_of_d2command 1714  
                 _EEP_SPI_Initialize 1AA6                        __end_of_plot1 13CA  
                ?_EEP_SPI_Initialize 0001                              ??_plot1 000A  
                  ?_EEP_SPI_ReadByte 0001                 ??_EEP_SPI_Initialize 0001  
                     _clear_graphics 18B2          ??_EEP_SPI_IsWriteInProgress 0002  
                 ??_EEP_SPI_ReadByte 0003             EEP_SPI_WriteByte@Fu8Data 0007  
                         _clear_text 1878                         ?_write_c_aff 0001  
                       ?_write_d_aff 0001             _initialisation_afficheur 1216  
                   ?_check_status_ok 0001                              _SSP2BUF 000F6A  
                  wait_status_ok@err 0002                    wait_status_ok@res 0004  
           EEP_SPI_WriteByte@tu8Data 0009                     ??_SPI_Initialize 0001  
             __end_of_clear_graphics 18EC             _initialisation_des_ports 19D6  
                            __Hparam 0000                              __Lparam 0000  
                 _EEP_SPI_WriteBytes 1802                              ___awdiv 13CA  
                            ___awmod 148E                  _EEP_SPI_EnableWrite 1A9A  
                       __psmallconst 1000                              __pcinit 19AA  
                            __ramtop 1000                  ?_EEP_SPI_WriteBytes 000C  
                            __ptext0 1008                              __ptext1 19D6  
                            __ptext2 1216                              __ptext3 183E  
                            __ptext4 15B8                              __ptext5 153E  
                            __ptext6 191E                              __ptext7 12F8  
                            __ptext8 1A02                              __ptext9 148E  
                            _command 1A02            _EEP_SPI_IsWriteInProgress 197C  
                 draw_string@tableau 0008                     ___awmod@dividend 0001  
                  __end_of_goto_lico 1630            EEP_SPI_WriteBytes@Fu8Size 000E  
               ?_EEP_SPI_EnableWrite 0001                    ?_SPI_ExchangeByte 0001  
               end_of_initialization 19D0                   ??_SPI_ExchangeByte 0001  
               ??_EEP_SPI_WriteBytes 000F                      ?_clear_graphics 0001  
          EEP_SPI_WriteBytes@u8Index 0010                          ?_clear_text 0001  
                            postdec1 000FE5                              postinc0 000FEE  
                       goto_lico@adr 000D                            _TRISAbits 000F92  
     EEP_SPI_IsWriteInProgress@u8WIP 0002                            _TRISCbits 000F94  
                          _TRISDbits 000F95                            _TRISFbits 000F97  
                          _TRISGbits 000F98                ??_EEP_SPI_EnableWrite 0002  
                  clear_graphics@add 0009                           command@cmd 0005  
                 check_status_ok@res 0001                 SPI_ExchangeByte@data 0001  
                      __pidataCOMRAM 1A8A                            _d1command 1768  
                          _d2command 16A6                        ??_draw_string 000A  
                  ??_drawVericalLine 0011                  start_initialization 19AA  
                      _delai_us_char 194E                main@tu8DataFromEEPROM 0024  
         ??_initialisation_afficheur 0009                        clear_text@add 0009  
                         ?_d1command 0005                 delai_us_char@ucdelai 0001  
                         ?_d2command 0005               drawVericalLine@colonne 000F  
                        __pbssCOMRAM 004C           ??_initialisation_des_ports 0001  
                __end_of_draw_string 15B8                       ?_delai_us_char 0001  
                          _main$1411 0038                             ?___awdiv 0001  
                           ?___awmod 0001                             ?_command 0001  
                     _wait_status_ok 1630                          __smallconst 1000  
                   goto_lico@colonne 0009                    _EEP_SPI_WriteByte 17B6  
                        _PADCFG1bits 000F53                     ??_clear_graphics 0009  
                 ?_EEP_SPI_WriteByte 0007                   write_c_aff@command 0001  
                          _goto_lico 15B8                             _LATCbits 000F8B  
                           _LATFbits 000F8E                             _LATGbits 000F8F  
                           _LATJbits 000F91                  ??_EEP_SPI_WriteByte 0008  
                           _PIR2bits 000FA1                         ??_clear_text 0009  
                          main@F6477 003C                             _SSP2CON1 000F67  
                           _SSP2STAT 000F68               __end_of_wait_status_ok 16A6  
                        ??_d1command 0006                          ??_d2command 0007  
                          main@u8Cpt 003B                          _draw_string 153E  
          __end_of_EEP_SPI_WriteByte 1802                          _INTCON2bits 000FF1  
                    ??_delai_us_char 0001                            copy_data0 19BE  
                 __end_of_clear_text 18B2                           ?_goto_lico 0009  
                           __Hrparam 0000                             __Lrparam 0000  
                    _drawVericalLine 191E     __end_of_initialisation_afficheur 12F8  
              drawVericalLine@lenght 0010                     _EEP_SPI_ReadByte 18EC  
                    ?_wait_status_ok 0001  initialisation_afficheur@error_count 0009  
        __end_of_EEP_SPI_EnableWrite 1AA6     __end_of_initialisation_des_ports 1A02  
                           __ptext10 13CA                             __ptext11 1878  
                           __ptext20 1802                             __ptext12 18B2  
                           __ptext21 17B6                             __ptext13 16A6  
                           __ptext22 1714                             __ptext14 1768  
                           __ptext23 1A9A                             __ptext15 1A26  
                           __ptext24 18EC                             __ptext16 1A40  
                           __ptext25 197C                             __ptext17 1630  
                           __ptext26 1A5A                             __ptext18 194E  
                           __ptext27 1AA6                             __ptext19 1A74  
                       _SSP2CON1bits 000F67                             isa$xinst 000000  
                  _SPI_ExchangeBlock 1714                    ??_check_status_ok 0001  
                 ?_SPI_ExchangeBlock 0001           EEP_SPI_WriteBytes@Fpu8Data 000C  
                      ??_write_c_aff 0001                        ??_write_d_aff 0001  
                ??_SPI_ExchangeBlock 0005                 drawVericalLine@index 0012  
               drawVericalLine@ligne 0011                          ??_goto_lico 000A  
                           plot1@add 000C              __end_of_drawVericalLine 194E  
                     goto_lico@ligne 000C            __end_of_SPI_ExchangeBlock 1768  
                   _SPI_ExchangeByte 1A5A                         d1command@cmd 0005  
                       d1command@res 0007                          d1command@d1 0006  
                __end_of_write_c_aff 1A5A                  __end_of_write_d_aff 1A40  
                       d2command@cmd 0006            ?_initialisation_afficheur 0001  
                       d2command@res 0008           __end_of_EEP_SPI_Initialize 1AA8  
               wait_status_ok@status 0003                          d2command@d1 0007  
                        d2command@d2 0005           EEP_SPI_ReadByte@Fu8Address 0003  
